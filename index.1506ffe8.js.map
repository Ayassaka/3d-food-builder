{"mappings":"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","sources":["node_modules/three/build/three.module.js","node_modules/file-saver/src/FileSaver.js","src/FiraSansHeavyRegular.json","src/index.js"],"sourcesContent":["/**\n * @license\n * Copyright 2010-2021 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '129';\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst FlatShading = 1;\nconst SmoothShading = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst CubeUVRefractionMapping = 307;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedShort565Type = 1019;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst RGBEFormat = RGBAFormat;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBIntegerFormat = 1032;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst SRGB8_ALPHA8_ASTC_4x4_Format = 37840;\nconst SRGB8_ALPHA8_ASTC_5x4_Format = 37841;\nconst SRGB8_ALPHA8_ASTC_5x5_Format = 37842;\nconst SRGB8_ALPHA8_ASTC_6x5_Format = 37843;\nconst SRGB8_ALPHA8_ASTC_6x6_Format = 37844;\nconst SRGB8_ALPHA8_ASTC_8x5_Format = 37845;\nconst SRGB8_ALPHA8_ASTC_8x6_Format = 37846;\nconst SRGB8_ALPHA8_ASTC_8x8_Format = 37847;\nconst SRGB8_ALPHA8_ASTC_10x5_Format = 37848;\nconst SRGB8_ALPHA8_ASTC_10x6_Format = 37849;\nconst SRGB8_ALPHA8_ASTC_10x8_Format = 37850;\nconst SRGB8_ALPHA8_ASTC_10x10_Format = 37851;\nconst SRGB8_ALPHA8_ASTC_12x10_Format = 37852;\nconst SRGB8_ALPHA8_ASTC_12x12_Format = 37853;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst LinearEncoding = 3000;\nconst sRGBEncoding = 3001;\nconst GammaEncoding = 3007;\nconst RGBEEncoding = 3002;\nconst LogLuvEncoding = 3003;\nconst RGBM7Encoding = 3004;\nconst RGBM16Encoding = 3005;\nconst RGBDEncoding = 3006;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [];\n\nfor ( let i = 0; i < 256; i ++ ) {\n\n\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n}\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toUpperCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidian modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t\t } else {\n\n\t\treturn 0;\n\n\t\t }\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s % 2147483647;\n\n\t// Park-Miller algorithm\n\n\t_seed = _seed * 16807 % 2147483647;\n\n\treturn ( _seed - 1 ) / 2147483646;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nvar MathUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler\n});\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\nVector2.prototype.isVector2 = true;\n\nclass Matrix3 {\n\n\tconstructor() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tscale( sx, sy ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tconst te = this.elements;\n\n\t\tconst a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tconst a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nMatrix3.prototype.isMatrix3 = true;\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n}\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding ) {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.image = image;\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding;\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tconst image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tlet url;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\turl = [];\n\n\t\t\t\t\tfor ( let i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t// check cube texture with data textures\n\n\t\t\t\t\t\tif ( image[ i ].isDataTexture ) {\n\n\t\t\t\t\t\t\turl.push( serializeImage( image[ i ].image ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\turl.push( serializeImage( image[ i ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// process single image\n\n\t\t\t\t\turl = serializeImage( image );\n\n\t\t\t\t}\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: url\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype.isTexture = true;\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.prototype.slice.call( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\nVector4.prototype.isVector4 = true;\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n\n\tconstructor( width, height, options ) {\n\n\t\tsuper();\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\toptions = options || {};\n\n\t\tthis.texture = new Texture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.texture.image = {};\n\t\tthis.texture.image.width = width;\n\t\tthis.texture.image.height = height;\n\t\tthis.texture.image.depth = 1;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t}\n\n\tsetTexture( texture ) {\n\n\t\ttexture.image = {\n\t\t\twidth: this.width,\n\t\t\theight: this.height,\n\t\t\tdepth: this.depth\n\t\t};\n\n\t\tthis.texture = texture;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.image = { ...this.texture.image }; // See #20328.\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nWebGLRenderTarget.prototype.isWebGLRenderTarget = true;\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width, height, count ) {\n\n\t\tsuper( width, height );\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.set( 0, 0, this.width, this.height );\n\t\tthis.scissor.set( 0, 0, this.width, this.height );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nWebGLMultipleRenderTargets.prototype.isWebGLMultipleRenderTargets = true;\n\nclass WebGLMultisampleRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, options ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.samples = 4;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy.call( this, source );\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n}\n\nWebGLMultisampleRenderTarget.prototype.isWebGLMultisampleRenderTarget = true;\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerp( qa, qb, qm, t ) {\n\n\t\tconsole.warn( 'THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.' );\n\t\treturn qm.slerpQuaternions( qa, qb, t );\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\tthis.copy( qa ).slerp( qb, t );\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n}\n\nQuaternion.prototype.isQuaternion = true;\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\nVector3.prototype.isVector3 = true;\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tconst x = array[ i ];\n\t\t\tconst y = array[ i + 1 ];\n\t\t\tconst z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tconst x = attribute.getX( i );\n\t\t\tconst y = attribute.getY( i );\n\t\t\tconst z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\t_box$3.copy( geometry.boundingBox );\n\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\tthis.union( _box$3 );\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$3.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$3, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$3 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$b.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.error( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t//target = new Sphere(); // removed to avoid cyclic dependency\n\n\t\t}\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nBox3.prototype.isBox3 = true;\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the seperating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is seperating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _toFarthestPoint = /*@__PURE__*/ new Vector3();\nconst _toPoint = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$2.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n\n\t\t_toPoint.subVectors( point, this.center );\n\n\t\tconst lengthSq = _toPoint.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\t\t\tconst missingRadiusHalf = ( length - this.radius ) * 0.5;\n\n\t\t\t// Nudge this sphere towards the target point. Add half the missing distance to radius,\n\t\t\t// and the other half to position. This gives a tighter enclosure, instead of if\n\t\t\t// the whole missing distance were just added to radius.\n\n\t\t\tthis.center.add( _toPoint.multiplyScalar( missingRadiusHalf / length ) );\n\t\t\tthis.radius += missingRadiusHalf;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n\n\t\t// To enclose another sphere into this sphere, we only need to enclose two points:\n\t\t// 1) Enclose the farthest point on the other sphere into this sphere.\n\t\t// 2) Enclose the opposite point of the farthest point into this sphere.\n\n\t\t_toFarthestPoint.subVectors( sphere.center, this.center ).normalize().multiplyScalar( sphere.radius );\n\n\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _toFarthestPoint ) );\n\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _toFarthestPoint ) );\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\tconst c = - ( far + near ) / ( far - near );\n\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\t\tconst z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nMatrix4.prototype.isMatrix4 = true;\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DefaultOrder ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order, update ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$1.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$1, order, update );\n\n\t}\n\n\tsetFromVector3( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\ttoVector3( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n}\n\nEuler.prototype.isEuler = true;\n\nEuler.DefaultOrder = 'XYZ';\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender() {}\n\tonAfterRender() {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\ttarget = new Quaternion();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast() {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype.isObject3D = true;\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2$1.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nPlane.prototype.isPlane = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.set( 0, 0 );\n\t\ttarget.addScaledVector( uv1, _v3$1.x );\n\t\ttarget.addScaledVector( uv2, _v3$1.y );\n\t\ttarget.addScaledVector( uv3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Plane();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nlet materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.fog = true;\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaTest = 0;\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen && this.sheen.isColor ) data.sheen = this.sheen.getHex();\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.morphNormals === true ) data.morphNormals = true;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nMaterial.prototype.isMaterial = true;\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tconst l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopyGammaToLinear( color, gammaFactor = 2.0 ) {\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToGamma( color, gammaFactor = 2.0 ) {\n\n\t\tconst safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t}\n\n\tconvertGammaToLinear( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToGamma( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex() {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t}\n\n\tgetHexString() {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle() {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\tif ( attribute.normalized === true ) {\n\n\t\t\t// assuming Uint8Array\n\n\t\t\tthis.r /= 255;\n\t\t\tthis.g /= 255;\n\t\t\tthis.b /= 255;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n}\n\nColor.NAMES = _colorKeywords;\n\nColor.prototype.isColor = true;\nColor.prototype.r = 1;\nColor.prototype.g = 1;\nColor.prototype.b = 1;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  morphTargets: <bool>\n * }\n */\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tcopyColorsArray( colors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tlet color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector2sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector3sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector4sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2.fromBufferAttribute( this, i );\n\t\t\t\t_vector2.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2.x, _vector2.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.x = this.getX( i );\n\t\t\t_vector$9.y = this.getY( i );\n\t\t\t_vector$9.z = this.getZ( i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.x = this.getX( i );\n\t\t\t_vector$9.y = this.getY( i );\n\t\t\t_vector$9.z = this.getZ( i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.x = this.getX( i );\n\t\t\t_vector$9.y = this.getY( i );\n\t\t\t_vector$9.z = this.getZ( i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.prototype.slice.call( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n}\n\nBufferAttribute.prototype.isBufferAttribute = true;\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nFloat16BufferAttribute.prototype.isFloat16BufferAttribute = true;\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tlet max = array[ 0 ];\n\n\tfor ( let i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nlet _id = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$1.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeFaceNormals() {\n\n\t\t// backwards compatibility\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( attributes.tangent === undefined ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = attributes.tangent.array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tmerge( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tconst attribute1 = attributes[ key ];\n\t\t\tconst attributeArray1 = attribute1.array;\n\n\t\t\tconst attribute2 = geometry.attributes[ key ];\n\t\t\tconst attributeArray2 = attribute2.array;\n\n\t\t\tconst attributeOffset = attribute2.itemSize * offset;\n\t\t\tconst length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n\n\t\t\tfor ( let i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t const parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t const values = [];\n\n\t\t for ( const key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t const geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nBufferGeometry.prototype.isBufferGeometry = true;\n\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _tempB = /*@__PURE__*/ new Vector3();\nconst _tempC = /*@__PURE__*/ new Vector3();\n\nconst _morphA = /*@__PURE__*/ new Vector3();\nconst _morphB = /*@__PURE__*/ new Vector3();\nconst _morphC = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$3.copy( geometry.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// Check boundingBox before continuing\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\tlet intersection;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\t\tconst uv = geometry.attributes.uv;\n\t\t\tconst uv2 = geometry.attributes.uv2;\n\t\t\tconst groups = geometry.groups;\n\t\t\tconst drawRange = geometry.drawRange;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t// indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tconst end = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tconst end = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\tconst a = i;\n\t\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t}\n\n}\n\nMesh.prototype.isMesh = true;\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n\n\t_vA$1.fromBufferAttribute( position, a );\n\t_vB$1.fromBufferAttribute( position, b );\n\t_vC$1.fromBufferAttribute( position, c );\n\n\tconst morphInfluences = object.morphTargetInfluences;\n\n\tif ( material.morphTargets && morphPosition && morphInfluences ) {\n\n\t\t_morphA.set( 0, 0, 0 );\n\t\t_morphB.set( 0, 0, 0 );\n\t\t_morphC.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\tconst influence = morphInfluences[ i ];\n\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t_tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t_tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t_tempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t} else {\n\n\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA$1 ), influence );\n\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB$1 ), influence );\n\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC$1 ), influence );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_vA$1.add( _morphA );\n\t\t_vB$1.add( _morphB );\n\t\t_vC$1.add( _morphC );\n\n\t}\n\n\tif ( object.isSkinnedMesh ) {\n\n\t\tobject.boneTransform( a, _vA$1 );\n\t\tobject.boneTransform( b, _vB$1 );\n\t\tobject.boneTransform( c, _vC$1 );\n\n\t}\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv2 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv2, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv2, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv2, c );\n\n\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n/**\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.morphTargets = false; // set to use morph targets\n\t\tthis.morphNormals = false; // set to use morph normals\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nCamera.prototype.isCamera = true;\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nPerspectiveCamera.prototype.isPerspectiveCamera = true;\n\nconst fov = 90, aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget !== true ) {\n\n\t\t\tconsole.error( 'THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\t\tformat = format !== undefined ? format : RGBFormat;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\t// Why CubeTexture._needsFlipEnvMap is necessary:\n\t\t//\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag _needsFlipEnvMap controls this conversion. The flip is not required (and thus _needsFlipEnvMap is set to false)\n\t\t// when using WebGLCubeRenderTarget.texture as a cube texture.\n\n\t\tthis._needsFlipEnvMap = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nCubeTexture.prototype.isCubeTexture = true;\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size, options, dummy ) {\n\n\t\tif ( Number.isInteger( options ) ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )' );\n\n\t\t\toptions = dummy;\n\n\t\t}\n\n\t\tsuper( size, size, options );\n\n\t\toptions = options || {};\n\n\t\tthis.texture = new CubeTexture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.texture._needsFlipEnvMap = false;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.format = RGBAFormat; // see #18859\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nWebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\n\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$2.center.set( 0, 0, 0 );\n\t\t_sphere$2.radius = 0.7071067811865476;\n\t\t_sphere$2.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type = 5126;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = 5131;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = 5123;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = 5121;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie(float roughness, float NoH) {\\n\\tfloat invAlpha = 1.0 / roughness;\\n\\tfloat cos2h = NoH * NoH;\\n\\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\\n}\\nfloat V_Neubelt(float NoV, float NoL) {\\n\\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\\n}\\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 H = normalize( V + L );\\n\\tfloat dotNH = saturate( dot( N, H ) );\\n\\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\\n}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_maxMipLevel 8.0\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_maxTileSize 256.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\\n\\t\\tvec2 f = fract( uv );\\n\\t\\tuv += 0.5 - f;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tif ( mipInt < cubeUV_maxMipLevel ) {\\n\\t\\t\\tuv.y += 2.0 * cubeUV_maxTileSize;\\n\\t\\t}\\n\\t\\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n\\t\\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\\n\\t\\tuv *= texelSize;\\n\\t\\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x += texelSize;\\n\\t\\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.y += texelSize;\\n\\t\\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x -= texelSize;\\n\\t\\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\treturn mix( tm, bm, f.y );\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value ) {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\\n#ifdef REFLECTIVITY\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), rawDiffuseColor, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), rawDiffuseColor, metalnessFactor );\\n#endif\\n#ifdef CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheen;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularRoughness;\\n\\tvec3 specularColor;\\n#ifdef CLEARCOAT\\n\\tfloat clearcoat;\\n\\tfloat clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tvec3 sheenColor;\\n#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = ccDotNL * directLight.color;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tccIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t\\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\\n\\t\\t\\tmaterial.specularRoughness,\\n\\t\\t\\tdirectLight.direction,\\n\\t\\t\\tgeometry,\\n\\t\\t\\tmaterial.sheenColor\\n\\t\\t);\\n\\t#else\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\\n\\t#endif\\n\\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t\\tfloat ccDotNL = ccDotNV;\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearcoatInv = 1.0 - clearcoatDHR;\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\\n\\t#ifdef CLEARCOAT\\n\\t\\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSNMAP\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition.xyz / vWorldPosition.w;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n\\tfloat ior = ( 1.0 + 0.4 * reflectivity ) / ( 1.0 - 0.4 * reflectivity );\\n\\tvec3 f0 = vec3( pow( ior - 1.0, 2.0 ) / pow( ior + 1.0, 2.0 ) );\\n\\tvec3 f90 = vec3( 1.0 );\\n\\tvec3 f_transmission = totalTransmission * getIBLVolumeRefraction(\\n\\t\\tnormal, v, viewDir, roughnessFactor, diffuseColor.rgb, f0, f90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationColor, attenuationDistance);\\n\\tdiffuseColor.rgb = mix( diffuseColor.rgb, f_transmission, totalTransmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec4 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay(vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix) {\\n\\t\\tvec3 refractionVector = refract(-v, normalize(n), 1.0 / ior);\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length(vec3(modelMatrix[0].xyz));\\n\\t\\tmodelScale.y = length(vec3(modelMatrix[1].xyz));\\n\\t\\tmodelScale.z = length(vec3(modelMatrix[2].xyz));\\n\\t\\treturn normalize(refractionVector) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness(float roughness, float ior) {\\n\\t\\treturn roughness * clamp(ior * 2.0 - 2.0, 0.0, 1.0);\\n\\t}\\n\\tvec3 getTransmissionSample(vec2 fragCoord, float roughness, float ior) {\\n\\t\\tfloat framebufferLod = log2(transmissionSamplerSize.x) * applyIorToRoughness(roughness, ior);\\n\\t\\treturn texture2DLodEXT(transmissionSamplerMap, fragCoord.xy, framebufferLod).rgb;\\n\\t}\\n\\tvec3 applyVolumeAttenuation(vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance) {\\n\\t\\tif (attenuationDistance == 0.0) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log(attenuationColor) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp(-attenuationCoefficient * transmissionDistance);\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec3 getIBLVolumeRefraction(vec3 n, vec3 v, vec3 viewDir, float perceptualRoughness, vec3 baseColor, vec3 f0, vec3 f90,\\n\\t\\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness, vec3 attenuationColor, float attenuationDistance) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay(n, v, thickness, ior, modelMatrix);\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4(refractedRayExit, 1.0);\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec3 transmittedLight = getTransmissionSample(refractionCoords, perceptualRoughness, ior);\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation(transmittedLight, length(transmissionRay), attenuationColor, attenuationDistance);\\n\\t\\tfloat NdotV = saturate(dot(n, viewDir));\\n\\t\\tvec2 brdf = integrateSpecularBRDF(NdotV, perceptualRoughness);\\n\\t\\tvec3 specularColor = f0 * brdf.x + f90 * brdf.y;\\n\\t\\treturn (1.0 - specularColor) * attenuatedColor * baseColor;\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nvar cube_frag = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nvar meshtoon_frag = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshtoon_vert = \"#define TOON\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshphysical_frag = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define REFLECTIVITY\\n\\t#define CLEARCOAT\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform vec3 attenuationColor;\\n\\tuniform float attenuationDistance;\\n#endif\\n#ifdef REFLECTIVITY\\n\\tuniform float reflectivity;\\n#endif\\n#ifdef CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheen;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <transmission_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat totalTransmission = transmission;\\n\\t\\tfloat thicknessFactor = thickness;\\n\\t#endif\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\tvec3 rawDiffuseColor = diffuseColor.rgb;\\n\\t#include <transmission_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshphysical_vert = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec4 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition;\\n#endif\\n}\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar shadow_vert = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_frag: background_frag,\n\tbackground_vert: background_vert,\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshmatcap_frag: meshmatcap_frag,\n\tmeshmatcap_vert: meshmatcap_vert,\n\tmeshtoon_frag: meshtoon_frag,\n\tmeshtoon_vert: meshtoon_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert,\n\tsprite_frag: sprite_frag,\n\tsprite_vert: sprite_vert\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\t\tuv2Transform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.envmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatNormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tsheen: { value: new Color( 0x000000 ) },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionSamplerSize: { value: new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: new Color( 0x000000 ) }\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nfunction WebGLBackground( renderer, cubemaps, state, objects, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = 0;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tbackground = cubemaps.get( background );\n\n\t\t}\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tconst xr = renderer.xr;\n\t\tconst session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background._needsFlipEnvMap ) ? - 1 : 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( 34921 );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( geometry, index );\n\n\t\t\tif ( updateBuffers ) saveCache( geometry, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh === true ) {\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( 34963, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( geometry, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tfor ( const key in geometryAttributes ) {\n\n\t\t\tconst cachedAttribute = cachedAttributes[ key ];\n\t\t\tconst geometryAttribute = geometryAttributes[ key ];\n\n\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\tif ( cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\tattributesNum ++;\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( geometry, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tconst data = {};\n\t\t\tdata.attribute = attribute;\n\n\t\t\tif ( attribute.data ) {\n\n\t\t\t\tdata.data = attribute.data;\n\n\t\t\t}\n\n\t\t\tcache[ key ] = data;\n\n\t\t\tattributesNum ++;\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\tif ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tconst geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\tvertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\tvertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( name === 'instanceMatrix' ) {\n\n\t\t\t\t\tconst attribute = attributes.get( object.instanceMatrix );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 0, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 1, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 2, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 3, 1 );\n\n\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 0, 4, type, false, 64, 0 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 1, 4, type, false, 64, 16 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 2, 4, type, false, 64, 32 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 3, 4, type, false, 64, 48 );\n\n\t\t\t\t} else if ( name === 'instanceColor' ) {\n\n\t\t\t\t\tconst attribute = attributes.get( object.instanceColor );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute, 1 );\n\n\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute, 3, type, false, 12, 0 );\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatilibity\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\t/* eslint-disable no-undef */\n\tconst isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\t/* eslint-enable no-undef */\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( 34930 );\n\tconst maxVertexTextures = gl.getParameter( 35660 );\n\tconst maxTextureSize = gl.getParameter( 3379 );\n\tconst maxCubemapSize = gl.getParameter( 34076 );\n\n\tconst maxAttributes = gl.getParameter( 34921 );\n\tconst maxVertexUniforms = gl.getParameter( 36347 );\n\tconst maxVaryings = gl.getParameter( 36348 );\n\tconst maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\tlet influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tconst influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tworkInfluences.sort( numericalSort );\n\n\t\tconst morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tconst morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\tlet morphInfluencesSum = 0;\n\n\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\tconst influence = workInfluences[ i ];\n\t\t\tconst index = influence[ 0 ];\n\t\t\tconst value = influence[ 1 ];\n\n\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t} else {\n\n\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tattributes.update( object.instanceMatrix, 34962 );\n\n\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\tattributes.update( object.instanceColor, 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass DataTexture2DArray extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\nclass DataTexture3D extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nDataTexture3D.prototype.isDataTexture3D = true;\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nconst emptyTexture = new Texture();\nconst emptyTexture2dArray = new DataTexture2DArray();\nconst emptyTexture3d = new DataTexture3D();\nconst emptyCubeTexture = new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || emptyTexture3d, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyTexture2dArray, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tconst cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n\n\tconst seq = this.seq;\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program ) {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n\tconst n = gl.getProgramParameter( program, 35718 );\n\n\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n\n\tconst u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tconst v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, textures ) {\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tconst r = [];\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nlet programIdCount = 0;\n\nfunction addLineNumbers( string ) {\n\n\tconst lines = string.split( '\\n' );\n\n\tfor ( let i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tcase LogLuvEncoding:\n\t\t\treturn [ 'LogLuv', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, 35713 );\n\tconst log = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && log === '' ) return '';\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\tconst source = gl.getShaderSource( shader );\n\n\treturn 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers( source );\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission > 0.0 ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string\n\t\t.replace( unrollLoopPattern, loopReplacer )\n\t\t.replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );\n\n}\n\nfunction deprecatedLoopReplacer( match, start, end, snippet ) {\n\n\tconsole.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );\n\treturn loopReplacer( match, start, end, snippet );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\n\n\tconst gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t( ( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.map ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.matcap ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\tparameters.envMap ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMap ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.lightMap ? getTexelDecodingFunction( 'lightMapTexelToLinear', parameters.lightMapEncoding ) : '',\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter( program, 35715 ), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors );\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst programs = [];\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst floatVertexTextures = capabilities.floatVertexTextures;\n\tconst maxVertexUniforms = capabilities.maxVertexUniforms;\n\tconst vertexTextures = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tconst parameterNames = [\n\t\t'precision', 'isWebGL2', 'supportsVertexTextures', 'outputEncoding', 'instancing', 'instancingColor',\n\t\t'map', 'mapEncoding', 'matcap', 'matcapEncoding', 'envMap', 'envMapMode', 'envMapEncoding', 'envMapCubeUV',\n\t\t'lightMap', 'lightMapEncoding', 'aoMap', 'emissiveMap', 'emissiveMapEncoding', 'bumpMap', 'normalMap', 'objectSpaceNormalMap', 'tangentSpaceNormalMap', 'clearcoatMap', 'clearcoatRoughnessMap', 'clearcoatNormalMap', 'displacementMap', 'specularMap',\n\t\t'roughnessMap', 'metalnessMap', 'gradientMap',\n\t\t'alphaMap', 'combine', 'vertexColors', 'vertexAlphas', 'vertexTangents', 'vertexUvs', 'uvsVertexOnly', 'fog', 'useFog', 'fogExp2',\n\t\t'flatShading', 'sizeAttenuation', 'logarithmicDepthBuffer', 'skinning',\n\t\t'maxBones', 'useVertexTexture', 'morphTargets', 'morphNormals', 'premultipliedAlpha',\n\t\t'numDirLights', 'numPointLights', 'numSpotLights', 'numHemiLights', 'numRectAreaLights',\n\t\t'numDirLightShadows', 'numPointLightShadows', 'numSpotLightShadows',\n\t\t'shadowMapEnabled', 'shadowMapType', 'toneMapping', 'physicallyCorrectLights',\n\t\t'alphaTest', 'doubleSided', 'flipSided', 'numClippingPlanes', 'numClipIntersection', 'depthPacking', 'dithering',\n\t\t'sheen', 'transmission', 'transmissionMap', 'thicknessMap'\n\t];\n\n\tfunction getMaxBones( object ) {\n\n\t\tconst skeleton = object.skeleton;\n\t\tconst bones = skeleton.bones;\n\n\t\tif ( floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tconst nVertexUniforms = maxVertexUniforms;\n\t\t\tconst nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tconst maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map ) {\n\n\t\tlet encoding;\n\n\t\tif ( map && map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map && map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLPrograms.getTextureEncodingFromMap: don\\'t use render targets as textures. Use their .texture property instead.' );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t} else {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = cubemaps.get( material.envMap || environment );\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tconst maxBones = object.isSkinnedMesh ? getMaxBones( object ) : 0;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet vertexShader, fragmentShader;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: material.type,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\toutputEncoding: ( currentRenderTarget !== null ) ? getTextureEncodingFromMap( currentRenderTarget.texture ) : renderer.outputEncoding,\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map ),\n\t\t\tmatcap: !! material.matcap,\n\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap ),\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( envMap ),\n\t\t\tenvMapCubeUV: ( !! envMap ) && ( ( envMap.mapping === CubeUVReflectionMapping ) || ( envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\tlightMapEncoding: getTextureEncodingFromMap( material.lightMap ),\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\t\t\tclearcoatMap: !! material.clearcoatMap,\n\t\t\tclearcoatRoughnessMap: !! material.clearcoatRoughnessMap,\n\t\t\tclearcoatNormalMap: !! material.clearcoatNormalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: !! material.sheen,\n\n\t\t\ttransmission: !! material.transmission,\n\t\t\ttransmissionMap: !! material.transmissionMap,\n\t\t\tthicknessMap: !! material.thicknessMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( material.normalMap && material.vertexTangents ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && object.geometry && object.geometry.attributes.color && object.geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.displacementMap || !! material.transmission || !! material.transmissionMap || !! material.thicknessMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || !! material.transmission || !! material.transmissionMap || !! material.thicknessMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: !! material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.fragmentShader );\n\t\t\tarray.push( parameters.vertexShader );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tfor ( let i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t\t}\n\n\t\t\tarray.push( renderer.outputEncoding );\n\t\t\tarray.push( renderer.gammaFactor );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList( properties ) {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tconst defaultProgram = { id: - 1 };\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: materialProperties.program || defaultProgram,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = materialProperties.program || defaultProgram;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.program = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists( properties ) {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tlet list;\n\n\t\tif ( lists.has( scene ) === false ) {\n\n\t\t\tlist = new WebGLRenderList( properties );\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= lists.get( scene ).length ) {\n\n\t\t\t\tlist = new WebGLRenderList( properties );\n\t\t\t\tlists.get( scene ).push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = lists.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\n\t\tlights.sort( shadowCastingLightsFirst );\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights() {\n\n\t\tlights.setup( lightsArray );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tlet renderState;\n\n\t\tif ( renderStates.has( scene ) === false ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStates.get( scene ).length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStates.get( scene ).push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n/**\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.fog = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nvar vsm_frag = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\\n\\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean * HALF_SAMPLE_RATE;\\n\\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nvar vsm_vert = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterials = [],\n\t\t_distanceMaterials = [],\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\n\t\tdefines: {\n\t\t\tSAMPLE_RATE: 2.0 / 8.0,\n\t\t\tHALF_SAMPLE_RATE: 1.0 / 8.0\n\t\t},\n\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vsm_vert,\n\n\t\tfragmentShader: vsm_frag\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tconst pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tconst pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterialVariant( useMorphing ) {\n\n\t\tconst index = useMorphing << 0;\n\n\t\tlet material = _depthMaterials[ index ];\n\n\t\tif ( material === undefined ) {\n\n\t\t\tmaterial = new MeshDepthMaterial( {\n\n\t\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\t\tmorphTargets: useMorphing\n\n\t\t\t} );\n\n\t\t\t_depthMaterials[ index ] = material;\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\tfunction getDistanceMaterialVariant( useMorphing ) {\n\n\t\tconst index = useMorphing << 0;\n\n\t\tlet material = _distanceMaterials[ index ];\n\n\t\tif ( material === undefined ) {\n\n\t\t\tmaterial = new MeshDistanceMaterial( {\n\n\t\t\t\tmorphTargets: useMorphing\n\n\t\t\t} );\n\n\t\t\t_distanceMaterials[ index ] = material;\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\tfunction getDepthMaterial( object, geometry, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tlet result = null;\n\n\t\tlet getMaterialVariant = getDepthMaterialVariant;\n\t\tlet customMaterial = object.customDepthMaterial;\n\n\t\tif ( light.isPointLight === true ) {\n\n\t\t\tgetMaterialVariant = getDistanceMaterialVariant;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( customMaterial === undefined ) {\n\n\t\t\tlet useMorphing = false;\n\n\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t}\n\n\t\t\tresult = getMaterialVariant( useMorphing );\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, geometry, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, geometry, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tlet enabledCapabilities = {};\n\n\tlet xrFramebuffer = null;\n\tlet currentBoundFramebuffers = {};\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( 35661 );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( 3088 );\n\tconst viewportParam = gl.getParameter( 2978 );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindXRFramebuffer( framebuffer ) {\n\n\t\tif ( framebuffer !== xrFramebuffer ) {\n\n\t\t\tgl.bindFramebuffer( 36160, framebuffer );\n\n\t\t\txrFramebuffer = framebuffer;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( framebuffer === null && xrFramebuffer !== null ) framebuffer = xrFramebuffer; // use active XR framebuffer if available\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// 36009 is equivalent to 36160\n\n\t\t\t\tif ( target === 36009 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36160 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === 36160 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36009 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: 32774,\n\t\t[ SubtractEquation ]: 32778,\n\t\t[ ReverseSubtractEquation ]: 32779\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = 32775;\n\t\tequationToGL[ MaxEquation ] = 32776;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: 0,\n\t\t[ OneFactor ]: 1,\n\t\t[ SrcColorFactor ]: 768,\n\t\t[ SrcAlphaFactor ]: 770,\n\t\t[ SrcAlphaSaturateFactor ]: 776,\n\t\t[ DstColorFactor ]: 774,\n\t\t[ DstAlphaFactor ]: 772,\n\t\t[ OneMinusSrcColorFactor ]: 769,\n\t\t[ OneMinusSrcAlphaFactor ]: 771,\n\t\t[ OneMinusDstColorFactor ]: 775,\n\t\t[ OneMinusDstAlphaFactor ]: 773\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 0, 769, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 769 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( 32926 )\n\t\t\t: disable( 32926 );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( 3042 );\n\t\tgl.disable( 2884 );\n\t\tgl.disable( 2929 );\n\t\tgl.disable( 32823 );\n\t\tgl.disable( 3089 );\n\t\tgl.disable( 2960 );\n\t\tgl.disable( 32926 );\n\n\t\tgl.blendEquation( 32774 );\n\t\tgl.blendFunc( 1, 0 );\n\t\tgl.blendFuncSeparate( 1, 0, 1, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( 513 );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( 519, 0, 0xffffffff );\n\t\tgl.stencilOp( 7680, 7680, 7680 );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( 1029 );\n\t\tgl.frontFace( 2305 );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( 33984 );\n\n\t\tgl.bindFramebuffer( 36160, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( 36009, null );\n\t\t\tgl.bindFramebuffer( 36008, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\txrFramebuffer = null;\n\t\tcurrentBoundFramebuffers = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tbindXRFramebuffer: bindXRFramebuffer,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\tnew OffscreenCanvas( width, height ) :\n\t\t\tdocument.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\ttextureProperties.__maxMipLevel = Math.log2( Math.max( width, height ) );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 6407 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34837;\n\t\t\tif ( glType === 5131 ) internalFormat = 34843;\n\t\t\tif ( glType === 5121 ) internalFormat = 32849;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\tif ( glType === 5121 ) internalFormat = 32856;\n\n\t\t}\n\n\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 35866, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: 10497,\n\t\t[ ClampToEdgeWrapping ]: 33071,\n\t\t[ MirroredRepeatWrapping ]: 33648\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: 9728,\n\t\t[ NearestMipmapNearestFilter ]: 9984,\n\t\t[ NearestMipmapLinearFilter ]: 9986,\n\n\t\t[ LinearFilter ]: 9729,\n\t\t[ LinearMipmapNearestFilter ]: 9985,\n\t\t[ LinearMipmapLinearFilter ]: 9987\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = 3553;\n\n\t\tif ( texture.isDataTexture2DArray ) textureType = 35866;\n\t\tif ( texture.isDataTexture3D ) textureType = 32879;\n\n\t\tinitTexture( textureProperties, texture );\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\tconst image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\n\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\tglFormat = utils.convert( texture.format );\n\n\t\tlet glType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\tlet mipmap;\n\t\tconst mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tglInternalFormat = 6402;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\tglInternalFormat = 35056;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tglInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// validation checks for WebGL 1\n\n\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else if ( texture.isDataTexture2DArray ) {\n\n\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else if ( texture.isDataTexture3D ) {\n\n\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tgenerateMipmap( textureType, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tinitTexture( textureProperties, texture );\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\tconst isCompressed = ( texture && ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture ) );\n\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\tconst cubeImage = [];\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t} else {\n\n\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst image = cubeImage[ 0 ],\n\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\tlet mipmaps;\n\n\t\tif ( isCompressed ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else {\n\n\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length;\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t// We assume images for cube map have the same size.\n\t\t\tgenerateMipmap( 34067, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {\n\n\t\tconst glFormat = utils.convert( texture.format );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\tif ( textureTarget === 32879 || textureTarget === 35866 ) {\n\n\t\t\tstate.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t} else {\n\n\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = 33189;\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\t// Use the first texture for MRT so far\n\t\t\tconst texture = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture[ 0 ] : renderTarget.texture;\n\n\t\t\tconst glFormat = utils.convert( texture.format );\n\t\t\tconst glType = utils.convert( texture.type );\n\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true );\n\t\tconst isRenderTarget3D = texture.isDataTexture3D || texture.isDataTexture2DArray;\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Handles WebGL2 RGBFormat fallback - #18858\n\n\t\tif ( isWebGL2 && texture.format === RGBFormat && ( texture.type === FloatType || texture.type === HalfFloatType ) ) {\n\n\t\t\ttexture.format = RGBAFormat;\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.' );\n\n\t\t}\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( isMultisample ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, null );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 34067, texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 34067, null );\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( 3553, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( 3553, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, 36064 + i, 3553 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( 3553, attachment, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 3553, null );\n\n\t\t} else {\n\n\t\t\tlet glTextureType = 3553;\n\n\t\t\tif ( isRenderTarget3D ) {\n\n\t\t\t\t// Render targets containing layers, i.e: Texture 3D and 2d arrays\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tconst isTexture3D = texture.isDataTexture3D;\n\t\t\t\t\tglTextureType = isTexture3D ? 32879 : 35866;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, 36064, glTextureType );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 3553, texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 3553, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\t\tstate.bindTexture( target, null );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tconst width = renderTarget.width;\n\t\t\t\tconst height = renderTarget.height;\n\t\t\t\tlet mask = 16384;\n\n\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tstate.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t\tstate.bindFramebuffer( 36008, null );\n\t\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn ( isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ?\n\t\t\tMath.min( maxSamples, renderTarget.samples ) : 0;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\t// backwards compatibility\n\n\tlet warnedTexture2D = false;\n\tlet warnedTextureCube = false;\n\n\tfunction safeSetTexture2D( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\tif ( warnedTexture2D === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLTextures.safeSetTexture2D: don\\'t use render targets as textures. Use their .texture property instead.' );\n\t\t\t\twarnedTexture2D = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\t\tsetTexture2D( texture, slot );\n\n\t}\n\n\tfunction safeSetTextureCube( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLCubeRenderTarget ) {\n\n\t\t\tif ( warnedTextureCube === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLTextures.safeSetTextureCube: don\\'t use cube render targets as textures. Use their .texture property instead.' );\n\t\t\t\twarnedTextureCube = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\n\t\tsetTextureCube( texture, slot );\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\n\tthis.safeSetTexture2D = safeSetTexture2D;\n\tthis.safeSetTextureCube = safeSetTextureCube;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\t\tif ( p === UnsignedShort565Type ) return 33635;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBFormat ) return 6407;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\t\tif ( p === RedFormat ) return 6403;\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedIntegerFormat ) return 36244;\n\t\tif ( p === RGFormat ) return 33319;\n\t\tif ( p === RGIntegerFormat ) return 33320;\n\t\tif ( p === RGBIntegerFormat ) return 36248;\n\t\tif ( p === RGBAIntegerFormat ) return 36249;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_4x4_Format || p === SRGB8_ALPHA8_ASTC_5x4_Format || p === SRGB8_ALPHA8_ASTC_5x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_6x5_Format || p === SRGB8_ALPHA8_ASTC_6x6_Format || p === SRGB8_ALPHA8_ASTC_8x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_8x6_Format || p === SRGB8_ALPHA8_ASTC_8x8_Format || p === SRGB8_ALPHA8_ASTC_10x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_10x6_Format || p === SRGB8_ALPHA8_ASTC_10x8_Format || p === SRGB8_ALPHA8_ASTC_10x10_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_12x10_Format || p === SRGB8_ALPHA8_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\t// TODO Complete?\n\n\t\t\t\treturn p;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\t// TODO Complete?\n\n\t\t\t\treturn p;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nArrayCamera.prototype.isArrayCamera = true;\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nGroup.prototype.isGroup = true;\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\t\tconst joint = new Group();\n\t\t\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\t\t\tjoint.visible = false;\n\t\t\t\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\t\t\t\t\t\t// ??\n\t\t\t\t\t\thand.add( joint );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst joint = hand.joints[ inputjoint.jointName ];\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\t\tconst state = renderer.state;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\n\t\tlet pose = null;\n\n\t\tconst controllers = [];\n\t\tconst inputSourcesMap = new Map();\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraVR = new ArrayCamera();\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controller = inputSourcesMap.get( event.inputSource );\n\n\t\t\tif ( controller ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tinputSourcesMap.forEach( function ( controller, inputSource ) {\n\n\t\t\t\tcontroller.disconnect( inputSource );\n\n\t\t\t} );\n\n\t\t\tinputSourcesMap.clear();\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\tstate.bindXRFramebuffer( null );\n\t\t\trenderer.setRenderTarget( renderer.getRenderTarget() );\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn referenceSpace;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tconst attributes = gl.getContextAttributes();\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tconst layerInit = {\n\t\t\t\t\tantialias: attributes.antialias,\n\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t};\n\n\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\tconst baseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\tsession.updateRenderState( { baseLayer: baseLayer } );\n\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\tconst inputSources = session.inputSources;\n\n\t\t\t// Assign inputSources to available controllers\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tinputSourcesMap.set( inputSources[ i ], controllers[ i ] );\n\n\t\t\t}\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\t\t\t\t\tinputSourcesMap.delete( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\t\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update camera and its children\n\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\t\t\tcamera.matrix.copy( cameraVR.matrix );\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\n\t\t\tconst children = camera.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( referenceSpace );\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\t\t\t\tconst baseLayer = session.renderState.baseLayer;\n\n\t\t\t\tstate.bindXRFramebuffer( baseLayer.framebuffer );\n\n\t\t\t\tlet cameraVRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\t\t\t\t\tconst viewport = baseLayer.getViewport( view );\n\n\t\t\t\t\tconst camera = cameras[ i ];\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst inputSources = session.inputSources;\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst controller = controllers[ i ];\n\t\t\t\tconst inputSource = inputSources[ i ];\n\n\t\t\t\tcontroller.update( inputSource, frame, referenceSpace );\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( properties ) {\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsLambert( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t} else {\n\n\t\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDepth( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsNormal( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap._needsFlipEnvMap ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tconst maxMipLevel = properties.get( envMap ).__maxMipLevel;\n\n\t\t\tif ( maxMipLevel !== undefined ) {\n\n\t\t\t\tuniforms.maxMipLevel.value = maxMipLevel;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. displacementMap map\n\t\t// 4. normal map\n\t\t// 5. bump map\n\t\t// 6. roughnessMap map\n\t\t// 7. metalnessMap map\n\t\t// 8. alphaMap map\n\t\t// 9. emissiveMap map\n\t\t// 10. clearcoat map\n\t\t// 11. clearcoat normal map\n\t\t// 12. clearcoat roughnessMap map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t} else if ( material.clearcoatMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatMap;\n\n\t\t} else if ( material.clearcoatNormalMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\n\t\t} else if ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities for uv2\n\t\t// 1. ao map\n\t\t// 2. light map\n\n\t\tlet uv2ScaleMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t} else if ( material.lightMap ) {\n\n\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t}\n\n\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\tif ( material.sheen ) uniforms.sheen.value.copy( material.sheen );\n\n\t\tif ( material.clearcoatMap ) {\n\n\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t}\n\n\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t}\n\n\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.transmission.value = material.transmission;\n\n\t\tif ( material.transmissionMap ) {\n\n\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t}\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t}\n\n\t\tuniforms.thickness.value = material.thickness;\n\n\t\tif ( material.thicknessMap ) {\n\n\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t}\n\n\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nfunction WebGLRenderer( parameters ) {\n\n\tparameters = parameters || {};\n\n\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tlet currentRenderList = null;\n\tlet currentRenderState = null;\n\n\t// render() can be called from within a callback triggered by another render.\n\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\tconst renderListStack = [];\n\tconst renderStateStack = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.outputEncoding = LinearEncoding;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = NoToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\n\t// internal properties\n\n\tconst _this = this;\n\n\tlet _isContextLost = false;\n\n\t// internal state cache\n\n\tlet _currentActiveCubeFace = 0;\n\tlet _currentActiveMipmapLevel = 0;\n\tlet _currentRenderTarget = null;\n\tlet _currentMaterialId = - 1;\n\n\tlet _currentCamera = null;\n\n\tconst _currentViewport = new Vector4();\n\tconst _currentScissor = new Vector4();\n\tlet _currentScissorTest = null;\n\n\t//\n\n\tlet _width = _canvas.width;\n\tlet _height = _canvas.height;\n\n\tlet _pixelRatio = 1;\n\tlet _opaqueSort = null;\n\tlet _transparentSort = null;\n\n\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\tlet _scissorTest = false;\n\n\t//\n\n\tconst _currentDrawBuffers = [];\n\n\t// frustum\n\n\tconst _frustum = new Frustum();\n\n\t// clipping\n\n\tlet _clippingEnabled = false;\n\tlet _localClippingEnabled = false;\n\n\t// transmission\n\n\tlet _transmissionRenderTarget = null;\n\n\t// camera matrices cache\n\n\tconst _projScreenMatrix = new Matrix4();\n\n\tconst _vector3 = new Vector3();\n\n\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tlet _gl = _context;\n\n\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\tconst contextName = contextNames[ i ];\n\t\t\tconst context = _canvas.getContext( contextName, contextAttributes );\n\t\t\tif ( context !== null ) return context;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\ttry {\n\n\t\tconst contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\tcontextNames.shift();\n\n\t\t\t}\n\n\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tlet extensions, capabilities, state, info;\n\tlet properties, textures, cubemaps, attributes, geometries, objects;\n\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tlet utils, bindingStates;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\textensions.init( capabilities );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\t_currentDrawBuffers[ 0 ] = 1029;\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tclipping = new WebGLClipping( properties );\n\t\tprogramCache = new WebGLPrograms( _this, cubemaps, extensions, capabilities, bindingStates, clipping );\n\t\tmaterials = new WebGLMaterials( properties );\n\t\trenderLists = new WebGLRenderLists( properties );\n\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\tbackground = new WebGLBackground( _this, cubemaps, state, objects, _premultipliedAlpha );\n\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.shadowMap = shadowMap;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// xr\n\n\tconst xr = new WebXRManager( _this, _gl );\n\n\tthis.xr = xr;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getsize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( xr.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument' );\n\n\t\t\ttarget = new Vector4();\n\n\t\t}\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\tthis.setOpaqueSort = function ( method ) {\n\n\t\t_opaqueSort = method;\n\n\t};\n\n\tthis.setTransparentSort = function ( method ) {\n\n\t\t_transparentSort = method;\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getClearColor() now requires a Color as an argument' );\n\n\t\t\ttarget = new Color();\n\n\t\t}\n\n\t\treturn target.copy( background.getClearColor() );\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tlet bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= 16384;\n\t\tif ( depth === undefined || depth ) bits |= 256;\n\t\tif ( stencil === undefined || stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tcubemaps.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\n\t\txr.dispose();\n\n\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t_transmissionRenderTarget = null;\n\n\t\t}\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tconst infoAutoReset = info.autoReset;\n\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\tconst shadowMapType = shadowMap.type;\n\n\t\tinitGLContext();\n\n\t\tinfo.autoReset = infoAutoReset;\n\t\tshadowMap.enabled = shadowMapEnabled;\n\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\tshadowMap.type = shadowMapType;\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReferences( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\tconst programs = properties.get( material ).programs;\n\n\t\tif ( programs !== undefined ) {\n\n\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\tbindingStates.initAttributes();\n\n\t\tconst buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.position );\n\t\t\t_gl.bufferData( 34962, object.positionArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.normal );\n\t\t\t_gl.bufferData( 34962, object.normalArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.normal );\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.uv );\n\t\t\t_gl.bufferData( 34962, object.uvArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.uv );\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.color );\n\t\t\t_gl.bufferData( 34962, object.colorArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.color );\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tbindingStates.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( 4, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tconst program = setProgram( camera, scene, material, object );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t//\n\n\t\tlet index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\n\t\t//\n\n\t\tif ( index === null ) {\n\n\t\t\tif ( position === undefined || position.count === 0 ) return;\n\n\t\t} else if ( index.count === 0 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t//\n\n\t\tlet rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tif ( material.morphTargets || material.morphNormals ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t}\n\n\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\tlet attribute;\n\t\tlet renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tconst dataCount = ( index !== null ) ? index.count : position.count;\n\n\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tconst drawStart = Math.max( rangeStart, groupStart );\n\t\tconst drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tconst drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\tconst instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tconst material = object.material;\n\n\t\t\tif ( material ) {\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\tgetProgram( material2, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tfunction onXRSessionStart() {\n\n\t\tanimation.stop();\n\n\t}\n\n\tfunction onXRSessionEnd() {\n\n\t\tanimation.start();\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\txr.setAnimationLoop( callback );\n\n\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t};\n\n\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost === true ) return;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t}\n\n\t\t//\n\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\tcurrentRenderList.init();\n\n\t\trenderListStack.push( currentRenderList );\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tcurrentRenderList.finish();\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights();\n\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene );\n\n\t\t// render scene\n\n\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\tif ( transmissiveObjects.length > 0 ) renderTransmissiveObjects( opaqueObjects, transmissiveObjects, scene, camera );\n\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\t// _gl.finish();\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\trenderStateStack.pop();\n\n\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderState = null;\n\n\t\t}\n\n\t\trenderListStack.pop();\n\n\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderList = null;\n\n\t\t}\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, groupOrder, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderTransmissiveObjects( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1024, 1024, {\n\t\t\t\tgenerateMipmaps: true,\n\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\tmagFilter: NearestFilter,\n\t\t\t\twrapS: ClampToEdgeWrapping,\n\t\t\t\twrapT: ClampToEdgeWrapping\n\t\t\t} );\n\n\t\t}\n\n\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\t\t_this.clear();\n\n\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\trenderObjects( transmissiveObjects, scene, camera );\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\tconst object = renderItem.object;\n\t\t\tconst geometry = renderItem.geometry;\n\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\tconst group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\tcurrentRenderState.setupLightsView( camera2 );\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tconst program = setProgram( camera, scene, material, object );\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tbindingStates.reset();\n\n\t\t\trenderObjectImmediate( object, program );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t}\n\n\tfunction getProgram( material, scene, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst lights = currentRenderState.state.lights;\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tconst lightsStateVersion = lights.state.version;\n\n\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\tlet programs = materialProperties.programs;\n\n\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tmaterialProperties.fog = scene.fog;\n\t\tmaterialProperties.envMap = cubemaps.get( material.envMap || materialProperties.environment );\n\n\t\tif ( programs === undefined ) {\n\n\t\t\t// new material\n\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tprograms = new Map();\n\t\t\tmaterialProperties.programs = programs;\n\n\t\t}\n\n\t\tlet program = programs.get( programCacheKey );\n\n\t\tif ( program !== undefined ) {\n\n\t\t\t// early out if program and light state is identical\n\n\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\treturn program;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\tmaterial.onBuild( parameters, _this );\n\n\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t}\n\n\t\tconst uniforms = materialProperties.uniforms;\n\n\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t}\n\n\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tconst progUniforms = program.getUniforms();\n\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.currentProgram = program;\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\treturn program;\n\n\t}\n\n\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\tmaterialProperties.instancing = parameters.instancing;\n\t\tmaterialProperties.skinning = parameters.skinning;\n\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\n\t}\n\n\tfunction setProgram( camera, scene, material, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\ttextures.resetTextureUnits();\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tconst encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : _currentRenderTarget.texture.encoding;\n\t\tconst envMap = cubemaps.get( material.envMap || environment );\n\t\tconst vertexAlphas = material.vertexColors === true && object.geometry && object.geometry.attributes.color && object.geometry.attributes.color.itemSize === 4;\n\n\t\tconst materialProperties = properties.get( material );\n\t\tconst lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled === true ) {\n\n\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\tconst useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tlet needsProgramChange = false;\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tneedsProgramChange = true;\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\t//\n\n\t\tlet program = materialProperties.currentProgram;\n\n\t\tif ( needsProgramChange === true ) {\n\n\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t}\n\n\t\tlet refreshProgram = false;\n\t\tlet refreshMaterial = false;\n\t\tlet refreshLights = false;\n\n\t\tconst p_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\tobject.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// otherwise textures used for skinning can take over texture units reserved for other material textures\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tlet framebuffer = null;\n\t\tlet isCube = false;\n\t\tlet isRenderTarget3D = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst texture = renderTarget.texture;\n\n\t\t\tif ( texture.isDataTexture3D || texture.isDataTexture2DArray ) {\n\n\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t}\n\n\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tconst framebufferBound = state.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( framebufferBound && capabilities.drawBuffers ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tif ( _currentDrawBuffers.length !== textures.length || _currentDrawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t_currentDrawBuffers[ i ] = 36064 + i;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_currentDrawBuffers.length = textures.length;\n\n\t\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( _currentDrawBuffers.length !== 1 || _currentDrawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\t\t_currentDrawBuffers[ 0 ] = 36064;\n\t\t\t\t\t\t_currentDrawBuffers.length = 1;\n\n\t\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( _currentDrawBuffers.length !== 1 || _currentDrawBuffers[ 0 ] !== 1029 ) {\n\n\t\t\t\t\t_currentDrawBuffers[ 0 ] = 1029;\n\t\t\t\t\t_currentDrawBuffers.length = 1;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t_gl.drawBuffers( _currentDrawBuffers );\n\n\t\t\t\t} else {\n\n\t\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( _currentDrawBuffers );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t_gl.framebufferTextureLayer( 36160, 36064, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\ttry {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\tconst levelScale = Math.pow( 2, - level );\n\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\tlet glFormat = utils.convert( texture.format );\n\n\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t// Workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=1120100\n\n\t\t\tif ( glFormat === 6407 ) glFormat = 32849;\n\t\t\tif ( glFormat === 6408 ) glFormat = 32856;\n\n\t\t}\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( 3553, level, glFormat, position.x, position.y, width, height, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tconst width = srcTexture.image.width;\n\t\tconst height = srcTexture.image.height;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t// As another texture upload may have changed pixelStorei\n\t\t// parameters, make sure they are correct for the dstTexture\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t_gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( 3553 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst { width, height, data } = srcTexture.image;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\t\tlet glTarget;\n\n\t\tif ( dstTexture.isDataTexture3D ) {\n\n\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\tglTarget = 32879;\n\n\t\t} else if ( dstTexture.isDataTexture2DArray ) {\n\n\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\tglTarget = 35866;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tconst unpackRowLen = _gl.getParameter( 3314 );\n\t\tconst unpackImageHeight = _gl.getParameter( 32878 );\n\t\tconst unpackSkipPixels = _gl.getParameter( 3316 );\n\t\tconst unpackSkipRows = _gl.getParameter( 3315 );\n\t\tconst unpackSkipImages = _gl.getParameter( 32877 );\n\n\t\t_gl.pixelStorei( 3314, width );\n\t\t_gl.pixelStorei( 32878, height );\n\t\t_gl.pixelStorei( 3316, sourceBox.min.x );\n\t\t_gl.pixelStorei( 3315, sourceBox.min.y );\n\t\t_gl.pixelStorei( 32877, sourceBox.min.z );\n\n\t\t_gl.texSubImage3D(\n\t\t\tglTarget,\n\t\t\tlevel,\n\t\t\tposition.x,\n\t\t\tposition.y,\n\t\t\tposition.z,\n\t\t\tsourceBox.max.x - sourceBox.min.x + 1,\n\t\t\tsourceBox.max.y - sourceBox.min.y + 1,\n\t\t\tsourceBox.max.z - sourceBox.min.z + 1,\n\t\t\tglFormat,\n\t\t\tglType,\n\t\t\tdata\n\t\t);\n\n\t\t_gl.pixelStorei( 3314, unpackRowLen );\n\t\t_gl.pixelStorei( 32878, unpackImageHeight );\n\t\t_gl.pixelStorei( 3316, unpackSkipPixels );\n\t\t_gl.pixelStorei( 3315, unpackSkipRows );\n\t\t_gl.pixelStorei( 32877, unpackSkipImages );\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.resetState = function () {\n\n\t\t_currentActiveCubeFace = 0;\n\t\t_currentActiveMipmapLevel = 0;\n\t\t_currentRenderTarget = null;\n\n\t\tstate.reset();\n\t\tbindingStates.reset();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nFogExp2.prototype.isFogExp2 = true;\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nFog.prototype.isFog = true;\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.environment !== null ) data.object.environment = this.environment.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nScene.prototype.isScene = true;\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.prototype.slice.call( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nInterleavedBuffer.prototype.isInterleavedBuffer = true;\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized ) {\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.x = this.getX( i );\n\t\t\t_vector$6.y = this.getY( i );\n\t\t\t_vector$6.z = this.getZ( i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.x = this.getX( i );\n\t\t\t_vector$6.y = this.getY( i );\n\t\t\t_vector$6.z = this.getZ( i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.x = this.getX( i );\n\t\t\t_vector$6.y = this.getY( i );\n\t\t\t_vector$6.z = this.getZ( i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t}\n\n\tgetY( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t}\n\n\tgetZ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t}\n\n\tgetW( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// deinterleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interlaved attribtue\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nInterleavedBufferAttribute.prototype.isInterleavedBufferAttribute = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *  rotation: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getUV( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nSprite.prototype.isSprite = true;\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\treturn this;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.x = skinWeight.getX( i );\n\t\t\tvector.y = skinWeight.getY( i );\n\t\t\tvector.z = skinWeight.getZ( i );\n\t\t\tvector.w = skinWeight.getW( i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tboneTransform( index, target ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.fromBufferAttribute( geometry.attributes.position, index ).applyMatrix4( this.bindMatrix );\n\n\t\ttarget.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\ttarget.addScaledVector( _vector$5.copy( _basePosition ).applyMatrix4( _matrix ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn target.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nSkinnedMesh.prototype.isSkinnedMesh = true;\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nBone.prototype.isBone = true;\n\nclass DataTexture extends Texture {\n\n\tconstructor( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { data: data || null, width: width || 1, height: height || 1 };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nDataTexture.prototype.isDataTexture = true;\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.frame = - 1;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = ceilPowerOfTwo( size );\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\t\tthis.boneTextureSize = size;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _mesh = /*@__PURE__*/ new Mesh();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.instanceMatrix = new BufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.frustumCulled = false;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new BufferAttribute( new Float32Array( this.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nInstancedMesh.prototype.isInstancedMesh = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nLine.prototype.isLine = true;\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\tconst lineDistances = [];\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineSegments.prototype.isLineSegments = true;\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nLineLoop.prototype.isLineLoop = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t}\n\n}\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nPoints.prototype.isPoints = true;\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.format = format !== undefined ? format : RGBFormat;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nVideoTexture.prototype.isVideoTexture = true;\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nCanvasTexture.prototype.isCanvasTexture = true;\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps\t= false;\n\n\t}\n\n\n}\n\nDepthTexture.prototype.isDepthTexture = true;\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices, indices, radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n}\n\nconst _v0 = new Vector3();\nconst _v1$1 = new Vector3();\nconst _normal = new Vector3();\nconst _triangle = new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry, thresholdAngle ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t\tif ( geometry.isGeometry === true ) {\n\n\t\t\tconsole.error( 'THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst precisionPoints = 4;\n\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\tconst indexAttr = geometry.getIndex();\n\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\tconst indexArr = [ 0, 0, 0 ];\n\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\tconst hashes = new Array( 3 );\n\n\t\tconst edgeData = {};\n\t\tconst vertices = [];\n\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\tif ( indexAttr ) {\n\n\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t} else {\n\n\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t}\n\n\t\t\tconst { a, b, c } = _triangle;\n\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t// create hashes for the edge from the vertices\n\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t// skip degenerate triangles\n\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// iterate over every edge\n\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\tfor ( const key in edgeData ) {\n\n\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.2)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tlet p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\tif ( outerNode ) {\n\n\t\tconst b = splitPolygon( outerNode, hole );\n\n\t\t// filter collinear points around the cuts\n\t\tfilterPoints( outerNode, outerNode.next );\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode;\n\tconst hx = hole.x;\n\tconst hy = hole.y;\n\tlet qx = - Infinity, m;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t\t\t( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t\t\t( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n\t\t( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n\t\t( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n\t\tequals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes, options ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tlet depth = options.depth !== undefined ? options.depth : 100;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t// deprecated options\n\n\t\t\tif ( options.amount !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\t\tdepth = options.amount;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points, segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices and uvs\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// generate normals\n\n\t\tthis.computeVertexNormals();\n\n\t\t// if the geometry is closed, we need to average the normals along the seam.\n\t\t// because the corresponding vertices are identical (but still have different UVs).\n\n\t\tif ( phiLength === Math.PI * 2 ) {\n\n\t\t\tconst normals = this.attributes.normal.array;\n\t\t\tconst n1 = new Vector3();\n\t\t\tconst n2 = new Vector3();\n\t\t\tconst n = new Vector3();\n\n\t\t\t// this is the buffer offset for the last line of vertices\n\n\t\t\tconst base = segments * points.length * 3;\n\n\t\t\tfor ( let i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t\t// select the normal of the vertex in the first line\n\n\t\t\t\tn1.x = normals[ j + 0 ];\n\t\t\t\tn1.y = normals[ j + 1 ];\n\t\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t\t// select the normal of the vertex in the last line\n\n\t\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t\t// average normals\n\n\t\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t\t// assign the new values to both normals\n\n\t\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n}\n\n/**\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout https://prideout.net/blog/old/blog/index.html@p=44.html\n */\n\nclass ParametricGeometry extends BufferGeometry {\n\n\tconstructor( func, slices, stacks ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ParametricGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tconst EPS = 0.00001;\n\n\t\tconst normal = new Vector3();\n\n\t\tconst p0 = new Vector3(), p1 = new Vector3();\n\t\tconst pu = new Vector3(), pv = new Vector3();\n\n\t\tif ( func.length < 3 ) {\n\n\t\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t\t}\n\n\t\t// generate vertices, normals and uvs\n\n\t\tconst sliceCount = slices + 1;\n\n\t\tfor ( let i = 0; i <= stacks; i ++ ) {\n\n\t\t\tconst v = i / stacks;\n\n\t\t\tfor ( let j = 0; j <= slices; j ++ ) {\n\n\t\t\t\tconst u = j / slices;\n\n\t\t\t\t// vertex\n\n\t\t\t\tfunc( u, v, p0 );\n\t\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t\t// normal\n\n\t\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t\t}\n\n\t\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, v );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let i = 0; i < stacks; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < slices; j ++ ) {\n\n\t\t\t\tconst a = i * sliceCount + j;\n\t\t\t\tconst b = i * sliceCount + j + 1;\n\t\t\t\tconst c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\t\tconst d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t\t// faces one and two\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes, curveSegments = 12 ) {\n\n\t\tsuper();\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// incides\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 8, heightSegments = 6, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n}\n\n/**\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n *  bevelOffset: <float> // how far from text outline does bevel start\n * }\n */\n\nclass TextGeometry extends ExtrudeGeometry {\n\n\tconstructor( text, parameters = {} ) {\n\n\t\tconst font = parameters.font;\n\n\t\tif ( ! ( font && font.isFont ) ) {\n\n\t\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\t\treturn new BufferGeometry();\n\n\t\t}\n\n\t\tconst shapes = font.generateShapes( text, parameters.size );\n\n\t\t// translate parameters to ExtrudeGeometry API\n\n\t\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t\t// defaults\n\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\t\tsuper( shapes, parameters );\n\n\t\tthis.type = 'TextGeometry';\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path, tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry ) {\n\n\t\tsuper();\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tif ( geometry.isGeometry === true ) {\n\n\t\t\tconsole.error( 'THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\n\t\t// helper variables\n\n\t\tconst edge = [ 0, 0 ], edges = {};\n\n\t\tconst vertex = new Vector3();\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst indices = geometry.index;\n\t\t\tlet groups = geometry.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t}\n\n\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\tconst start = group.start;\n\t\t\t\tconst count = group.count;\n\n\t\t\t\tfor ( let i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tconst edge1 = indices.getX( i + j );\n\t\t\t\t\t\tconst edge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\tconst key = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( const key in edges ) {\n\n\t\t\t\tconst e = edges[ key ];\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\n/**\n * parameters = {\n *  color: <THREE.Color>\n * }\n */\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\treturn this;\n\n\t}\n\n}\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *  flatShading: <bool>\n * }\n */\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.vertexTangents = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.vertexTangents = source.vertexTangents;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n/**\n * parameters = {\n *  clearcoat: <float>,\n *  clearcoatMap: new THREE.Texture( <Image> ),\n *  clearcoatRoughness: <float>,\n *  clearcoatRoughnessMap: new THREE.Texture( <Image> ),\n *  clearcoatNormalScale: <Vector2>,\n *  clearcoatNormalMap: new THREE.Texture( <Image> ),\n *\n *  reflectivity: <float>,\n *  ior: <float>,\n *\n *  sheen: <Color>,\n *\n *  transmission: <float>,\n *  transmissionMap: new THREE.Texture( <Image> ),\n *\n *  thickness: <float>,\n *  thicknessMap: new THREE.Texture( <Image> ),\n *  attenuationDistance: <float>,\n *  attenuationColor: <Color>\n * }\n */\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.clearcoat = 0.0;\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\t\tObject.defineProperty( this, 'ior', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( 1 + 0.4 * this.reflectivity ) / ( 1 - 0.4 * this.reflectivity );\n\n\t\t\t},\n\t\t\tset: function ( ior ) {\n\n\t\t\t\tthis.reflectivity = clamp( 2.5 * ( ior - 1 ) / ( ior + 1 ), 0, 1 );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.sheen = null; // null will disable sheen bsdf\n\n\t\tthis.transmission = 0.0;\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0.01;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = 0.0;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.reflectivity = source.reflectivity;\n\n\t\tif ( source.sheen ) {\n\n\t\t\tthis.sheen = ( this.sheen || new Color() ).copy( source.sheen );\n\n\t\t} else {\n\n\t\t\tthis.sheen = null;\n\n\t\t}\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.MultiplyOperation,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *  flatShading: <bool>\n * }\n */\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *\n *  map: new THREE.Texture( <Image> ),\n *  gradientMap: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n/**\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *  flatShading: <bool>\n * }\n */\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  matcap: new THREE.Texture( <Image> ),\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n *\n *  flatShading: <bool>\n * }\n */\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nvar Materials = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tMeshMatcapMaterial: MeshMatcapMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\nconst AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tconst n = times.length;\n\t\tconst result = new Array( n );\n\t\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tconst nValues = values.length;\n\t\tconst result = new values.constructor( nValues );\n\n\t\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tconst srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tlet i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tlet value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t},\n\n\tsubclip: function ( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\t\tconst clip = sourceClip.clone();\n\n\t\tclip.name = name;\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tconst track = clip.tracks[ i ];\n\t\t\tconst valueSize = track.getValueSize();\n\n\t\t\tconst times = [];\n\t\t\tconst values = [];\n\n\t\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( times.length === 0 ) continue;\n\n\t\t\ttrack.times = AnimationUtils.convertArray( times, track.times.constructor );\n\t\t\ttrack.values = AnimationUtils.convertArray( values, track.values.constructor );\n\n\t\t\ttracks.push( track );\n\n\t\t}\n\n\t\tclip.tracks = tracks;\n\n\t\t// find minimum .times value across all tracks in the trimmed clip\n\n\t\tlet minStartTime = Infinity;\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// shift all tracks such that clip begins at t=0\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t\t}\n\n\t\tclip.resetDuration();\n\n\t\treturn clip;\n\n\t},\n\n\tmakeClipAdditive: function ( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\t\tif ( fps <= 0 ) fps = 30;\n\n\t\tconst numTracks = referenceClip.tracks.length;\n\t\tconst referenceTime = referenceFrame / fps;\n\n\t\t// Make each track's values relative to the values at the reference frame\n\t\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t\t// Skip this track if it's non-numeric\n\t\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t\t} );\n\n\t\t\tif ( targetTrack === undefined ) continue;\n\n\t\t\tlet referenceOffset = 0;\n\t\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t\t}\n\n\t\t\tlet targetOffset = 0;\n\t\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t\t}\n\n\t\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\t\tlet referenceValue;\n\n\t\t\t// Find the value to subtract out of the track\n\t\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t\t} else {\n\n\t\t\t\t// Interpolate to the reference value\n\t\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t\t}\n\n\t\t\t// Conjugate the quaternion\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t\t}\n\n\t\t\t// Subtract the reference value from all of the track values\n\n\t\t\tconst numTimes = targetTrack.times.length;\n\t\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\tvalueStart,\n\t\t\t\t\t\treferenceValue,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\tvalueStart\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\t\treturn targetClip;\n\n\t}\n\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n// ALIAS DEFINITIONS\n\nInterpolant.prototype.beforeStart_ = Interpolant.prototype.copySampleValue_;\nInterpolant.prototype.afterEnd_ = Interpolant.prototype.copySampleValue_;\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = AnimationUtils.arraySlice( this.times ),\n\t\t\tvalues = AnimationUtils.arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = AnimationUtils.arraySlice( this.times, 0 );\n\t\tconst values = AnimationUtils.arraySlice( this.values, 0 );\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nconst loading = {};\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tconst dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tconst dataUriRegexResult = url.match( dataUriRegex );\n\t\tlet request;\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tconst mimeType = dataUriRegexResult[ 1 ];\n\t\t\tconst isBase64 = !! dataUriRegexResult[ 2 ];\n\n\t\t\tlet data = dataUriRegexResult[ 3 ];\n\t\t\tdata = decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tlet response;\n\t\t\t\tconst responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tconst view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\trequest = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tconst response = this.response;\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\t\tCache.add( url, response );\n\n\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'abort', function ( event ) {\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( const header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tconst texData = scope.parse( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.encoding !== undefined ) {\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tconst isJPEG = url.search( /\\.jpe?g($|\\?)/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = new Vector3();\nconst px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\n/**\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst tangent = optionalTarget || new Vector2();\n\n\t\ttangent.copy( this.v2 ).sub( this.v1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineCurve.prototype.isLineCurve = true;\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineCurve3';\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nSplineCurve.prototype.isSplineCurve = true;\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nLight.prototype.isLight = true;\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nHemisphereLight.prototype.isHemisphereLight = true;\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nSpotLightShadow.prototype.isSpotLightShadow = true;\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// intensity = power per solid angle.\n\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// intensity = power per solid angle.\n\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nSpotLight.prototype.isSpotLight = true;\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nPointLightShadow.prototype.isPointLightShadow = true;\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// intensity = power per solid angle.\n\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// intensity = power per solid angle.\n\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nPointLight.prototype.isPointLight = true;\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nOrthographicCamera.prototype.isOrthographicCamera = true;\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t}\n\n}\n\nDirectionalLightShadow.prototype.isDirectionalLightShadow = true;\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nDirectionalLight.prototype.isDirectionalLight = true;\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nAmbientLight.prototype.isAmbientLight = true;\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\nRectAreaLight.prototype.isRectAreaLight = true;\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nSphericalHarmonics3.prototype.isSphericalHarmonics3 = true;\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nLightProbe.prototype.isLightProbe = true;\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = new Color().setHex( json.sheen );\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.morphNormals !== undefined ) material.morphNormals = json.morphNormals;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\n\t\tif ( json.vertexTangents !== undefined ) material.vertexTangents = json.vertexTangents;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.substr( 0, index + 1 );\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON( this );\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nInstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute ) {\n\n\t\tif ( typeof ( normalized ) === 'number' ) {\n\n\t\t\tmeshPerAttribute = normalized;\n\n\t\t\tnormalized = false;\n\n\t\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t\t}\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON()\t{\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nInstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tif ( attribute.updateRange !== undefined ) {\n\n\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ] instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\t\tlet geometryShapes;\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TubeGeometry':\n\t\t\t\t\tcase 'TubeBufferGeometry':\n\n\t\t\t\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.closed\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\tgeometryShapes = [];\n\n\t\t\t\t\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\tgeometryShapes = [];\n\n\t\t\t\t\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: Loading \"Geometry\" is not supported anymore.' );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tconst array = [];\n\n\t\t\t\t\tfor ( let j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tconst material = data.materials[ j ];\n\n\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timages[ image.uuid ].push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timages[ image.uuid ].push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\n\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\timages[ image.uuid ] = deserializedImage;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tlet texture;\n\t\t\t\tconst image = images[ data.image ];\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture( image );\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture( image.data, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new BufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new BufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/* DEPRECATED */\n\n\tsetTexturePath( value ) {\n\n\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\treturn this.setResourcePath( value );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nImageBitmapLoader.prototype.isImageBitmapLoader = true;\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tconst toChange = [];\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nclass Font {\n\n\tconstructor( data ) {\n\n\t\tthis.type = 'Font';\n\n\t\tthis.data = data;\n\n\t}\n\n\tgenerateShapes( text, size = 100 ) {\n\n\t\tconst shapes = [];\n\t\tconst paths = createPaths( text, size, this.data );\n\n\t\tfor ( let p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nfunction createPaths( text, size, data ) {\n\n\tconst chars = Array.from( text );\n\tconst scale = size / data.resolution;\n\tconst line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tconst paths = [];\n\n\tlet offsetX = 0, offsetY = 0;\n\n\tfor ( let i = 0; i < chars.length; i ++ ) {\n\n\t\tconst char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tconst ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tconst glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) {\n\n\t\tconsole.error( 'THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.' );\n\n\t\treturn;\n\n\t}\n\n\tconst path = new ShapePath();\n\n\tlet x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tconst outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( let i = 0, l = outline.length; i < l; ) {\n\n\t\t\tconst action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\nFont.prototype.isFont = true;\n\nclass FontLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tconst font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\treturn new Font( json );\n\n\t}\n\n}\n\nlet _context;\n\nconst AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\t_context = value;\n\n\t}\n\n};\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n}\n\nclass HemisphereLightProbe extends LightProbe {\n\n\tconstructor( skyColor, groundColor, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tconst color1 = new Color().set( skyColor );\n\t\tconst color2 = new Color().set( groundColor );\n\n\t\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tconst c0 = Math.sqrt( Math.PI );\n\t\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n}\n\nHemisphereLightProbe.prototype.isHemisphereLightProbe = true;\n\nclass AmbientLightProbe extends LightProbe {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tconst color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n}\n\nAmbientLightProbe.prototype.isAmbientLightProbe = true;\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\tconst projectionMatrix = camera.projectionMatrix.clone();\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( ! matches ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nAnimationObjectGroup.prototype.isAnimationObjectGroup = true;\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nAnimationMixer.prototype._controlInterpolantsResultBuffer = new Float32Array( 1 );\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tif ( typeof value === 'string' ) {\n\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\tvalue = arguments[ 1 ];\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nInstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nGLBufferAttribute.prototype.isGLBufferAttribute = true;\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera && camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera && camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = false, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = false, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$4.copy( point ).clamp( this.min, this.max );\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nBox2.prototype.isBox2 = true;\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass ImmediateRenderObject extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.material = material;\n\t\tthis.render = function ( /* renderCallback */ ) {};\n\n\t\tthis.hasPositions = false;\n\t\tthis.hasNormals = false;\n\t\tthis.hasColors = false;\n\t\tthis.hasUvs = false;\n\n\t\tthis.positionArray = null;\n\t\tthis.normalArray = null;\n\t\tthis.colorArray = null;\n\t\tthis.uvArray = null;\n\n\t\tthis.count = 0;\n\n\t}\n\n}\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'SkeletonHelper';\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, radials = 16, circles = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the radials\n\n\t\tfor ( let i = 0; i <= radials; i ++ ) {\n\n\t\t\tconst v = ( i / radials ) * ( Math.PI * 2 );\n\n\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( x, 0, z );\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t\t// create the circles\n\n\t\tfor ( let i = 0; i <= circles; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / circles * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2', colorFrustum );\n\t\taddLine( 'n2', 'n4', colorFrustum );\n\t\taddLine( 'n4', 'n3', colorFrustum );\n\t\taddLine( 'n3', 'n1', colorFrustum );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2', colorFrustum );\n\t\taddLine( 'f2', 'f4', colorFrustum );\n\t\taddLine( 'f4', 'f3', colorFrustum );\n\t\taddLine( 'f3', 'f1', colorFrustum );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1', colorFrustum );\n\t\taddLine( 'n2', 'f2', colorFrustum );\n\t\taddLine( 'n3', 'f3', colorFrustum );\n\t\taddLine( 'n4', 'f4', colorFrustum );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1', colorCone );\n\t\taddLine( 'p', 'n2', colorCone );\n\t\taddLine( 'p', 'n3', colorCone );\n\t\taddLine( 'p', 'n4', colorCone );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2', colorUp );\n\t\taddLine( 'u2', 'u3', colorUp );\n\t\taddLine( 'u3', 'u1', colorUp );\n\n\t\t// target\n\n\t\taddLine( 'c', 't', colorTarget );\n\t\taddLine( 'p', 'c', colorCross );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2', colorCross );\n\t\taddLine( 'cn3', 'cn4', colorCross );\n\n\t\taddLine( 'cf1', 'cf2', colorCross );\n\t\taddLine( 'cf3', 'cf4', colorCross );\n\n\t\tfunction addLine( a, b, color ) {\n\n\t\t\taddPoint( a, color );\n\t\t\taddPoint( b, color );\n\n\t\t}\n\n\t\tfunction addPoint( id, color ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tLineSegments.prototype.copy.call( this, source );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tlet scale = - this.plane.constant;\n\n\t\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\t\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _floatView = new Float32Array( 1 );\nconst _int32View = new Int32Array( _floatView.buffer );\n\nclass DataUtils {\n\n\t// Converts float32 to float16 (stored as uint16 value).\n\n\tstatic toHalfFloat( val ) {\n\n\t\t// Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n\n\t\t/* This method is faster than the OpenEXR implementation (very often\n\t\t* used, eg. in Ogre), with the additional benefit of rounding, inspired\n\t\t* by James Tursa?s half-precision code. */\n\n\t\t_floatView[ 0 ] = val;\n\t\tconst x = _int32View[ 0 ];\n\n\t\tlet bits = ( x >> 16 ) & 0x8000; /* Get the sign */\n\t\tlet m = ( x >> 12 ) & 0x07ff; /* Keep one extra bit for rounding */\n\t\tconst e = ( x >> 23 ) & 0xff; /* Using int is faster here */\n\n\t\t/* If zero, or denormal, or exponent underflows too much for a denormal\n\t\t\t* half, return signed zero. */\n\t\tif ( e < 103 ) return bits;\n\n\t\t/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n\t\tif ( e > 142 ) {\n\n\t\t\tbits |= 0x7c00;\n\t\t\t/* If exponent was 0xff and one mantissa bit was set, it means NaN,\n\t\t\t\t\t\t* not Inf, so make sure we set one mantissa bit too. */\n\t\t\tbits |= ( ( e == 255 ) ? 0 : 1 ) && ( x & 0x007fffff );\n\t\t\treturn bits;\n\n\t\t}\n\n\t\t/* If exponent underflows but not too much, return a denormal */\n\t\tif ( e < 113 ) {\n\n\t\t\tm |= 0x0800;\n\t\t\t/* Extra rounding may overflow and set mantissa to 0 and exponent\n\t\t\t\t* to 1, which is OK. */\n\t\t\tbits |= ( m >> ( 114 - e ) ) + ( ( m >> ( 113 - e ) ) & 1 );\n\t\t\treturn bits;\n\n\t\t}\n\n\t\tbits |= ( ( e - 112 ) << 10 ) | ( m >> 1 );\n\t\t/* Extra rounding. An overflow will set mantissa to 0 and increment\n\t\t\t* the exponent, which is OK. */\n\t\tbits += m & 1;\n\t\treturn bits;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\nconst LOD_MAX = 8;\nconst SIZE_MAX = Math.pow( 2, LOD_MAX );\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\nconst TOTAL_LODS = LOD_MAX - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst ENCODINGS = {\n\t[ LinearEncoding ]: 0,\n\t[ sRGBEncoding ]: 1,\n\t[ RGBEEncoding ]: 2,\n\t[ RGBM7Encoding ]: 3,\n\t[ RGBM16Encoding ]: 4,\n\t[ RGBDEncoding ]: 5,\n\t[ GammaEncoding ]: 6\n};\n\nconst backgroundMaterial = new MeshBasicMaterial( {\n\tside: BackSide,\n\tdepthWrite: false,\n\tdepthTest: false,\n} );\nconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst { _lodPlanes, _sizeLods, _sigmas } = /*@__PURE__*/ _createPlanes();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nfunction convertLinearToRGBE( color ) {\n\n\tconst maxComponent = Math.max( color.r, color.g, color.b );\n\tconst fExp = Math.min( Math.max( Math.ceil( Math.log2( maxComponent ) ), - 128.0 ), 127.0 );\n\tcolor.multiplyScalar( Math.pow( 2.0, - fExp ) );\n\n\tconst alpha = ( fExp + 128.0 ) / 255.0;\n\treturn alpha;\n\n}\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._blurMaterial = _getBlurShader( MAX_SAMPLES );\n\t\tthis._equirectShader = null;\n\t\tthis._cubemapShader = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular ) {\n\n\t\treturn this._fromTexture( equirectangular );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap ) {\n\n\t\treturn this._fromTexture( cubemap );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapShader === null ) {\n\n\t\t\tthis._cubemapShader = _getCubemapShader();\n\t\t\tthis._compileMaterial( this._cubemapShader );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectShader === null ) {\n\n\t\t\tthis._equirectShader = _getEquirectShader();\n\t\t\tthis._compileMaterial( this._equirectShader );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._blurMaterial.dispose();\n\n\t\tif ( this._cubemapShader !== null ) this._cubemapShader.dispose();\n\t\tif ( this._equirectShader !== null ) this._equirectShader.dispose();\n\n\t\tfor ( let i = 0; i < _lodPlanes.length; i ++ ) {\n\n\t\t\t_lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t// private interface\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._pingPongRenderTarget.dispose();\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\tconst cubeUVRenderTarget = this._allocateTargets( texture );\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets( texture ) { // warning: null texture is valid\n\n\t\tconst params = {\n\t\t\tmagFilter: NearestFilter,\n\t\t\tminFilter: NearestFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: UnsignedByteType,\n\t\t\tformat: RGBEFormat,\n\t\t\tencoding: _isLDR( texture ) ? texture.encoding : RGBEEncoding,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( params );\n\t\tcubeUVRenderTarget.depthBuffer = texture ? false : true;\n\t\tthis._pingPongRenderTarget = _createRenderTarget( params );\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( _lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst outputEncoding = renderer.outputEncoding;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.outputEncoding = LinearEncoding;\n\t\trenderer.autoClear = false;\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background ).convertSRGBToLinear();\n\t\t\t\tscene.background = null;\n\n\t\t\t\tconst alpha = convertLinearToRGBE( backgroundMaterial.color );\n\t\t\t\tbackgroundMaterial.opacity = alpha;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor ).convertSRGBToLinear();\n\n\t\t\tconst alpha = convertLinearToRGBE( backgroundMaterial.color );\n\t\t\tbackgroundMaterial.opacity = alpha;\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\t\t\tif ( col == 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col == 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\t_setViewport( cubeUVRenderTarget,\n\t\t\t\tcol * SIZE_MAX, i > 2 ? SIZE_MAX : 0, SIZE_MAX, SIZE_MAX );\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.outputEncoding = outputEncoding;\n\t\trenderer.autoClear = originalAutoClear;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tif ( texture.isCubeTexture ) {\n\n\t\t\tif ( this._cubemapShader == null ) {\n\n\t\t\t\tthis._cubemapShader = _getCubemapShader();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( this._equirectShader == null ) {\n\n\t\t\t\tthis._equirectShader = _getEquirectShader();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = texture.isCubeTexture ? this._cubemapShader : this._equirectShader;\n\t\tconst mesh = new Mesh( _lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tif ( ! texture.isCubeTexture ) {\n\n\t\t\tuniforms[ 'texelSize' ].value.set( 1.0 / texture.image.width, 1.0 / texture.image.height );\n\n\t\t}\n\n\t\tuniforms[ 'inputEncoding' ].value = ENCODINGS[ texture.encoding ];\n\t\tuniforms[ 'outputEncoding' ].value = ENCODINGS[ cubeUVRenderTarget.texture.encoding ];\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * SIZE_MAX, 2 * SIZE_MAX );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < TOTAL_LODS; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( _sigmas[ i ] * _sigmas[ i ] - _sigmas[ i - 1 ] * _sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( _lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = _sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i == 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = LOD_MAX - lodIn;\n\t\tblurUniforms[ 'inputEncoding' ].value = ENCODINGS[ targetIn.texture.encoding ];\n\t\tblurUniforms[ 'outputEncoding' ].value = ENCODINGS[ targetIn.texture.encoding ];\n\n\t\tconst outputSize = _sizeLods[ lodOut ];\n\t\tconst x = 3 * Math.max( 0, SIZE_MAX - 2 * outputSize );\n\t\tconst y = ( lodOut === 0 ? 0 : 2 * SIZE_MAX ) + 2 * outputSize * ( lodOut > LOD_MAX - LOD_MIN ? lodOut - LOD_MAX + LOD_MIN : 0 );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\nfunction _isLDR( texture ) {\n\n\tif ( texture === undefined || texture.type !== UnsignedByteType ) return false;\n\n\treturn texture.encoding === LinearEncoding || texture.encoding === sRGBEncoding || texture.encoding === GammaEncoding;\n\n}\n\nfunction _createPlanes() {\n\n\tconst _lodPlanes = [];\n\tconst _sizeLods = [];\n\tconst _sigmas = [];\n\n\tlet lod = LOD_MAX;\n\n\tfor ( let i = 0; i < TOTAL_LODS; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\t_sizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > LOD_MAX - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - LOD_MAX + LOD_MIN - 1 ];\n\n\t\t} else if ( i == 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\t_sigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 1 );\n\t\tconst min = - texelSize / 2;\n\t\tconst max = 1 + texelSize / 2;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\t_lodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { _lodPlanes, _sizeLods, _sigmas };\n\n}\n\nfunction _createRenderTarget( params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( 3 * SIZE_MAX, 3 * SIZE_MAX, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( maxSamples ) {\n\n\tconst weights = new Float32Array( maxSamples );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new RawShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: { 'n': maxSamples },\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis },\n\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${ _getEncodings() }\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectShader() {\n\n\tconst texelSize = new Vector2( 1, 1 );\n\tconst shaderMaterial = new RawShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'texelSize': { value: texelSize },\n\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${ _getEncodings() }\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getCubemapShader() {\n\n\tconst shaderMaterial = new RawShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${ _getEncodings() }\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction _getEncodings() {\n\n\treturn /* glsl */`\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t`;\n\n}\n\nconst LineStrip = 0;\nconst LinePieces = 1;\nconst NoColors = 0;\nconst FaceColors = 1;\nconst VertexColors = 2;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials = [] ) {\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setUsage( DynamicDrawUsage );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nPath.prototype.fromPoints = function ( points ) {\n\n\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\treturn this.setFromPoints( points );\n\n};\n\n//\n\nfunction AxisHelper( size ) {\n\n\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\treturn new AxesHelper( size );\n\n}\n\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nLoader.prototype.extractUrlBase = function ( url ) {\n\n\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\treturn LoaderUtils.extractUrlBase( url );\n\n};\n\nLoader.Handlers = {\n\n\tadd: function ( /* regex, loader */ ) {\n\n\t\tconsole.error( 'THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.' );\n\n\t},\n\n\tget: function ( /* file */ ) {\n\n\t\tconsole.error( 'THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.' );\n\n\t}\n\n};\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\n//\n\nBox2.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nBox2.prototype.empty = function () {\n\n\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\treturn this.isEmpty();\n\n};\n\nBox2.prototype.isIntersectionBox = function ( box ) {\n\n\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\treturn this.intersectsBox( box );\n\n};\n\nBox2.prototype.size = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\treturn this.getSize( optionalTarget );\n\n};\n\n//\n\nBox3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nBox3.prototype.empty = function () {\n\n\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\treturn this.isEmpty();\n\n};\n\nBox3.prototype.isIntersectionBox = function ( box ) {\n\n\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\treturn this.intersectsBox( box );\n\n};\n\nBox3.prototype.isIntersectionSphere = function ( sphere ) {\n\n\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\treturn this.intersectsSphere( sphere );\n\n};\n\nBox3.prototype.size = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\treturn this.getSize( optionalTarget );\n\n};\n\n//\n\nSphere.prototype.empty = function () {\n\n\tconsole.warn( 'THREE.Sphere: .empty() has been renamed to .isEmpty().' );\n\treturn this.isEmpty();\n\n};\n\n//\n\nFrustum.prototype.setFromMatrix = function ( m ) {\n\n\tconsole.warn( 'THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().' );\n\treturn this.setFromProjectionMatrix( m );\n\n};\n\n//\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\n//\n\nMatrix3.prototype.flattenToArrayOffset = function ( array, offset ) {\n\n\tconsole.warn( 'THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.' );\n\treturn this.toArray( array, offset );\n\n};\n\nMatrix3.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\treturn vector.applyMatrix3( this );\n\n};\n\nMatrix3.prototype.multiplyVector3Array = function ( /* a */ ) {\n\n\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n};\n\nMatrix3.prototype.applyToBufferAttribute = function ( attribute ) {\n\n\tconsole.warn( 'THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.' );\n\treturn attribute.applyMatrix3( this );\n\n};\n\nMatrix3.prototype.applyToVector3Array = function ( /* array, offset, length */ ) {\n\n\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n};\n\nMatrix3.prototype.getInverse = function ( matrix ) {\n\n\tconsole.warn( 'THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.' );\n\treturn this.copy( matrix ).invert();\n\n};\n\n//\n\nMatrix4.prototype.extractPosition = function ( m ) {\n\n\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\treturn this.copyPosition( m );\n\n};\n\nMatrix4.prototype.flattenToArrayOffset = function ( array, offset ) {\n\n\tconsole.warn( 'THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.' );\n\treturn this.toArray( array, offset );\n\n};\n\nMatrix4.prototype.getPosition = function () {\n\n\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\treturn new Vector3().setFromMatrixColumn( this, 3 );\n\n};\n\nMatrix4.prototype.setRotationFromQuaternion = function ( q ) {\n\n\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\treturn this.makeRotationFromQuaternion( q );\n\n};\n\nMatrix4.prototype.multiplyToArray = function () {\n\n\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n};\n\nMatrix4.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\treturn vector.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.multiplyVector4 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\treturn vector.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.multiplyVector3Array = function ( /* a */ ) {\n\n\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateAxis = function ( v ) {\n\n\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\tv.transformDirection( this );\n\n};\n\nMatrix4.prototype.crossVector = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\treturn vector.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.translate = function () {\n\n\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateX = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateY = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateZ = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateByAxis = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n};\n\nMatrix4.prototype.applyToBufferAttribute = function ( attribute ) {\n\n\tconsole.warn( 'THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.' );\n\treturn attribute.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.applyToVector3Array = function ( /* array, offset, length */ ) {\n\n\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n};\n\nMatrix4.prototype.makeFrustum = function ( left, right, bottom, top, near, far ) {\n\n\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n};\n\nMatrix4.prototype.getInverse = function ( matrix ) {\n\n\tconsole.warn( 'THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.' );\n\treturn this.copy( matrix ).invert();\n\n};\n\n//\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\n//\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nQuaternion.prototype.inverse = function ( ) {\n\n\tconsole.warn( 'THREE.Quaternion: .inverse() has been renamed to invert().' );\n\treturn this.invert();\n\n};\n\n//\n\nRay.prototype.isIntersectionBox = function ( box ) {\n\n\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\treturn this.intersectsBox( box );\n\n};\n\nRay.prototype.isIntersectionPlane = function ( plane ) {\n\n\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\treturn this.intersectsPlane( plane );\n\n};\n\nRay.prototype.isIntersectionSphere = function ( sphere ) {\n\n\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\treturn this.intersectsSphere( sphere );\n\n};\n\n//\n\nTriangle.prototype.area = function () {\n\n\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\treturn this.getArea();\n\n};\n\nTriangle.prototype.barycoordFromPoint = function ( point, target ) {\n\n\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\treturn this.getBarycoord( point, target );\n\n};\n\nTriangle.prototype.midpoint = function ( target ) {\n\n\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\treturn this.getMidpoint( target );\n\n};\n\nTriangle.prototypenormal = function ( target ) {\n\n\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\treturn this.getNormal( target );\n\n};\n\nTriangle.prototype.plane = function ( target ) {\n\n\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\treturn this.getPlane( target );\n\n};\n\nTriangle.barycoordFromPoint = function ( point, a, b, c, target ) {\n\n\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n};\n\nTriangle.normal = function ( a, b, c, target ) {\n\n\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\treturn Triangle.getNormal( a, b, c, target );\n\n};\n\n//\n\nShape.prototype.extractAllPoints = function ( divisions ) {\n\n\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\treturn this.extractPoints( divisions );\n\n};\n\nShape.prototype.extrude = function ( options ) {\n\n\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\treturn new ExtrudeGeometry( this, options );\n\n};\n\nShape.prototype.makeGeometry = function ( options ) {\n\n\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\treturn new ShapeGeometry( this, options );\n\n};\n\n//\n\nVector2.prototype.fromAttribute = function ( attribute, index, offset ) {\n\n\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\treturn this.fromBufferAttribute( attribute, index, offset );\n\n};\n\nVector2.prototype.distanceToManhattan = function ( v ) {\n\n\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\treturn this.manhattanDistanceTo( v );\n\n};\n\nVector2.prototype.lengthManhattan = function () {\n\n\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\treturn this.manhattanLength();\n\n};\n\n//\n\nVector3.prototype.setEulerFromRotationMatrix = function () {\n\n\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n};\n\nVector3.prototype.setEulerFromQuaternion = function () {\n\n\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n};\n\nVector3.prototype.getPositionFromMatrix = function ( m ) {\n\n\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\treturn this.setFromMatrixPosition( m );\n\n};\n\nVector3.prototype.getScaleFromMatrix = function ( m ) {\n\n\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\treturn this.setFromMatrixScale( m );\n\n};\n\nVector3.prototype.getColumnFromMatrix = function ( index, matrix ) {\n\n\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\treturn this.setFromMatrixColumn( matrix, index );\n\n};\n\nVector3.prototype.applyProjection = function ( m ) {\n\n\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\treturn this.applyMatrix4( m );\n\n};\n\nVector3.prototype.fromAttribute = function ( attribute, index, offset ) {\n\n\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\treturn this.fromBufferAttribute( attribute, index, offset );\n\n};\n\nVector3.prototype.distanceToManhattan = function ( v ) {\n\n\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\treturn this.manhattanDistanceTo( v );\n\n};\n\nVector3.prototype.lengthManhattan = function () {\n\n\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\treturn this.manhattanLength();\n\n};\n\n//\n\nVector4.prototype.fromAttribute = function ( attribute, index, offset ) {\n\n\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\treturn this.fromBufferAttribute( attribute, index, offset );\n\n};\n\nVector4.prototype.lengthManhattan = function () {\n\n\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\treturn this.manhattanLength();\n\n};\n\n//\n\nObject3D.prototype.getChildByName = function ( name ) {\n\n\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\treturn this.getObjectByName( name );\n\n};\n\nObject3D.prototype.renderDepth = function () {\n\n\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n};\n\nObject3D.prototype.translate = function ( distance, axis ) {\n\n\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\treturn this.translateOnAxis( axis, distance );\n\n};\n\nObject3D.prototype.getWorldRotation = function () {\n\n\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n};\n\nObject3D.prototype.applyMatrix = function ( matrix ) {\n\n\tconsole.warn( 'THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().' );\n\treturn this.applyMatrix4( matrix );\n\n};\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nMesh.prototype.setDrawMode = function () {\n\n\tconsole.error( 'THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n\n};\n\nObject.defineProperties( Mesh.prototype, {\n\n\tdrawMode: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.' );\n\t\t\treturn TrianglesDrawMode;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n\n\t\t}\n\t}\n\n} );\n\nSkinnedMesh.prototype.initBones = function () {\n\n\tconsole.error( 'THREE.SkinnedMesh: initBones() has been removed.' );\n\n};\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( 'THREE.PerspectiveCamera.setLens is deprecated. ' +\n\t\t\t'Use .setFocalLength and .filmGauge for a photographic setup.' );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t},\n\tdynamic: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\treturn this.usage === DynamicDrawUsage;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\tthis.setUsage( DynamicDrawUsage );\n\n\t\t}\n\t}\n\n} );\n\nBufferAttribute.prototype.setDynamic = function ( value ) {\n\n\tconsole.warn( 'THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\treturn this;\n\n};\n\nBufferAttribute.prototype.copyIndicesArray = function ( /* indices */ ) {\n\n\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n},\n\nBufferAttribute.prototype.setArray = function ( /* array */ ) {\n\n\tconsole.error( 'THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n};\n\n//\n\nBufferGeometry.prototype.addIndex = function ( index ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\tthis.setIndex( index );\n\n};\n\nBufferGeometry.prototype.addAttribute = function ( name, attribute ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().' );\n\n\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\treturn this.setAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t}\n\n\tif ( name === 'index' ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\tthis.setIndex( attribute );\n\n\t\treturn this;\n\n\t}\n\n\treturn this.setAttribute( name, attribute );\n\n};\n\nBufferGeometry.prototype.addDrawCall = function ( start, count, indexOffset ) {\n\n\tif ( indexOffset !== undefined ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t}\n\n\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\tthis.addGroup( start, count );\n\n};\n\nBufferGeometry.prototype.clearDrawCalls = function () {\n\n\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\tthis.clearGroups();\n\n};\n\nBufferGeometry.prototype.computeOffsets = function () {\n\n\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n};\n\nBufferGeometry.prototype.removeAttribute = function ( name ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().' );\n\n\treturn this.deleteAttribute( name );\n\n};\n\nBufferGeometry.prototype.applyMatrix = function ( matrix ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().' );\n\treturn this.applyMatrix4( matrix );\n\n};\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\nInterleavedBuffer.prototype.setDynamic = function ( value ) {\n\n\tconsole.warn( 'THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\treturn this;\n\n};\n\nInterleavedBuffer.prototype.setArray = function ( /* array */ ) {\n\n\tconsole.error( 'THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n};\n\n//\n\nExtrudeGeometry.prototype.getArrays = function () {\n\n\tconsole.error( 'THREE.ExtrudeGeometry: .getArrays() has been removed.' );\n\n};\n\nExtrudeGeometry.prototype.addShapeList = function () {\n\n\tconsole.error( 'THREE.ExtrudeGeometry: .addShapeList() has been removed.' );\n\n};\n\nExtrudeGeometry.prototype.addShape = function () {\n\n\tconsole.error( 'THREE.ExtrudeGeometry: .addShape() has been removed.' );\n\n};\n\n//\n\nScene.prototype.dispose = function () {\n\n\tconsole.error( 'THREE.Scene: .dispose() has been removed.' );\n\n};\n\n//\n\nUniform.prototype.onUpdate = function () {\n\n\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\treturn this;\n\n};\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\n\toverdraw: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t}\n\t},\n\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t},\n\n\tstencilMask: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\treturn this.stencilFuncMask;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\tthis.stencilFuncMask = value;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nWebGLRenderer.prototype.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\n\tthis.setRenderTarget( renderTarget );\n\tthis.clear( color, depth, stencil );\n\n};\n\nWebGLRenderer.prototype.animate = function ( callback ) {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\tthis.setAnimationLoop( callback );\n\n};\n\nWebGLRenderer.prototype.getCurrentRenderTarget = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\treturn this.getRenderTarget();\n\n};\n\nWebGLRenderer.prototype.getMaxAnisotropy = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\treturn this.capabilities.getMaxAnisotropy();\n\n};\n\nWebGLRenderer.prototype.getPrecision = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\treturn this.capabilities.precision;\n\n};\n\nWebGLRenderer.prototype.resetGLState = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\treturn this.state.reset();\n\n};\n\nWebGLRenderer.prototype.supportsFloatTextures = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\treturn this.extensions.get( 'OES_texture_float' );\n\n};\n\nWebGLRenderer.prototype.supportsHalfFloatTextures = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\treturn this.extensions.get( 'OES_texture_half_float' );\n\n};\n\nWebGLRenderer.prototype.supportsStandardDerivatives = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n};\n\nWebGLRenderer.prototype.supportsCompressedTextureS3TC = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n};\n\nWebGLRenderer.prototype.supportsCompressedTexturePVRTC = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n};\n\nWebGLRenderer.prototype.supportsBlendMinMax = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n};\n\nWebGLRenderer.prototype.supportsVertexTextures = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\treturn this.capabilities.vertexTextures;\n\n};\n\nWebGLRenderer.prototype.supportsInstancedArrays = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n};\n\nWebGLRenderer.prototype.enableScissorTest = function ( boolean ) {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\tthis.setScissorTest( boolean );\n\n};\n\nWebGLRenderer.prototype.initMaterial = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.addPrePlugin = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.addPostPlugin = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.updateShadowMap = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setFaceCulling = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.allocTextureUnit = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .allocTextureUnit() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setTexture = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setTexture() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setTexture2D = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setTexture2D() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setTextureCube = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setTextureCube() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.getActiveMipMapLevel = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().' );\n\treturn this.getActiveMipmapLevel();\n\n};\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\tcontext: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.' );\n\t\t\treturn this.getContext();\n\n\t\t}\n\t},\n\tvr: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .vr has been renamed to .xr' );\n\t\t\treturn this.xr;\n\n\t\t}\n\t},\n\tgammaInput: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n\n\t\t}\n\t},\n\tgammaOutput: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n\t\t\tthis.outputEncoding = ( value === true ) ? sRGBEncoding : LinearEncoding;\n\n\t\t}\n\t},\n\ttoneMappingWhitePoint: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\n\t\t\treturn 1.0;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\n\n\t\t}\n\t},\n\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tconsole.warn( 'THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).' );\n\treturn new WebGLCubeRenderTarget( width, options );\n\n}\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nAudio.prototype.load = function ( file ) {\n\n\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\tconst scope = this;\n\tconst audioLoader = new AudioLoader();\n\taudioLoader.load( file, function ( buffer ) {\n\n\t\tscope.setBuffer( buffer );\n\n\t} );\n\treturn this;\n\n};\n\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\nCubeCamera.prototype.clear = function ( renderer, color, depth, stencil ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .clear() is now .renderTarget.clear().' );\n\treturn this.renderTarget.clear( renderer, color, depth, stencil );\n\n};\n\nImageUtils.crossOrigin = undefined;\n\nImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\tconst loader = new TextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tconst texture = loader.load( url, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\tconst loader = new CubeTextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tconst texture = loader.load( urls, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadCompressedTexture = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\nImageUtils.loadCompressedTextureCube = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been removed' );\n\n}\n\n//\n\nfunction JSONLoader() {\n\n\tconsole.error( 'THREE.JSONLoader has been removed.' );\n\n}\n\n//\n\nconst SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js' );\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t/* eslint-disable no-undef */\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\t/* eslint-enable no-undef */\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, AxisHelper, BackSide, BasicDepthPacking, BasicShadowMap, BinaryTextureLoader, Bone, BooleanKeyframeTrack, BoundingBoxHelper, Box2, Box3, Box3Helper, BoxGeometry as BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasRenderer, CanvasTexture, CatmullRomCurve3, CineonToneMapping, CircleGeometry as CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, CompressedTexture, CompressedTextureLoader, ConeGeometry as ConeBufferGeometry, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubeUVRefractionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry as CylinderBufferGeometry, CylinderGeometry, Cylindrical, DataTexture, DataTexture2DArray, DataTexture3D, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry as DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicBufferAttribute, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EdgesHelper, EllipseCurve, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry as ExtrudeBufferGeometry, ExtrudeGeometry, FaceColors, FileLoader, FlatShading, Float16BufferAttribute, Float32Attribute, Float32BufferAttribute, Float64Attribute, Float64BufferAttribute, FloatType, Fog, FogExp2, Font, FontLoader, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GammaEncoding, GreaterDepth, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronGeometry as IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, ImmediateRenderObject, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16Attribute, Int16BufferAttribute, Int32Attribute, Int32BufferAttribute, Int8Attribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, JSONLoader, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry as LatheBufferGeometry, LatheGeometry, Layers, LensFlare, LessDepth, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LinePieces, LineSegments, LineStrip, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LogLuvEncoding, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils as Math, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshFaceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiMaterial, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverDepth, NeverStencilFunc, NoBlending, NoColors, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry as OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, ParametricGeometry as ParametricBufferGeometry, ParametricGeometry, Particle, ParticleBasicMaterial, ParticleSystem, ParticleSystemMaterial, Path, PerspectiveCamera, Plane, PlaneGeometry as PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointCloud, PointCloudMaterial, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry as PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBDEncoding, RGBEEncoding, RGBEFormat, RGBFormat, RGBIntegerFormat, RGBM16Encoding, RGBM7Encoding, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry as RingBufferGeometry, RingGeometry, SRGB8_ALPHA8_ASTC_10x10_Format, SRGB8_ALPHA8_ASTC_10x5_Format, SRGB8_ALPHA8_ASTC_10x6_Format, SRGB8_ALPHA8_ASTC_10x8_Format, SRGB8_ALPHA8_ASTC_12x10_Format, SRGB8_ALPHA8_ASTC_12x12_Format, SRGB8_ALPHA8_ASTC_4x4_Format, SRGB8_ALPHA8_ASTC_5x4_Format, SRGB8_ALPHA8_ASTC_5x5_Format, SRGB8_ALPHA8_ASTC_6x5_Format, SRGB8_ALPHA8_ASTC_6x6_Format, SRGB8_ALPHA8_ASTC_8x5_Format, SRGB8_ALPHA8_ASTC_8x6_Format, SRGB8_ALPHA8_ASTC_8x8_Format, Scene, SceneUtils, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry as ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, SmoothShading, Sphere, SphereGeometry as SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry as TetrahedronBufferGeometry, TetrahedronGeometry, TextGeometry as TextBufferGeometry, TextGeometry, Texture, TextureLoader, TorusGeometry as TorusBufferGeometry, TorusGeometry, TorusKnotGeometry as TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry as TubeBufferGeometry, TubeGeometry, UVMapping, Uint16Attribute, Uint16BufferAttribute, Uint32Attribute, Uint32BufferAttribute, Uint8Attribute, Uint8BufferAttribute, Uint8ClampedAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShort565Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, Vertex, VertexColors, VideoTexture, WebGL1Renderer, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLMultisampleRenderTarget, WebGLRenderTarget, WebGLRenderTargetCube, WebGLRenderer, WebGLUtils, WireframeGeometry, WireframeHelper, WrapAroundEnding, XHRLoader, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, sRGBEncoding };\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","module.exports = JSON.parse(\"{\\\"glyphs\\\":{\\\"0\\\":{\\\"ha\\\":836,\\\"x_min\\\":38,\\\"x_max\\\":799,\\\"o\\\":\\\"m 418 967 q 700 838 601 967 q 799 471 799 710 q 700 102 799 232 q 418 -28 601 -28 q 136 102 235 -28 q 38 471 38 232 q 136 838 38 710 q 418 967 235 967 m 418 768 q 358 742 379 768 q 327 653 336 717 q 318 471 318 589 q 327 288 318 351 q 358 199 336 225 q 418 172 379 172 q 479 197 458 172 q 509 285 500 221 q 518 471 518 349 q 509 658 518 594 q 479 744 500 721 q 418 768 458 768 z \\\"},\\\"1\\\":{\\\"ha\\\":669,\\\"x_min\\\":0,\\\"x_max\\\":579,\\\"o\\\":\\\"m 579 0 l 313 0 l 313 683 l 119 565 l 0 744 l 335 944 l 579 944 l 579 0 z \\\"},\\\"2\\\":{\\\"ha\\\":736,\\\"x_min\\\":-7,\\\"x_max\\\":708,\\\"o\\\":\\\"m 339 967 q 531 929 451 967 q 649 828 610 892 q 689 690 689 765 q 663 558 689 619 q 563 414 638 497 q 343 206 489 331 l 708 206 l 681 0 l 32 0 l 32 189 q 270 424 193 342 q 378 558 347 506 q 408 660 408 611 q 382 734 408 707 q 308 761 356 761 q 226 738 263 761 q 150 667 189 715 l -7 792 q 140 919 53 872 q 339 967 228 967 z \\\"},\\\"3\\\":{\\\"ha\\\":739,\\\"x_min\\\":-21,\\\"x_max\\\":711,\\\"o\\\":\\\"m 343 967 q 526 936 450 967 q 640 851 601 906 q 679 728 679 797 q 632 585 679 643 q 493 499 585 526 q 650 430 589 488 q 711 263 711 372 q 667 117 711 183 q 537 12 624 51 q 328 -28 450 -28 q -21 125 104 -28 l 122 265 q 213 198 171 218 q 308 178 256 178 q 397 206 363 178 q 431 286 431 233 q 398 374 431 346 q 296 401 365 401 l 213 401 l 243 585 l 300 585 q 386 610 357 585 q 415 681 415 636 q 387 745 415 722 q 308 768 358 768 q 131 689 213 768 l -4 831 q 343 967 136 967 z \\\"},\\\"4\\\":{\\\"ha\\\":813,\\\"x_min\\\":28,\\\"x_max\\\":792,\\\"o\\\":\\\"m 792 186 l 694 186 l 694 0 l 425 0 l 424 186 l 28 186 l 28 365 l 288 974 l 522 890 l 310 389 l 426 389 l 458 594 l 694 594 l 694 389 l 792 389 l 792 186 z \\\"},\\\"5\\\":{\\\"ha\\\":774,\\\"x_min\\\":7,\\\"x_max\\\":739,\\\"o\\\":\\\"m 660 753 l 333 753 l 333 601 q 465 631 397 631 q 605 594 543 631 q 703 486 667 557 q 739 318 739 415 q 690 137 739 215 q 551 15 642 58 q 342 -28 461 -28 q 7 129 132 -28 l 158 267 q 329 175 228 175 q 425 210 392 175 q 458 314 458 246 q 430 417 458 386 q 349 449 401 449 q 249 415 303 449 l 69 415 l 69 944 l 689 944 l 660 753 z \\\"},\\\"6\\\":{\\\"ha\\\":808,\\\"x_min\\\":38,\\\"x_max\\\":788,\\\"o\\\":\\\"m 511 644 q 656 606 593 644 q 753 494 718 567 q 788 324 788 422 q 744 149 788 229 q 618 21 701 69 q 421 -28 535 -28 q 133 93 229 -28 q 38 425 38 214 q 92 710 38 588 q 246 899 146 832 q 482 967 346 967 q 608 949 550 967 q 708 903 665 932 l 610 743 q 552 769 579 760 q 490 778 525 778 q 381 728 424 778 q 326 578 339 678 q 511 644 410 644 m 424 164 q 491 206 469 164 q 513 322 513 247 q 492 431 513 400 q 425 463 472 463 q 326 421 376 463 q 335 267 326 322 q 365 188 344 213 q 424 164 386 164 z \\\"},\\\"7\\\":{\\\"ha\\\":669,\\\"x_min\\\":7,\\\"x_max\\\":656,\\\"o\\\":\\\"m 656 764 l 313 -28 l 64 56 l 367 742 l 7 742 l 7 944 l 656 944 l 656 764 z \\\"},\\\"8\\\":{\\\"ha\\\":832,\\\"x_min\\\":28,\\\"x_max\\\":804,\\\"o\\\":\\\"m 622 507 q 760 397 717 458 q 804 257 804 335 q 758 115 804 181 q 624 11 713 50 q 410 -28 535 -28 q 204 10 290 -28 q 73 113 118 49 q 28 253 28 176 q 72 388 28 331 q 196 481 115 446 q 64 707 64 567 q 107 840 64 781 q 231 933 150 899 q 417 967 311 967 q 673 901 578 967 q 768 721 768 835 q 732 606 768 663 q 622 507 696 549 m 418 788 q 353 766 376 788 q 329 703 329 744 q 347 640 329 667 q 407 592 365 613 l 440 578 q 490 638 478 607 q 503 706 503 668 q 481 765 503 743 q 418 788 460 788 m 419 164 q 503 192 475 164 q 532 261 532 219 q 507 333 532 307 q 422 385 482 360 l 369 404 q 317 346 335 381 q 300 269 300 311 q 333 193 300 222 q 419 164 365 164 z \\\"},\\\"9\\\":{\\\"ha\\\":808,\\\"x_min\\\":21,\\\"x_max\\\":781,\\\"o\\\":\\\"m 400 967 q 608 920 522 967 q 738 791 694 874 q 781 601 781 708 q 713 281 781 411 q 503 71 644 150 q 142 -44 363 -8 l 88 144 q 285 201 210 171 q 406 277 360 232 q 481 393 453 322 q 399 336 442 354 q 296 318 357 318 q 158 356 221 318 q 58 466 96 394 q 21 633 21 538 q 70 806 21 731 q 206 924 119 882 q 400 967 293 967 m 388 504 q 447 519 418 504 q 499 567 476 535 q 491 692 500 647 q 460 758 482 738 q 397 778 439 778 q 324 744 351 778 q 296 647 296 711 q 388 504 296 504 z \\\"},\\\"\\\\r\\\":{\\\"ha\\\":306,\\\"x_min\\\":0,\\\"x_max\\\":0,\\\"o\\\":\\\"\\\"},\\\" \\\":{\\\"ha\\\":306,\\\"x_min\\\":0,\\\"x_max\\\":0,\\\"o\\\":\\\"\\\"},\\\"A\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 z \\\"},\\\"Á\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 m 629 1167 l 276 1040 l 207 1178 l 532 1367 l 629 1167 z \\\"},\\\"Ă\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 m 418 1036 q 236 1112 301 1036 q 161 1294 171 1188 l 304 1318 q 345 1249 317 1276 q 418 1222 374 1222 q 491 1249 463 1222 q 532 1318 519 1276 l 675 1294 q 600 1112 665 1188 q 418 1036 535 1036 z \\\"},\\\"Ắ\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 z \\\"},\\\"Ặ\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 m 418 1036 q 236 1112 301 1036 q 161 1294 171 1188 l 304 1318 q 345 1249 317 1276 q 418 1222 374 1222 q 491 1249 463 1222 q 532 1318 519 1276 l 675 1294 q 600 1112 665 1188 q 418 1036 535 1036 m 418 -367 q 308 -324 351 -367 q 264 -219 264 -282 q 308 -115 264 -157 q 418 -72 351 -72 q 528 -115 485 -72 q 572 -219 572 -157 q 528 -324 572 -282 q 418 -367 485 -367 z \\\"},\\\"Ằ\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 z \\\"},\\\"Ẳ\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 z \\\"},\\\"Ẵ\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 z \\\"},\\\"Ǎ\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 m 701 1233 l 500 1038 l 336 1038 l 135 1233 l 228 1340 l 418 1221 l 608 1340 l 701 1233 z \\\"},\\\"Â\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 m 135 1151 l 336 1347 l 500 1347 l 701 1151 l 608 1044 l 418 1164 l 228 1044 l 135 1151 z \\\"},\\\"Ấ\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":908,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 z \\\"},\\\"Ậ\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 m 135 1151 l 336 1347 l 500 1347 l 701 1151 l 608 1044 l 418 1164 l 228 1044 l 135 1151 m 418 -367 q 308 -324 351 -367 q 264 -219 264 -282 q 308 -115 264 -157 q 418 -72 351 -72 q 528 -115 485 -72 q 572 -219 572 -157 q 528 -324 572 -282 q 418 -367 485 -367 z \\\"},\\\"Ầ\\\":{\\\"ha\\\":835,\\\"x_min\\\":-71,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 z \\\"},\\\"Ẩ\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":871,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 z \\\"},\\\"Ẫ\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 z \\\"},\\\"Ȁ\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 z \\\"},\\\"Ä\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 z \\\"},\\\"Ǟ\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 z \\\"},\\\"Ȧ\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 z \\\"},\\\"Ạ\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 m 418 -367 q 308 -324 351 -367 q 264 -219 264 -282 q 308 -115 264 -157 q 418 -72 351 -72 q 528 -115 485 -72 q 572 -219 572 -157 q 528 -324 572 -282 q 418 -367 485 -367 z \\\"},\\\"Ǡ\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 z \\\"},\\\"À\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 m 629 1178 l 560 1040 l 207 1167 l 306 1367 l 629 1178 z \\\"},\\\"Ả\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 m 342 1190 q 417 1203 394 1192 q 440 1239 440 1214 q 426 1267 440 1257 q 389 1278 413 1278 q 347 1274 365 1278 q 303 1260 328 1269 l 263 1363 q 426 1401 328 1401 q 564 1360 515 1401 q 613 1251 613 1318 q 582 1161 613 1196 q 493 1115 551 1126 l 493 1061 l 342 1061 l 342 1190 z \\\"},\\\"Ȃ\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 m 418 1346 q 601 1268 536 1346 q 675 1074 665 1190 l 532 1050 q 491 1131 519 1101 q 418 1160 463 1160 q 345 1131 374 1160 q 304 1050 317 1101 l 161 1074 q 235 1268 171 1190 q 418 1346 300 1346 z \\\"},\\\"Ɑ\\\":{\\\"ha\\\":956,\\\"x_min\\\":28,\\\"x_max\\\":943,\\\"o\\\":\\\"m 886 279 q 899 211 886 235 q 943 171 911 188 l 865 -28 q 739 8 789 -17 q 656 75 689 32 q 410 -28 563 -28 q 207 33 293 -28 q 74 206 121 93 q 28 471 28 318 q 77 750 28 632 q 213 931 126 868 q 413 994 300 994 q 534 969 482 994 q 631 900 586 944 l 644 967 l 886 967 l 886 279 m 325 471 q 362 236 325 304 q 476 168 399 168 q 600 217 547 168 l 600 739 q 476 792 550 792 q 362 718 399 792 q 325 471 325 644 z \\\"},\\\"Ā\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 z \\\"},\\\"Ą\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 717 0 q 592 -65 626 -31 q 557 -132 557 -100 q 628 -193 557 -193 q 713 -182 664 -193 l 696 -342 q 593 -353 647 -353 q 433 -306 496 -353 q 371 -178 371 -258 q 557 46 371 -32 l 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 717 0 m 489 388 l 414 767 l 340 388 l 489 388 z \\\"},\\\"Å\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 z \\\"},\\\"Ǻ\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 z \\\"},\\\"Ⱥ\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 551 188 l 417 188 l 339 -107 l 247 -86 l 319 188 l 278 188 l 236 0 l -35 0 l 247 967 l 525 967 l 549 1054 l 639 1033 l 606 908 l 869 0 l 594 0 l 551 188 m 368 374 l 444 660 l 414 794 l 319 374 l 368 374 m 510 374 l 489 464 l 465 374 l 510 374 z \\\"},\\\"Ã\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 z \\\"},\\\"Æ\\\":{\\\"ha\\\":1199,\\\"x_min\\\":-42,\\\"x_max\\\":1171,\\\"o\\\":\\\"m 1171 200 l 1171 0 l 606 0 l 581 188 l 326 188 l 269 0 l -42 0 l 335 967 l 1122 967 l 1093 768 l 750 768 l 782 585 l 1110 585 l 1110 392 l 814 392 l 847 200 l 1171 200 m 553 388 l 503 763 l 388 388 l 553 388 z \\\"},\\\"Ǽ\\\":{\\\"ha\\\":1199,\\\"x_min\\\":-42,\\\"x_max\\\":1171,\\\"o\\\":\\\"m 1171 200 l 1171 0 l 606 0 l 581 188 l 326 188 l 269 0 l -42 0 l 335 967 l 1122 967 l 1093 768 l 750 768 l 782 585 l 1110 585 l 1110 392 l 814 392 l 847 200 l 1171 200 m 553 388 l 503 763 l 388 388 l 553 388 m 890 1167 l 538 1040 l 468 1178 l 793 1367 l 890 1167 z \\\"},\\\"Ǣ\\\":{\\\"ha\\\":1199,\\\"x_min\\\":-42,\\\"x_max\\\":1171,\\\"o\\\":\\\"m 1171 200 l 1171 0 l 606 0 l 581 188 l 326 188 l 269 0 l -42 0 l 335 967 l 1122 967 l 1093 768 l 750 768 l 782 585 l 1110 585 l 1110 392 l 814 392 l 847 200 l 1171 200 m 553 388 l 503 763 l 388 388 l 553 388 z \\\"},\\\"B\\\":{\\\"ha\\\":864,\\\"x_min\\\":60,\\\"x_max\\\":843,\\\"o\\\":\\\"m 628 513 q 783 441 724 493 q 843 286 843 389 q 727 63 843 126 q 399 0 611 0 l 60 0 l 60 967 l 361 967 q 690 909 576 967 q 803 717 803 851 q 753 581 803 631 q 628 513 703 532 m 346 771 l 346 593 l 394 593 q 486 615 460 593 q 513 688 513 636 q 484 751 513 731 q 388 771 456 771 l 346 771 m 401 201 q 511 224 474 201 q 549 306 549 246 q 515 387 549 361 q 413 413 481 413 l 346 413 l 346 201 l 401 201 z \\\"},\\\"Ḃ\\\":{\\\"ha\\\":864,\\\"x_min\\\":60,\\\"x_max\\\":843,\\\"o\\\":\\\"m 628 513 q 783 441 724 493 q 843 286 843 389 q 727 63 843 126 q 399 0 611 0 l 60 0 l 60 967 l 361 967 q 690 909 576 967 q 803 717 803 851 q 753 581 803 631 q 628 513 703 532 m 346 771 l 346 593 l 394 593 q 486 615 460 593 q 513 688 513 636 q 484 751 513 731 q 388 771 456 771 l 346 771 m 401 201 q 511 224 474 201 q 549 306 549 246 q 515 387 549 361 q 413 413 481 413 l 346 413 l 346 201 l 401 201 z \\\"},\\\"Ḅ\\\":{\\\"ha\\\":864,\\\"x_min\\\":60,\\\"x_max\\\":843,\\\"o\\\":\\\"m 628 513 q 783 441 724 493 q 843 286 843 389 q 727 63 843 126 q 399 0 611 0 l 60 0 l 60 967 l 361 967 q 690 909 576 967 q 803 717 803 851 q 753 581 803 631 q 628 513 703 532 m 346 771 l 346 593 l 394 593 q 486 615 460 593 q 513 688 513 636 q 484 751 513 731 q 388 771 456 771 l 346 771 m 401 201 q 511 224 474 201 q 549 306 549 246 q 515 387 549 361 q 413 413 481 413 l 346 413 l 346 201 l 401 201 m 431 -367 q 320 -324 364 -367 q 276 -219 276 -282 q 320 -115 276 -157 q 431 -72 364 -72 q 541 -115 497 -72 q 585 -219 585 -157 q 541 -324 585 -282 q 431 -367 497 -367 z \\\"},\\\"Ꞵ\\\":{\\\"ha\\\":864,\\\"x_min\\\":60,\\\"x_max\\\":843,\\\"o\\\":\\\"m 628 513 q 783 442 722 493 q 843 289 843 390 q 736 67 843 133 q 468 0 629 0 q 346 10 414 0 l 346 -299 l 60 -299 l 60 967 l 361 967 q 690 909 576 967 q 803 717 803 851 q 753 581 803 631 q 628 513 703 532 m 419 201 q 549 311 549 201 q 521 388 549 363 q 440 413 493 413 l 407 413 l 421 593 l 425 593 q 489 615 465 593 q 513 681 513 638 q 484 750 513 729 q 388 771 456 771 l 346 771 l 346 206 q 419 201 383 201 z \\\"},\\\"Ɓ\\\":{\\\"ha\\\":1110,\\\"x_min\\\":0,\\\"x_max\\\":1089,\\\"o\\\":\\\"m 874 513 q 1029 441 969 493 q 1089 286 1089 389 q 973 63 1089 126 q 644 0 857 0 l 306 0 l 306 768 l 271 768 q 214 717 214 768 q 219 678 214 697 q 235 632 224 660 l 64 560 q 17 648 35 606 q 0 736 0 690 q 78 906 0 844 q 286 967 157 967 l 607 967 q 935 909 822 967 q 1049 717 1049 851 q 999 581 1049 631 q 874 513 949 532 m 592 771 l 592 593 l 640 593 q 732 615 706 593 q 758 688 758 636 q 730 751 758 731 q 633 771 701 771 l 592 771 m 647 201 q 757 224 719 201 q 794 306 794 246 q 760 387 794 361 q 658 413 726 413 l 592 413 l 592 201 l 647 201 z \\\"},\\\"Ƀ\\\":{\\\"ha\\\":886,\\\"x_min\\\":14,\\\"x_max\\\":865,\\\"o\\\":\\\"m 650 513 q 806 441 746 493 q 865 286 865 389 q 749 63 865 126 q 421 0 633 0 l 82 0 l 82 250 l 14 250 l 14 369 l 82 369 l 82 967 l 383 967 q 712 909 599 967 q 825 717 825 851 q 775 581 825 631 q 650 513 725 532 m 368 771 l 368 593 l 417 593 q 508 615 482 593 q 535 688 535 636 q 506 751 535 731 q 410 771 478 771 l 368 771 m 424 201 q 533 224 496 201 q 571 306 571 246 q 537 387 571 361 q 435 413 503 413 l 368 413 l 368 369 l 493 369 l 493 250 l 368 250 l 368 201 l 424 201 z \\\"},\\\"Ƃ\\\":{\\\"ha\\\":842,\\\"x_min\\\":60,\\\"x_max\\\":828,\\\"o\\\":\\\"m 435 633 q 726 556 625 633 q 828 326 828 478 q 722 85 828 169 q 446 0 617 0 l 60 0 l 60 967 l 710 967 l 682 754 l 346 754 l 346 633 l 435 633 m 408 201 q 500 234 469 201 q 531 324 531 267 q 403 442 531 442 l 346 442 l 346 201 l 408 201 z \\\"},\\\"C\\\":{\\\"ha\\\":811,\\\"x_min\\\":28,\\\"x_max\\\":811,\\\"o\\\":\\\"m 489 994 q 800 881 668 994 l 668 725 q 587 772 626 756 q 503 789 547 789 q 372 713 418 789 q 325 486 325 636 q 372 262 325 336 q 507 188 419 188 q 595 207 554 188 q 686 265 636 226 l 811 107 q 670 10 753 49 q 493 -28 588 -28 q 246 31 350 -28 q 85 206 142 90 q 28 486 28 321 q 86 759 28 644 q 249 934 144 874 q 489 994 353 994 z \\\"},\\\"Ć\\\":{\\\"ha\\\":811,\\\"x_min\\\":28,\\\"x_max\\\":811,\\\"o\\\":\\\"m 489 994 q 800 881 668 994 l 668 725 q 587 772 626 756 q 503 789 547 789 q 372 713 418 789 q 325 486 325 636 q 372 262 325 336 q 507 188 419 188 q 595 207 554 188 q 686 265 636 226 l 811 107 q 670 10 753 49 q 493 -28 588 -28 q 246 31 350 -28 q 85 206 142 90 q 28 486 28 321 q 86 759 28 644 q 249 934 144 874 q 489 994 353 994 m 708 1167 l 356 1040 l 286 1178 l 611 1367 l 708 1167 z \\\"},\\\"Č\\\":{\\\"ha\\\":811,\\\"x_min\\\":28,\\\"x_max\\\":811,\\\"o\\\":\\\"m 489 994 q 800 881 668 994 l 668 725 q 587 772 626 756 q 503 789 547 789 q 372 713 418 789 q 325 486 325 636 q 372 262 325 336 q 507 188 419 188 q 595 207 554 188 q 686 265 636 226 l 811 107 q 670 10 753 49 q 493 -28 588 -28 q 246 31 350 -28 q 85 206 142 90 q 28 486 28 321 q 86 759 28 644 q 249 934 144 874 q 489 994 353 994 m 781 1233 l 579 1038 l 415 1038 l 214 1233 l 307 1340 l 497 1221 l 688 1340 l 781 1233 z \\\"},\\\"Ç\\\":{\\\"ha\\\":811,\\\"x_min\\\":28,\\\"x_max\\\":811,\\\"o\\\":\\\"m 539 -60 q 692 -210 692 -79 q 631 -333 692 -285 q 464 -382 569 -382 q 367 -369 413 -382 q 290 -335 322 -356 l 350 -215 q 439 -240 396 -240 q 501 -207 501 -240 q 471 -176 501 -185 q 371 -167 440 -167 l 389 -19 q 124 141 219 11 q 28 486 28 271 q 86 759 28 644 q 249 934 144 874 q 489 994 353 994 q 800 881 668 994 l 668 725 q 587 772 626 756 q 503 789 547 789 q 372 713 418 789 q 325 486 325 636 q 372 262 325 336 q 507 188 419 188 q 595 207 554 188 q 686 265 636 226 l 811 107 q 690 19 760 56 q 539 -25 619 -17 l 539 -60 z \\\"},\\\"Ĉ\\\":{\\\"ha\\\":811,\\\"x_min\\\":28,\\\"x_max\\\":811,\\\"o\\\":\\\"m 489 994 q 800 881 668 994 l 668 725 q 587 772 626 756 q 503 789 547 789 q 372 713 418 789 q 325 486 325 636 q 372 262 325 336 q 507 188 419 188 q 595 207 554 188 q 686 265 636 226 l 811 107 q 670 10 753 49 q 493 -28 588 -28 q 246 31 350 -28 q 85 206 142 90 q 28 486 28 321 q 86 759 28 644 q 249 934 144 874 q 489 994 353 994 m 214 1151 l 415 1347 l 579 1347 l 781 1151 l 688 1044 l 497 1164 l 307 1044 l 214 1151 z \\\"},\\\"Ċ\\\":{\\\"ha\\\":811,\\\"x_min\\\":28,\\\"x_max\\\":811,\\\"o\\\":\\\"m 489 994 q 800 881 668 994 l 668 725 q 587 772 626 756 q 503 789 547 789 q 372 713 418 789 q 325 486 325 636 q 372 262 325 336 q 507 188 419 188 q 595 207 554 188 q 686 265 636 226 l 811 107 q 670 10 753 49 q 493 -28 588 -28 q 246 31 350 -28 q 85 206 142 90 q 28 486 28 321 q 86 759 28 644 q 249 934 144 874 q 489 994 353 994 z \\\"},\\\"Ꭓ\\\":{\\\"ha\\\":828,\\\"x_min\\\":-14,\\\"x_max\\\":842,\\\"o\\\":\\\"m 842 -250 l 533 -250 l 407 207 l 289 -250 l -14 -250 l 238 388 l 4 967 l 311 967 l 410 564 l 521 967 l 822 967 l 579 396 l 842 -250 z \\\"},\\\"Ƈ\\\":{\\\"ha\\\":811,\\\"x_min\\\":28,\\\"x_max\\\":1022,\\\"o\\\":\\\"m 818 1199 q 1022 1147 932 1199 l 950 978 q 861 1001 900 1001 q 815 983 829 1001 q 800 926 800 965 l 800 881 l 679 739 q 596 776 636 764 q 500 789 556 789 q 371 713 417 789 q 325 486 325 636 q 372 262 325 336 q 508 188 419 188 q 594 208 554 188 q 686 268 635 228 l 811 107 q 670 10 753 49 q 492 -28 588 -28 q 246 31 350 -28 q 85 206 142 90 q 28 486 28 321 q 85 757 28 642 q 239 933 143 872 q 447 994 335 994 q 567 974 517 994 q 635 1140 574 1081 q 818 1199 697 1199 z \\\"},\\\"Ȼ\\\":{\\\"ha\\\":811,\\\"x_min\\\":28,\\\"x_max\\\":811,\\\"o\\\":\\\"m 811 107 q 670 10 753 49 q 493 -28 588 -28 q 390 -19 439 -28 l 367 -107 l 275 -86 l 300 6 q 99 179 169 57 q 28 486 28 301 q 86 759 28 644 q 249 934 144 874 q 489 994 353 994 q 560 990 526 994 l 576 1054 l 667 1033 l 650 968 q 800 881 733 939 l 668 725 q 597 768 624 756 l 447 197 q 507 188 472 188 q 595 207 554 188 q 686 265 636 226 l 811 107 m 325 486 q 368 268 325 343 l 507 789 l 503 789 q 372 713 418 789 q 325 486 325 636 z \\\"},\\\"D\\\":{\\\"ha\\\":911,\\\"x_min\\\":60,\\\"x_max\\\":883,\\\"o\\\":\\\"m 369 967 q 743 863 603 967 q 883 488 883 760 q 749 110 883 219 q 386 0 614 0 l 60 0 l 60 967 l 369 967 m 346 765 l 346 201 l 403 201 q 510 228 469 201 q 569 316 550 254 q 589 488 589 378 q 569 656 589 596 q 508 741 549 717 q 404 765 468 765 l 346 765 z \\\"},\\\"Ǳ\\\":{\\\"ha\\\":1650,\\\"x_min\\\":60,\\\"x_max\\\":1629,\\\"o\\\":\\\"m 369 967 q 743 863 603 967 q 883 488 883 760 q 749 110 883 219 q 386 0 614 0 l 60 0 l 60 967 l 369 967 m 346 765 l 346 201 l 403 201 q 510 228 469 201 q 569 316 550 254 q 589 488 589 378 q 569 656 589 596 q 508 741 549 717 q 404 765 468 765 l 346 765 m 1617 754 l 1232 224 l 1629 224 l 1601 0 l 890 0 l 890 210 l 1288 750 l 929 750 l 929 967 l 1617 967 l 1617 754 z \\\"},\\\"Ǆ\\\":{\\\"ha\\\":1650,\\\"x_min\\\":60,\\\"x_max\\\":1629,\\\"o\\\":\\\"m 369 967 q 743 863 603 967 q 883 488 883 760 q 749 110 883 219 q 386 0 614 0 l 60 0 l 60 967 l 369 967 m 346 765 l 346 201 l 403 201 q 510 228 469 201 q 569 316 550 254 q 589 488 589 378 q 569 656 589 596 q 508 741 549 717 q 404 765 468 765 l 346 765 z \\\"},\\\"Ɖ\\\":{\\\"ha\\\":932,\\\"x_min\\\":14,\\\"x_max\\\":904,\\\"o\\\":\\\"m 390 967 q 764 863 624 967 q 904 488 904 760 q 769 110 904 219 q 407 0 635 0 l 81 0 l 81 410 l 14 410 l 14 571 l 81 571 l 81 967 l 390 967 m 424 201 q 531 228 490 201 q 590 316 571 254 q 610 488 610 378 q 590 656 610 596 q 529 741 569 717 q 425 765 489 765 l 367 765 l 367 571 l 535 571 l 535 410 l 367 410 l 367 201 l 424 201 z \\\"},\\\"Ð\\\":{\\\"ha\\\":932,\\\"x_min\\\":14,\\\"x_max\\\":904,\\\"o\\\":\\\"m 390 967 q 764 863 624 967 q 904 488 904 760 q 769 110 904 219 q 407 0 635 0 l 81 0 l 81 410 l 14 410 l 14 571 l 81 571 l 81 967 l 390 967 m 424 201 q 531 228 490 201 q 590 316 571 254 q 610 488 610 378 q 590 656 610 596 q 529 741 569 717 q 425 765 489 765 l 367 765 l 367 571 l 535 571 l 535 410 l 367 410 l 367 201 l 424 201 z \\\"},\\\"Ď\\\":{\\\"ha\\\":911,\\\"x_min\\\":60,\\\"x_max\\\":883,\\\"o\\\":\\\"m 369 967 q 743 863 603 967 q 883 488 883 760 q 749 110 883 219 q 386 0 614 0 l 60 0 l 60 967 l 369 967 m 346 765 l 346 201 l 403 201 q 510 228 469 201 q 569 316 550 254 q 589 488 589 378 q 569 656 589 596 q 508 741 549 717 q 404 765 468 765 l 346 765 m 688 1233 l 486 1038 l 322 1038 l 121 1233 l 214 1340 l 404 1221 l 594 1340 l 688 1233 z \\\"},\\\"Ḓ\\\":{\\\"ha\\\":911,\\\"x_min\\\":60,\\\"x_max\\\":883,\\\"o\\\":\\\"m 369 967 q 743 863 603 967 q 883 488 883 760 q 749 110 883 219 q 386 0 614 0 l 60 0 l 60 967 l 369 967 m 346 765 l 346 201 l 403 201 q 510 228 469 201 q 569 316 550 254 q 589 488 589 378 q 569 656 589 596 q 508 741 549 717 q 404 765 468 765 l 346 765 m 147 -293 l 349 -83 l 513 -83 l 714 -293 l 621 -400 l 431 -267 l 240 -400 l 147 -293 z \\\"},\\\"Đ\\\":{\\\"ha\\\":932,\\\"x_min\\\":14,\\\"x_max\\\":904,\\\"o\\\":\\\"m 390 967 q 764 863 624 967 q 904 488 904 760 q 769 110 904 219 q 407 0 635 0 l 81 0 l 81 410 l 14 410 l 14 571 l 81 571 l 81 967 l 390 967 m 424 201 q 531 228 490 201 q 590 316 571 254 q 610 488 610 378 q 590 656 610 596 q 529 741 569 717 q 425 765 489 765 l 367 765 l 367 571 l 535 571 l 535 410 l 367 410 l 367 201 l 424 201 z \\\"},\\\"Ḋ\\\":{\\\"ha\\\":911,\\\"x_min\\\":60,\\\"x_max\\\":883,\\\"o\\\":\\\"m 369 967 q 743 863 603 967 q 883 488 883 760 q 749 110 883 219 q 386 0 614 0 l 60 0 l 60 967 l 369 967 m 346 765 l 346 201 l 403 201 q 510 228 469 201 q 569 316 550 254 q 589 488 589 378 q 569 656 589 596 q 508 741 549 717 q 404 765 468 765 l 346 765 z \\\"},\\\"Ḍ\\\":{\\\"ha\\\":911,\\\"x_min\\\":60,\\\"x_max\\\":883,\\\"o\\\":\\\"m 369 967 q 743 863 603 967 q 883 488 883 760 q 749 110 883 219 q 386 0 614 0 l 60 0 l 60 967 l 369 967 m 346 765 l 346 201 l 403 201 q 510 228 469 201 q 569 316 550 254 q 589 488 589 378 q 569 656 589 596 q 508 741 549 717 q 404 765 468 765 l 346 765 m 431 -367 q 320 -324 364 -367 q 276 -219 276 -282 q 320 -115 276 -157 q 431 -72 364 -72 q 541 -115 497 -72 q 585 -219 585 -157 q 541 -324 585 -282 q 431 -367 497 -367 z \\\"},\\\"Ɗ\\\":{\\\"ha\\\":1157,\\\"x_min\\\":0,\\\"x_max\\\":1129,\\\"o\\\":\\\"m 615 967 q 989 863 849 967 q 1129 488 1129 760 q 994 110 1129 219 q 632 0 860 0 l 306 0 l 306 768 l 271 768 q 214 717 214 768 q 219 678 214 697 q 235 632 224 660 l 64 560 q 17 648 35 606 q 0 736 0 690 q 78 906 0 844 q 286 967 157 967 l 615 967 m 649 201 q 756 228 715 201 q 815 316 796 254 q 835 488 835 378 q 815 656 835 596 q 754 741 794 717 q 650 765 714 765 l 592 765 l 592 201 l 649 201 z \\\"},\\\"Ḏ\\\":{\\\"ha\\\":911,\\\"x_min\\\":60,\\\"x_max\\\":883,\\\"o\\\":\\\"m 369 967 q 743 863 603 967 q 883 488 883 760 q 749 110 883 219 q 386 0 614 0 l 60 0 l 60 967 l 369 967 m 346 765 l 346 201 l 403 201 q 510 228 469 201 q 569 316 550 254 q 589 488 589 378 q 569 656 589 596 q 508 741 549 717 q 404 765 468 765 l 346 765 z \\\"},\\\"Ƌ\\\":{\\\"ha\\\":842,\\\"x_min\\\":14,\\\"x_max\\\":782,\\\"o\\\":\\\"m 782 0 l 392 0 q 117 81 219 0 q 14 319 14 161 q 117 551 14 469 q 407 633 219 633 l 496 633 l 496 754 l 143 754 l 143 967 l 782 967 l 782 0 m 496 201 l 496 442 l 439 442 q 311 319 311 442 q 342 233 311 264 q 433 201 372 201 l 496 201 z \\\"},\\\"ǲ\\\":{\\\"ha\\\":1546,\\\"x_min\\\":60,\\\"x_max\\\":1539,\\\"o\\\":\\\"m 369 967 q 743 863 603 967 q 883 488 883 760 q 749 110 883 219 q 386 0 614 0 l 60 0 l 60 967 l 369 967 m 346 765 l 346 201 l 403 201 q 510 228 469 201 q 569 316 550 254 q 589 488 589 378 q 569 656 589 596 q 508 741 549 717 q 404 765 468 765 l 346 765 m 1529 551 l 1225 203 l 1539 203 l 1515 0 l 904 0 l 904 192 l 1213 542 l 932 542 l 932 742 l 1529 742 l 1529 551 z \\\"},\\\"ǅ\\\":{\\\"ha\\\":1546,\\\"x_min\\\":60,\\\"x_max\\\":1539,\\\"o\\\":\\\"m 369 967 q 743 863 603 967 q 883 488 883 760 q 749 110 883 219 q 386 0 614 0 l 60 0 l 60 967 l 369 967 m 346 765 l 346 201 l 403 201 q 510 228 469 201 q 569 316 550 254 q 589 488 589 378 q 569 656 589 596 q 508 741 549 717 q 404 765 468 765 l 346 765 z \\\"},\\\"E\\\":{\\\"ha\\\":722,\\\"x_min\\\":60,\\\"x_max\\\":694,\\\"o\\\":\\\"m 665 768 l 346 768 l 346 588 l 626 588 l 626 394 l 346 394 l 346 200 l 688 200 l 688 0 l 60 0 l 60 967 l 694 967 l 665 768 z \\\"},\\\"É\\\":{\\\"ha\\\":722,\\\"x_min\\\":60,\\\"x_max\\\":694,\\\"o\\\":\\\"m 665 768 l 346 768 l 346 588 l 626 588 l 626 394 l 346 394 l 346 200 l 688 200 l 688 0 l 60 0 l 60 967 l 694 967 l 665 768 m 589 1167 l 236 1040 l 167 1178 l 492 1367 l 589 1167 z \\\"},\\\"Ĕ\\\":{\\\"ha\\\":722,\\\"x_min\\\":60,\\\"x_max\\\":694,\\\"o\\\":\\\"m 665 768 l 346 768 l 346 588 l 626 588 l 626 394 l 346 394 l 346 200 l 688 200 l 688 0 l 60 0 l 60 967 l 694 967 l 665 768 m 378 1036 q 196 1112 261 1036 q 121 1294 131 1188 l 264 1318 q 305 1249 276 1276 q 378 1222 333 1222 q 451 1249 422 1222 q 492 1318 479 1276 l 635 1294 q 560 1112 625 1188 q 378 1036 494 1036 z \\\"},\\\"Ě\\\":{\\\"ha\\\":722,\\\"x_min\\\":60,\\\"x_max\\\":694,\\\"o\\\":\\\"m 665 768 l 346 768 l 346 588 l 626 588 l 626 394 l 346 394 l 346 200 l 688 200 l 688 0 l 60 0 l 60 967 l 694 967 l 665 768 m 661 1233 l 460 1038 l 296 1038 l 94 1233 l 188 1340 l 378 1221 l 568 1340 l 661 1233 z \\\"},\\\"Ȩ\\\":{\\\"ha\\\":722,\\\"x_min\\\":60,\\\"x_max\\\":694,\\\"o\\\":\\\"m 346 200 l 688 200 l 688 0 l 442 0 l 442 -60 q 594 -210 594 -79 q 533 -333 594 -285 q 367 -382 472 -382 q 270 -369 315 -382 q 193 -335 225 -356 l 253 -215 q 342 -240 299 -240 q 404 -207 404 -240 q 374 -176 404 -185 q 274 -167 343 -167 l 294 0 l 60 0 l 60 967 l 694 967 l 665 768 l 346 768 l 346 588 l 626 588 l 626 394 l 346 394 l 346 200 z \\\"},\\\"Ê\\\":{\\\"ha\\\":722,\\\"x_min\\\":60,\\\"x_max\\\":694,\\\"o\\\":\\\"m 665 768 l 346 768 l 346 588 l 626 588 l 626 394 l 346 394 l 346 200 l 688 200 l 688 0 l 60 0 l 60 967 l 694 967 l 665 768 m 94 1151 l 296 1347 l 460 1347 l 661 1151 l 568 1044 l 378 1164 l 188 1044 l 94 1151 z \\\"},\\\"Ế\\\":{\\\"ha\\\":722,\\\"x_min\\\":60,\\\"x_max\\\":868,\\\"o\\\":\\\"m 665 768 l 346 768 l 346 588 l 626 588 l 626 394 l 346 394 l 346 200 l 688 200 l 688 0 l 60 0 l 60 967 l 694 967 l 665 768 z \\\"},\\\"Ệ\\\":{\\\"ha\\\":722,\\\"x_min\\\":60,\\\"x_max\\\":694,\\\"o\\\":\\\"m 665 768 l 346 768 l 346 588 l 626 588 l 626 394 l 346 394 l 346 200 l 688 200 l 688 0 l 60 0 l 60 967 l 694 967 l 665 768 m 94 1151 l 296 1347 l 460 1347 l 661 1151 l 568 1044 l 378 1164 l 188 1044 l 94 1151 m 374 -367 q 263 -324 307 -367 q 219 -219 219 -282 q 263 -115 219 -157 q 374 -72 307 -72 q 484 -115 440 -72 q 528 -219 528 -157 q 484 -324 528 -282 q 374 -367 440 -367 z \\\"},\\\"Ề\\\":{\\\"ha\\\":722,\\\"x_min\\\":-111,\\\"x_max\\\":694,\\\"o\\\":\\\"m 665 768 l 346 768 l 346 588 l 626 588 l 626 394 l 346 394 l 346 200 l 688 200 l 688 0 l 60 0 l 60 967 l 694 967 l 665 768 z \\\"},\\\"Ể\\\":{\\\"ha\\\":722,\\\"x_min\\\":60,\\\"x_max\\\":831,\\\"o\\\":\\\"m 665 768 l 346 768 l 346 588 l 626 588 l 626 394 l 346 394 l 346 200 l 688 200 l 688 0 l 60 0 l 60 967 l 694 967 l 665 768 z \\\"},\\\"Ễ\\\":{\\\"ha\\\":722,\\\"x_min\\\":60,\\\"x_max\\\":694,\\\"o\\\":\\\"m 665 768 l 346 768 l 346 588 l 626 588 l 626 394 l 346 394 l 346 200 l 688 200 l 688 0 l 60 0 l 60 967 l 694 967 l 665 768 z \\\"},\\\"Ȅ\\\":{\\\"ha\\\":722,\\\"x_min\\\":18,\\\"x_max\\\":694,\\\"o\\\":\\\"m 665 768 l 346 768 l 346 588 l 626 588 l 626 394 l 346 394 l 346 200 l 688 200 l 688 0 l 60 0 l 60 967 l 694 967 l 665 768 z \\\"},\\\"Ë\\\":{\\\"ha\\\":722,\\\"x_min\\\":60,\\\"x_max\\\":694,\\\"o\\\":\\\"m 665 768 l 346 768 l 346 588 l 626 588 l 626 394 l 346 394 l 346 200 l 688 200 l 688 0 l 60 0 l 60 967 l 694 967 l 665 768 z \\\"},\\\"Ė\\\":{\\\"ha\\\":722,\\\"x_min\\\":60,\\\"x_max\\\":694,\\\"o\\\":\\\"m 665 768 l 346 768 l 346 588 l 626 588 l 626 394 l 346 394 l 346 200 l 688 200 l 688 0 l 60 0 l 60 967 l 694 967 l 665 768 z \\\"},\\\"Ẹ\\\":{\\\"ha\\\":722,\\\"x_min\\\":60,\\\"x_max\\\":694,\\\"o\\\":\\\"m 665 768 l 346 768 l 346 588 l 626 588 l 626 394 l 346 394 l 346 200 l 688 200 l 688 0 l 60 0 l 60 967 l 694 967 l 665 768 m 374 -367 q 263 -324 307 -367 q 219 -219 219 -282 q 263 -115 219 -157 q 374 -72 307 -72 q 484 -115 440 -72 q 528 -219 528 -157 q 484 -324 528 -282 q 374 -367 440 -367 z \\\"},\\\"È\\\":{\\\"ha\\\":722,\\\"x_min\\\":60,\\\"x_max\\\":694,\\\"o\\\":\\\"m 665 768 l 346 768 l 346 588 l 626 588 l 626 394 l 346 394 l 346 200 l 688 200 l 688 0 l 60 0 l 60 967 l 694 967 l 665 768 m 589 1178 l 519 1040 l 167 1167 l 265 1367 l 589 1178 z \\\"},\\\"Ẻ\\\":{\\\"ha\\\":722,\\\"x_min\\\":60,\\\"x_max\\\":694,\\\"o\\\":\\\"m 665 768 l 346 768 l 346 588 l 626 588 l 626 394 l 346 394 l 346 200 l 688 200 l 688 0 l 60 0 l 60 967 l 694 967 l 665 768 m 301 1190 q 377 1203 354 1192 q 400 1239 400 1214 q 386 1267 400 1257 q 349 1278 372 1278 q 306 1274 325 1278 q 263 1260 288 1269 l 222 1363 q 386 1401 288 1401 q 524 1360 475 1401 q 572 1251 572 1318 q 542 1161 572 1196 q 453 1115 511 1126 l 453 1061 l 301 1061 l 301 1190 z \\\"},\\\"Ȇ\\\":{\\\"ha\\\":722,\\\"x_min\\\":60,\\\"x_max\\\":694,\\\"o\\\":\\\"m 665 768 l 346 768 l 346 588 l 626 588 l 626 394 l 346 394 l 346 200 l 688 200 l 688 0 l 60 0 l 60 967 l 694 967 l 665 768 m 378 1346 q 560 1268 496 1346 q 635 1074 625 1190 l 492 1050 q 451 1131 479 1101 q 378 1160 422 1160 q 305 1131 333 1160 q 264 1050 276 1101 l 121 1074 q 195 1268 131 1190 q 378 1346 260 1346 z \\\"},\\\"Ē\\\":{\\\"ha\\\":722,\\\"x_min\\\":60,\\\"x_max\\\":694,\\\"o\\\":\\\"m 665 768 l 346 768 l 346 588 l 626 588 l 626 394 l 346 394 l 346 200 l 688 200 l 688 0 l 60 0 l 60 967 l 694 967 l 665 768 z \\\"},\\\"Ę\\\":{\\\"ha\\\":722,\\\"x_min\\\":60,\\\"x_max\\\":694,\\\"o\\\":\\\"m 346 200 l 688 200 l 688 0 l 632 0 q 508 -65 543 -31 q 472 -132 472 -100 q 543 -193 472 -193 q 628 -182 579 -193 l 611 -342 q 508 -353 563 -353 q 349 -306 411 -353 q 286 -178 286 -258 q 388 0 286 -69 l 60 0 l 60 967 l 694 967 l 665 768 l 346 768 l 346 588 l 626 588 l 626 394 l 346 394 l 346 200 z \\\"},\\\"Ɛ\\\":{\\\"ha\\\":768,\\\"x_min\\\":21,\\\"x_max\\\":782,\\\"o\\\":\\\"m 415 994 q 599 961 518 994 q 750 861 679 928 l 618 722 q 451 794 538 794 q 340 703 340 794 q 371 631 340 656 q 461 606 401 606 l 574 606 l 542 410 l 467 410 q 356 378 393 410 q 318 290 318 347 q 354 204 318 233 q 453 175 390 175 q 544 194 503 175 q 633 256 586 214 l 782 111 q 422 -28 650 -28 q 213 8 304 -28 q 72 112 122 44 q 21 268 21 179 q 87 435 21 375 q 279 510 153 496 q 105 593 161 533 q 49 736 49 653 q 96 870 49 811 q 226 962 143 929 q 415 994 310 994 z \\\"},\\\"Ǝ\\\":{\\\"ha\\\":722,\\\"x_min\\\":35,\\\"x_max\\\":663,\\\"o\\\":\\\"m 663 967 l 663 0 l 35 0 l 35 200 l 376 200 l 376 394 l 96 394 l 96 588 l 376 588 l 376 768 l 42 768 l 42 967 l 663 967 z \\\"},\\\"Ʃ\\\":{\\\"ha\\\":699,\\\"x_min\\\":14,\\\"x_max\\\":685,\\\"o\\\":\\\"m 685 765 l 328 765 l 533 522 l 533 428 l 324 206 l 685 206 l 685 0 l 14 0 l 14 200 l 256 472 l 14 767 l 14 967 l 685 967 l 685 765 z \\\"},\\\"Ɇ\\\":{\\\"ha\\\":722,\\\"x_min\\\":60,\\\"x_max\\\":694,\\\"o\\\":\\\"m 433 200 l 688 200 l 688 0 l 381 0 l 353 -107 l 261 -86 l 283 0 l 60 0 l 60 967 l 539 967 l 563 1054 l 653 1033 l 635 967 l 694 967 l 665 768 l 583 768 l 536 588 l 626 588 l 626 394 l 485 394 l 433 200 m 346 588 l 439 588 l 488 768 l 346 768 l 346 588 m 346 235 l 388 394 l 346 394 l 346 235 z \\\"},\\\"Ẽ\\\":{\\\"ha\\\":722,\\\"x_min\\\":60,\\\"x_max\\\":694,\\\"o\\\":\\\"m 665 768 l 346 768 l 346 588 l 626 588 l 626 394 l 346 394 l 346 200 l 688 200 l 688 0 l 60 0 l 60 967 l 694 967 l 665 768 z \\\"},\\\"Ʒ\\\":{\\\"ha\\\":785,\\\"x_min\\\":0,\\\"x_max\\\":764,\\\"o\\\":\\\"m 489 564 q 692 483 619 554 q 764 292 764 411 q 715 130 764 203 q 574 15 667 57 q 353 -28 482 -28 q 148 12 233 -28 q 0 125 63 51 l 142 263 q 236 197 193 217 q 336 178 279 178 q 433 210 396 178 q 469 304 469 243 q 430 385 469 360 q 324 411 390 411 l 176 411 l 176 560 l 396 767 l 63 767 l 63 967 l 706 967 l 706 774 l 489 564 z \\\"},\\\"Ǯ\\\":{\\\"ha\\\":785,\\\"x_min\\\":0,\\\"x_max\\\":764,\\\"o\\\":\\\"m 489 564 q 692 483 619 554 q 764 292 764 411 q 715 130 764 203 q 574 15 667 57 q 353 -28 482 -28 q 148 12 233 -28 q 0 125 63 51 l 142 263 q 236 197 193 217 q 336 178 279 178 q 433 210 396 178 q 469 304 469 243 q 430 385 469 360 q 324 411 390 411 l 176 411 l 176 560 l 396 767 l 63 767 l 63 967 l 706 967 l 706 774 l 489 564 m 668 1233 l 467 1038 l 303 1038 l 101 1233 l 194 1340 l 385 1221 l 575 1340 l 668 1233 z \\\"},\\\"Ƹ\\\":{\\\"ha\\\":785,\\\"x_min\\\":21,\\\"x_max\\\":785,\\\"o\\\":\\\"m 785 125 q 633 12 719 51 q 422 -28 546 -28 q 207 14 297 -28 q 69 128 117 56 q 21 292 21 200 q 97 479 21 406 q 296 564 172 553 l 79 774 l 79 967 l 722 967 l 722 767 l 393 767 l 608 556 l 608 411 l 461 411 q 354 381 393 411 q 315 296 315 350 q 349 209 315 240 q 440 178 383 178 q 547 198 500 178 q 643 263 593 218 l 785 125 z \\\"},\\\"F\\\":{\\\"ha\\\":674,\\\"x_min\\\":60,\\\"x_max\\\":674,\\\"o\\\":\\\"m 60 967 l 674 967 l 644 768 l 346 768 l 346 557 l 608 557 l 608 358 l 346 358 l 346 0 l 60 0 l 60 967 z \\\"},\\\"Ḟ\\\":{\\\"ha\\\":674,\\\"x_min\\\":60,\\\"x_max\\\":674,\\\"o\\\":\\\"m 60 967 l 674 967 l 644 768 l 346 768 l 346 557 l 608 557 l 608 358 l 346 358 l 346 0 l 60 0 l 60 967 z \\\"},\\\"Ƒ\\\":{\\\"ha\\\":674,\\\"x_min\\\":-193,\\\"x_max\\\":674,\\\"o\\\":\\\"m 346 768 l 346 557 l 608 557 l 608 358 l 346 358 l 346 -22 q 260 -240 346 -165 q 25 -315 174 -315 q -193 -253 -107 -315 l -104 -86 q -55 -108 -74 -101 q -10 -114 -36 -114 q 42 -95 24 -114 q 60 -40 60 -76 l 60 967 l 674 967 l 644 768 l 346 768 z \\\"},\\\"G\\\":{\\\"ha\\\":907,\\\"x_min\\\":28,\\\"x_max\\\":858,\\\"o\\\":\\\"m 515 994 q 706 960 619 994 q 858 868 793 925 l 719 724 q 626 778 668 761 q 532 794 585 794 q 376 717 431 794 q 322 483 322 640 q 339 298 322 365 q 391 203 356 231 q 485 175 426 175 q 583 199 536 175 l 583 375 l 486 375 l 460 568 l 858 568 l 858 83 q 683 1 782 31 q 493 -28 585 -28 q 142 102 256 -28 q 28 485 28 232 q 90 760 28 644 q 264 935 153 875 q 515 994 375 994 z \\\"},\\\"Ǵ\\\":{\\\"ha\\\":907,\\\"x_min\\\":28,\\\"x_max\\\":858,\\\"o\\\":\\\"m 515 994 q 706 960 619 994 q 858 868 793 925 l 719 724 q 626 778 668 761 q 532 794 585 794 q 376 717 431 794 q 322 483 322 640 q 339 298 322 365 q 391 203 356 231 q 485 175 426 175 q 583 199 536 175 l 583 375 l 486 375 l 460 568 l 858 568 l 858 83 q 683 1 782 31 q 493 -28 585 -28 q 142 102 256 -28 q 28 485 28 232 q 90 760 28 644 q 264 935 153 875 q 515 994 375 994 m 697 1167 l 344 1040 l 275 1178 l 600 1367 l 697 1167 z \\\"},\\\"Ğ\\\":{\\\"ha\\\":907,\\\"x_min\\\":28,\\\"x_max\\\":858,\\\"o\\\":\\\"m 515 994 q 706 960 619 994 q 858 868 793 925 l 719 724 q 626 778 668 761 q 532 794 585 794 q 376 717 431 794 q 322 483 322 640 q 339 298 322 365 q 391 203 356 231 q 485 175 426 175 q 583 199 536 175 l 583 375 l 486 375 l 460 568 l 858 568 l 858 83 q 683 1 782 31 q 493 -28 585 -28 q 142 102 256 -28 q 28 485 28 232 q 90 760 28 644 q 264 935 153 875 q 515 994 375 994 m 486 1036 q 304 1112 369 1036 q 229 1294 239 1188 l 372 1318 q 413 1249 385 1276 q 486 1222 442 1222 q 559 1249 531 1222 q 600 1318 588 1276 l 743 1294 q 668 1112 733 1188 q 486 1036 603 1036 z \\\"},\\\"Ǧ\\\":{\\\"ha\\\":907,\\\"x_min\\\":28,\\\"x_max\\\":858,\\\"o\\\":\\\"m 515 994 q 706 960 619 994 q 858 868 793 925 l 719 724 q 626 778 668 761 q 532 794 585 794 q 376 717 431 794 q 322 483 322 640 q 339 298 322 365 q 391 203 356 231 q 485 175 426 175 q 583 199 536 175 l 583 375 l 486 375 l 460 568 l 858 568 l 858 83 q 683 1 782 31 q 493 -28 585 -28 q 142 102 256 -28 q 28 485 28 232 q 90 760 28 644 q 264 935 153 875 q 515 994 375 994 m 769 1233 l 568 1038 l 404 1038 l 203 1233 l 296 1340 l 486 1221 l 676 1340 l 769 1233 z \\\"},\\\"Ĝ\\\":{\\\"ha\\\":907,\\\"x_min\\\":28,\\\"x_max\\\":858,\\\"o\\\":\\\"m 515 994 q 706 960 619 994 q 858 868 793 925 l 719 724 q 626 778 668 761 q 532 794 585 794 q 376 717 431 794 q 322 483 322 640 q 339 298 322 365 q 391 203 356 231 q 485 175 426 175 q 583 199 536 175 l 583 375 l 486 375 l 460 568 l 858 568 l 858 83 q 683 1 782 31 q 493 -28 585 -28 q 142 102 256 -28 q 28 485 28 232 q 90 760 28 644 q 264 935 153 875 q 515 994 375 994 m 203 1151 l 404 1347 l 568 1347 l 769 1151 l 676 1044 l 486 1164 l 296 1044 l 203 1151 z \\\"},\\\"Ģ\\\":{\\\"ha\\\":907,\\\"x_min\\\":28,\\\"x_max\\\":858,\\\"o\\\":\\\"m 515 994 q 706 960 619 994 q 858 868 793 925 l 719 724 q 626 778 668 761 q 532 794 585 794 q 376 717 431 794 q 322 483 322 640 q 339 298 322 365 q 391 203 356 231 q 485 175 426 175 q 583 199 536 175 l 583 375 l 486 375 l 460 568 l 858 568 l 858 83 q 683 1 782 31 q 493 -28 585 -28 q 142 102 256 -28 q 28 485 28 232 q 90 760 28 644 q 264 935 153 875 q 515 994 375 994 z \\\"},\\\"Ġ\\\":{\\\"ha\\\":907,\\\"x_min\\\":28,\\\"x_max\\\":858,\\\"o\\\":\\\"m 515 994 q 706 960 619 994 q 858 868 793 925 l 719 724 q 626 778 668 761 q 532 794 585 794 q 376 717 431 794 q 322 483 322 640 q 339 298 322 365 q 391 203 356 231 q 485 175 426 175 q 583 199 536 175 l 583 375 l 486 375 l 460 568 l 858 568 l 858 83 q 683 1 782 31 q 493 -28 585 -28 q 142 102 256 -28 q 28 485 28 232 q 90 760 28 644 q 264 935 153 875 q 515 994 375 994 z \\\"},\\\"Ɠ\\\":{\\\"ha\\\":869,\\\"x_min\\\":28,\\\"x_max\\\":1081,\\\"o\\\":\\\"m 876 1199 q 1081 1147 990 1199 l 1008 978 q 919 1001 958 1001 q 873 983 888 1001 q 858 926 858 965 l 858 868 l 728 733 q 628 779 674 764 q 532 794 583 794 q 376 717 431 794 q 322 483 322 640 q 339 298 322 365 q 391 203 356 231 q 485 175 426 175 q 583 199 536 175 l 583 375 l 486 375 l 460 568 l 858 568 l 858 83 q 683 1 782 31 q 493 -28 585 -28 q 142 102 256 -28 q 28 485 28 232 q 90 758 28 643 q 256 934 153 874 q 483 994 360 994 q 625 968 558 994 q 692 1138 631 1078 q 876 1199 754 1199 z \\\"},\\\"Ɂ\\\":{\\\"ha\\\":743,\\\"x_min\\\":0,\\\"x_max\\\":715,\\\"o\\\":\\\"m 201 468 l 264 486 q 385 553 350 511 q 421 671 421 594 q 390 761 421 728 q 304 794 360 794 q 219 777 260 794 q 132 722 179 760 l 0 861 q 349 994 140 994 q 544 956 461 994 q 671 848 626 918 q 715 685 715 778 q 670 514 715 579 q 525 407 625 449 l 488 392 l 488 0 l 201 0 l 201 468 z \\\"},\\\"Ǥ\\\":{\\\"ha\\\":944,\\\"x_min\\\":28,\\\"x_max\\\":944,\\\"o\\\":\\\"m 944 251 l 858 251 l 858 83 q 683 1 782 31 q 493 -28 585 -28 q 142 102 256 -28 q 28 485 28 232 q 90 760 28 644 q 264 935 153 875 q 515 994 375 994 q 858 868 715 994 l 721 724 q 626 778 668 761 q 532 794 585 794 q 376 717 431 794 q 322 483 322 640 q 339 298 322 365 q 391 203 356 231 q 485 175 426 175 q 544 181 515 175 q 611 199 572 186 l 611 251 l 472 251 l 472 397 l 611 397 l 611 444 l 482 444 l 460 603 l 858 603 l 858 397 l 944 397 l 944 251 z \\\"},\\\"Ȝ\\\":{\\\"ha\\\":736,\\\"x_min\\\":-14,\\\"x_max\\\":715,\\\"o\\\":\\\"m 335 994 q 520 961 440 994 q 644 868 600 928 q 688 729 688 808 q 631 581 688 642 q 457 496 575 519 q 651 428 586 482 q 715 269 715 374 q 566 8 715 122 q 97 -167 417 -107 l 75 36 q 290 115 215 76 q 392 192 365 153 q 418 285 418 232 q 269 396 418 396 l 163 396 l 194 592 l 275 592 q 396 696 396 592 q 292 794 396 794 q 114 722 206 794 l -14 861 q 335 994 126 994 z \\\"},\\\"H\\\":{\\\"ha\\\":913,\\\"x_min\\\":60,\\\"x_max\\\":853,\\\"o\\\":\\\"m 567 390 l 346 390 l 346 0 l 60 0 l 60 967 l 346 967 l 346 610 l 567 610 l 567 967 l 853 967 l 853 0 l 567 0 l 567 390 z \\\"},\\\"Ħ\\\":{\\\"ha\\\":932,\\\"x_min\\\":0,\\\"x_max\\\":932,\\\"o\\\":\\\"m 932 688 l 863 688 l 863 0 l 576 0 l 576 390 l 356 390 l 356 0 l 69 0 l 69 688 l 0 688 l 0 835 l 69 835 l 69 967 l 356 967 l 356 835 l 576 835 l 576 967 l 863 967 l 863 835 l 932 835 l 932 688 m 576 688 l 356 688 l 356 610 l 576 610 l 576 688 z \\\"},\\\"Ȟ\\\":{\\\"ha\\\":913,\\\"x_min\\\":60,\\\"x_max\\\":853,\\\"o\\\":\\\"m 567 390 l 346 390 l 346 0 l 60 0 l 60 967 l 346 967 l 346 610 l 567 610 l 567 967 l 853 967 l 853 0 l 567 0 l 567 390 m 740 1233 l 539 1038 l 375 1038 l 174 1233 l 267 1340 l 457 1221 l 647 1340 l 740 1233 z \\\"},\\\"Ĥ\\\":{\\\"ha\\\":913,\\\"x_min\\\":60,\\\"x_max\\\":853,\\\"o\\\":\\\"m 567 390 l 346 390 l 346 0 l 60 0 l 60 967 l 346 967 l 346 610 l 567 610 l 567 967 l 853 967 l 853 0 l 567 0 l 567 390 m 174 1151 l 375 1347 l 539 1347 l 740 1151 l 647 1044 l 457 1164 l 267 1044 l 174 1151 z \\\"},\\\"Ḥ\\\":{\\\"ha\\\":913,\\\"x_min\\\":60,\\\"x_max\\\":853,\\\"o\\\":\\\"m 567 390 l 346 390 l 346 0 l 60 0 l 60 967 l 346 967 l 346 610 l 567 610 l 567 967 l 853 967 l 853 0 l 567 0 l 567 390 m 457 -367 q 347 -324 390 -367 q 303 -219 303 -282 q 347 -115 303 -157 q 457 -72 390 -72 q 567 -115 524 -72 q 611 -219 611 -157 q 567 -324 611 -282 q 457 -367 524 -367 z \\\"},\\\"Ɦ\\\":{\\\"ha\\\":1158,\\\"x_min\\\":0,\\\"x_max\\\":1099,\\\"o\\\":\\\"m 1099 967 l 1099 0 l 813 0 l 813 390 l 592 390 l 592 0 l 306 0 l 306 768 l 271 768 q 214 717 214 768 q 219 678 214 697 q 235 632 224 660 l 64 560 q 17 648 35 606 q 0 736 0 690 q 78 906 0 844 q 286 967 157 967 l 592 967 l 592 610 l 813 610 l 813 967 l 1099 967 z \\\"},\\\"Ɥ\\\":{\\\"ha\\\":865,\\\"x_min\\\":14,\\\"x_max\\\":806,\\\"o\\\":\\\"m 806 967 l 806 0 l 519 0 l 519 339 q 322 271 439 271 q 94 365 175 271 q 14 626 14 460 l 14 967 l 294 967 l 294 626 q 320 510 294 546 q 407 474 346 474 q 471 483 444 474 q 519 511 497 492 l 519 967 l 806 967 z \\\"},\\\"Ƕ\\\":{\\\"ha\\\":1306,\\\"x_min\\\":60,\\\"x_max\\\":1271,\\\"o\\\":\\\"m 1228 742 q 1259 544 1247 640 q 1271 339 1271 447 q 1217 131 1271 214 q 1076 10 1163 49 q 888 -28 989 -28 q 656 44 744 -28 q 567 265 567 115 l 567 390 l 346 390 l 346 0 l 60 0 l 60 967 l 346 967 l 346 610 l 567 610 l 567 967 l 853 967 l 853 264 q 867 190 853 211 q 910 169 882 169 q 972 215 949 169 q 996 360 996 261 q 958 742 996 517 l 1228 742 z \\\"},\\\"I\\\":{\\\"ha\\\":406,\\\"x_min\\\":60,\\\"x_max\\\":346,\\\"o\\\":\\\"m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 z \\\"},\\\"Ĳ\\\":{\\\"ha\\\":857,\\\"x_min\\\":60,\\\"x_max\\\":800,\\\"o\\\":\\\"m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 m 800 154 q 751 -55 800 28 q 628 -183 703 -137 q 454 -262 554 -229 l 378 -61 q 467 -8 438 -39 q 505 63 496 24 q 514 164 514 103 l 514 967 l 800 967 l 800 154 z \\\"},\\\"Í\\\":{\\\"ha\\\":406,\\\"x_min\\\":-8,\\\"x_max\\\":414,\\\"o\\\":\\\"m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 m 414 1167 l 61 1040 l -8 1178 l 317 1367 l 414 1167 z \\\"},\\\"Ĭ\\\":{\\\"ha\\\":406,\\\"x_min\\\":-54,\\\"x_max\\\":460,\\\"o\\\":\\\"m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 m 203 1036 q 21 1112 86 1036 q -54 1294 -44 1188 l 89 1318 q 130 1249 101 1276 q 203 1222 158 1222 q 276 1249 247 1222 q 317 1318 304 1276 l 460 1294 q 385 1112 450 1188 q 203 1036 319 1036 z \\\"},\\\"Ǐ\\\":{\\\"ha\\\":406,\\\"x_min\\\":-81,\\\"x_max\\\":486,\\\"o\\\":\\\"m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 m 486 1233 l 285 1038 l 121 1038 l -81 1233 l 13 1340 l 203 1221 l 393 1340 l 486 1233 z \\\"},\\\"Î\\\":{\\\"ha\\\":406,\\\"x_min\\\":-81,\\\"x_max\\\":486,\\\"o\\\":\\\"m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 m -81 1151 l 121 1347 l 285 1347 l 486 1151 l 393 1044 l 203 1164 l 13 1044 l -81 1151 z \\\"},\\\"Ȉ\\\":{\\\"ha\\\":406,\\\"x_min\\\":-157,\\\"x_max\\\":411,\\\"o\\\":\\\"m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 z \\\"},\\\"Ï\\\":{\\\"ha\\\":406,\\\"x_min\\\":-103,\\\"x_max\\\":501,\\\"o\\\":\\\"m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 z \\\"},\\\"Ḯ\\\":{\\\"ha\\\":406,\\\"x_min\\\":-114,\\\"x_max\\\":518,\\\"o\\\":\\\"m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 m 436 1450 l 199 1243 l 97 1333 l 292 1592 l 436 1450 m 18 1297 q 111 1260 72 1297 q 150 1169 150 1222 q 111 1078 150 1115 q 18 1040 72 1040 q -76 1078 -37 1040 q -114 1169 -114 1115 q -76 1260 -114 1222 q 18 1297 -37 1297 m 386 1297 q 479 1260 440 1297 q 518 1169 518 1222 q 479 1078 518 1115 q 386 1040 440 1040 q 292 1078 331 1040 q 254 1169 254 1115 q 292 1260 254 1222 q 386 1297 331 1297 z \\\"},\\\"İ\\\":{\\\"ha\\\":406,\\\"x_min\\\":49,\\\"x_max\\\":357,\\\"o\\\":\\\"m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 z \\\"},\\\"Ị\\\":{\\\"ha\\\":406,\\\"x_min\\\":49,\\\"x_max\\\":357,\\\"o\\\":\\\"m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 m 203 -367 q 92 -324 136 -367 q 49 -219 49 -282 q 92 -115 49 -157 q 203 -72 136 -72 q 313 -115 269 -72 q 357 -219 357 -157 q 313 -324 357 -282 q 203 -367 269 -367 z \\\"},\\\"Ì\\\":{\\\"ha\\\":406,\\\"x_min\\\":-8,\\\"x_max\\\":414,\\\"o\\\":\\\"m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 m 414 1178 l 344 1040 l -8 1167 l 90 1367 l 414 1178 z \\\"},\\\"Ỉ\\\":{\\\"ha\\\":406,\\\"x_min\\\":47,\\\"x_max\\\":397,\\\"o\\\":\\\"m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 m 126 1190 q 202 1203 179 1192 q 225 1239 225 1214 q 211 1267 225 1257 q 174 1278 197 1278 q 131 1274 150 1278 q 88 1260 113 1269 l 47 1363 q 211 1401 113 1401 q 349 1360 300 1401 q 397 1251 397 1318 q 367 1161 397 1196 q 278 1115 336 1126 l 278 1061 l 126 1061 l 126 1190 z \\\"},\\\"Ȋ\\\":{\\\"ha\\\":406,\\\"x_min\\\":-54,\\\"x_max\\\":460,\\\"o\\\":\\\"m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 m 203 1346 q 385 1268 321 1346 q 460 1074 450 1190 l 317 1050 q 276 1131 304 1101 q 203 1160 247 1160 q 130 1131 158 1160 q 89 1050 101 1101 l -54 1074 q 20 1268 -44 1190 q 203 1346 85 1346 z \\\"},\\\"Ī\\\":{\\\"ha\\\":406,\\\"x_min\\\":-24,\\\"x_max\\\":428,\\\"o\\\":\\\"m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 z \\\"},\\\"Į\\\":{\\\"ha\\\":406,\\\"x_min\\\":-64,\\\"x_max\\\":346,\\\"o\\\":\\\"m 346 967 l 346 0 l 282 0 q 158 -65 193 -29 q 122 -132 122 -100 q 193 -193 122 -193 q 278 -182 229 -193 l 261 -342 q 158 -353 213 -353 q -1 -306 61 -353 q -64 -178 -64 -258 q 60 15 -64 -60 l 60 967 l 346 967 z \\\"},\\\"Ɩ\\\":{\\\"ha\\\":564,\\\"x_min\\\":46,\\\"x_max\\\":585,\\\"o\\\":\\\"m 585 35 q 367 -28 499 -28 q 132 47 218 -28 q 46 265 46 122 l 46 967 l 332 967 l 332 247 q 350 192 332 211 q 401 174 368 174 q 447 180 428 174 q 496 201 465 186 l 585 35 z \\\"},\\\"Ɨ\\\":{\\\"ha\\\":472,\\\"x_min\\\":0,\\\"x_max\\\":472,\\\"o\\\":\\\"m 472 396 l 379 396 l 379 0 l 93 0 l 93 396 l 0 396 l 0 604 l 93 604 l 93 967 l 379 967 l 379 604 l 472 604 l 472 396 z \\\"},\\\"Ĩ\\\":{\\\"ha\\\":406,\\\"x_min\\\":-76,\\\"x_max\\\":482,\\\"o\\\":\\\"m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 z \\\"},\\\"J\\\":{\\\"ha\\\":451,\\\"x_min\\\":-28,\\\"x_max\\\":394,\\\"o\\\":\\\"m 394 154 q 346 -55 394 28 q 223 -183 297 -137 q 49 -262 149 -229 l -28 -61 q 61 -8 32 -39 q 99 63 90 24 q 108 164 108 103 l 108 967 l 394 967 l 394 154 z \\\"},\\\"Ĵ\\\":{\\\"ha\\\":451,\\\"x_min\\\":-32,\\\"x_max\\\":535,\\\"o\\\":\\\"m 394 154 q 346 -55 394 28 q 223 -183 297 -137 q 49 -262 149 -229 l -28 -61 q 61 -8 32 -39 q 99 63 90 24 q 108 164 108 103 l 108 967 l 394 967 l 394 154 m -32 1151 l 169 1347 l 333 1347 l 535 1151 l 442 1044 l 251 1164 l 61 1044 l -32 1151 z \\\"},\\\"Ʝ\\\":{\\\"ha\\\":513,\\\"x_min\\\":-125,\\\"x_max\\\":601,\\\"o\\\":\\\"m 556 -162 q 426 -114 492 -133 q 311 -265 392 -215 q 101 -315 231 -315 q -66 -269 -7 -315 q -125 -143 -125 -224 q -61 -3 -125 -51 q 121 44 3 44 q 167 43 154 44 l 167 967 l 453 967 l 453 79 q 450 6 453 53 q 601 -57 528 -18 l 556 -162 m 86 -185 q 144 -160 125 -185 q 165 -78 163 -136 q 119 -76 156 -76 q 50 -91 71 -76 q 29 -135 29 -106 q 44 -172 29 -158 q 86 -185 58 -185 z \\\"},\\\"Ɉ\\\":{\\\"ha\\\":488,\\\"x_min\\\":-28,\\\"x_max\\\":488,\\\"o\\\":\\\"m 488 372 l 394 372 l 394 154 q 346 -55 394 28 q 223 -183 297 -137 q 49 -262 149 -229 l -28 -61 q 61 -8 32 -39 q 99 63 90 24 q 108 164 108 103 l 108 372 l 15 372 l 15 581 l 108 581 l 108 967 l 394 967 l 394 581 l 488 581 l 488 372 z \\\"},\\\"K\\\":{\\\"ha\\\":915,\\\"x_min\\\":60,\\\"x_max\\\":943,\\\"o\\\":\\\"m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 m 644 538 l 943 0 l 618 0 l 354 515 l 624 967 l 918 967 l 644 538 z \\\"},\\\"Ǩ\\\":{\\\"ha\\\":915,\\\"x_min\\\":60,\\\"x_max\\\":943,\\\"o\\\":\\\"m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 m 644 538 l 943 0 l 618 0 l 354 515 l 624 967 l 918 967 l 644 538 m 742 1233 l 540 1038 l 376 1038 l 175 1233 l 268 1340 l 458 1221 l 649 1340 l 742 1233 z \\\"},\\\"Ķ\\\":{\\\"ha\\\":915,\\\"x_min\\\":60,\\\"x_max\\\":943,\\\"o\\\":\\\"m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 m 644 538 l 943 0 l 618 0 l 354 515 l 624 967 l 918 967 l 644 538 z \\\"},\\\"Ƙ\\\":{\\\"ha\\\":938,\\\"x_min\\\":60,\\\"x_max\\\":965,\\\"o\\\":\\\"m 354 515 l 521 806 q 641 953 582 911 q 799 994 700 994 q 965 940 894 994 l 897 783 q 881 791 896 785 q 844 797 867 797 q 801 784 818 797 q 760 731 783 771 l 644 538 l 943 0 l 618 0 l 354 515 m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 z \\\"},\\\"L\\\":{\\\"ha\\\":725,\\\"x_min\\\":60,\\\"x_max\\\":711,\\\"o\\\":\\\"m 346 219 l 711 219 l 682 0 l 60 0 l 60 967 l 346 967 l 346 219 z \\\"},\\\"Ǉ\\\":{\\\"ha\\\":1142,\\\"x_min\\\":60,\\\"x_max\\\":1085,\\\"o\\\":\\\"m 346 219 l 711 219 l 682 0 l 60 0 l 60 967 l 346 967 l 346 219 m 1085 154 q 1036 -55 1085 28 q 913 -183 988 -137 q 739 -262 839 -229 l 663 -61 q 751 -8 722 -39 q 790 63 781 24 q 799 164 799 103 l 799 967 l 1085 967 l 1085 154 z \\\"},\\\"Ĺ\\\":{\\\"ha\\\":725,\\\"x_min\\\":-8,\\\"x_max\\\":711,\\\"o\\\":\\\"m 346 219 l 711 219 l 682 0 l 60 0 l 60 967 l 346 967 l 346 219 m 414 1167 l 61 1040 l -8 1178 l 317 1367 l 414 1167 z \\\"},\\\"Ƚ\\\":{\\\"ha\\\":758,\\\"x_min\\\":0,\\\"x_max\\\":744,\\\"o\\\":\\\"m 744 219 l 715 0 l 93 0 l 93 400 l 0 400 l 0 608 l 93 608 l 93 967 l 379 967 l 379 608 l 472 608 l 472 400 l 379 400 l 379 219 l 744 219 z \\\"},\\\"Ɬ\\\":{\\\"ha\\\":903,\\\"x_min\\\":-7,\\\"x_max\\\":889,\\\"o\\\":\\\"m 889 219 l 860 0 l 238 0 l 238 344 q 53 400 114 347 q -7 539 -7 453 q 44 666 -7 621 q 182 711 96 711 q 238 704 213 711 l 238 967 l 524 967 l 524 496 q 690 514 611 500 l 708 374 q 524 350 624 356 l 524 219 l 889 219 m 164 542 q 238 490 164 490 l 238 575 q 203 579 219 579 q 174 569 185 579 q 164 542 164 558 z \\\"},\\\"Ľ\\\":{\\\"ha\\\":725,\\\"x_min\\\":60,\\\"x_max\\\":711,\\\"o\\\":\\\"m 346 219 l 711 219 l 682 0 l 60 0 l 60 967 l 346 967 l 346 219 m 624 965 l 428 994 l 393 663 l 543 640 l 624 965 z \\\"},\\\"Ḽ\\\":{\\\"ha\\\":725,\\\"x_min\\\":60,\\\"x_max\\\":711,\\\"o\\\":\\\"m 346 219 l 711 219 l 682 0 l 60 0 l 60 967 l 346 967 l 346 219 m 88 -293 l 289 -83 l 453 -83 l 654 -293 l 561 -400 l 371 -267 l 181 -400 l 88 -293 z \\\"},\\\"Ļ\\\":{\\\"ha\\\":725,\\\"x_min\\\":60,\\\"x_max\\\":711,\\\"o\\\":\\\"m 346 219 l 711 219 l 682 0 l 60 0 l 60 967 l 346 967 l 346 219 z \\\"},\\\"Ŀ\\\":{\\\"ha\\\":725,\\\"x_min\\\":60,\\\"x_max\\\":717,\\\"o\\\":\\\"m 346 219 l 711 219 l 682 0 l 60 0 l 60 967 l 346 967 l 346 219 m 563 713 q 673 670 629 713 q 717 565 717 628 q 673 460 717 503 q 563 418 629 418 q 452 460 496 418 q 408 565 408 503 q 452 670 408 628 q 563 713 496 713 z \\\"},\\\"Ḷ\\\":{\\\"ha\\\":725,\\\"x_min\\\":60,\\\"x_max\\\":711,\\\"o\\\":\\\"m 346 219 l 711 219 l 682 0 l 60 0 l 60 967 l 346 967 l 346 219 m 371 -367 q 260 -324 304 -367 q 217 -219 217 -282 q 260 -115 217 -157 q 371 -72 304 -72 q 481 -115 438 -72 q 525 -219 525 -157 q 481 -324 525 -282 q 371 -367 438 -367 z \\\"},\\\"ǈ\\\":{\\\"ha\\\":1103,\\\"x_min\\\":60,\\\"x_max\\\":1061,\\\"o\\\":\\\"m 346 219 l 711 219 l 682 0 l 60 0 l 60 967 l 346 967 l 346 219 z \\\"},\\\"Ł\\\":{\\\"ha\\\":800,\\\"x_min\\\":0,\\\"x_max\\\":786,\\\"o\\\":\\\"m 786 219 l 757 0 l 135 0 l 135 285 l 88 256 l 0 399 l 135 482 l 135 967 l 421 967 l 421 658 l 571 751 l 660 610 l 421 463 l 421 219 l 786 219 z \\\"},\\\"M\\\":{\\\"ha\\\":1099,\\\"x_min\\\":21,\\\"x_max\\\":1078,\\\"o\\\":\\\"m 1078 0 l 796 0 l 789 343 q 788 464 788 383 q 799 738 788 606 l 685 97 l 414 97 l 292 738 q 310 407 310 544 l 310 344 l 303 0 l 21 0 l 90 967 l 443 967 l 554 340 l 654 967 l 1008 967 l 1078 0 z \\\"},\\\"Ḿ\\\":{\\\"ha\\\":1099,\\\"x_min\\\":21,\\\"x_max\\\":1078,\\\"o\\\":\\\"m 1078 0 l 796 0 l 789 343 q 788 464 788 383 q 799 738 788 606 l 685 97 l 414 97 l 292 738 q 310 407 310 544 l 310 344 l 303 0 l 21 0 l 90 967 l 443 967 l 554 340 l 654 967 l 1008 967 l 1078 0 m 760 1167 l 407 1040 l 338 1178 l 663 1367 l 760 1167 z \\\"},\\\"Ṁ\\\":{\\\"ha\\\":1099,\\\"x_min\\\":21,\\\"x_max\\\":1078,\\\"o\\\":\\\"m 1078 0 l 796 0 l 789 343 q 788 464 788 383 q 799 738 788 606 l 685 97 l 414 97 l 292 738 q 310 407 310 544 l 310 344 l 303 0 l 21 0 l 90 967 l 443 967 l 554 340 l 654 967 l 1008 967 l 1078 0 z \\\"},\\\"Ɯ\\\":{\\\"ha\\\":1256,\\\"x_min\\\":46,\\\"x_max\\\":1196,\\\"o\\\":\\\"m 1196 967 l 1196 0 l 944 0 l 925 76 q 824 -3 874 21 q 710 -28 774 -28 q 588 4 640 -28 q 508 93 536 36 q 400 1 453 29 q 278 -28 347 -28 q 108 45 169 -28 q 46 236 46 118 l 46 967 l 332 967 l 332 251 q 346 199 332 218 q 386 179 360 179 q 422 194 404 179 q 456 227 439 208 q 478 253 472 246 l 478 967 l 764 967 l 764 251 q 778 199 764 218 q 817 179 792 179 q 863 197 842 179 q 910 253 885 214 l 910 967 l 1196 967 z \\\"},\\\"N\\\":{\\\"ha\\\":904,\\\"x_min\\\":60,\\\"x_max\\\":844,\\\"o\\\":\\\"m 844 0 l 486 0 l 275 706 l 279 675 q 303 490 294 574 q 313 300 313 406 l 313 0 l 60 0 l 60 967 l 411 967 l 631 258 l 626 288 q 601 466 610 383 q 592 657 592 549 l 592 967 l 844 967 l 844 0 z \\\"},\\\"Ǌ\\\":{\\\"ha\\\":1356,\\\"x_min\\\":60,\\\"x_max\\\":1299,\\\"o\\\":\\\"m 844 0 l 486 0 l 275 706 l 279 675 q 303 490 294 574 q 313 300 313 406 l 313 0 l 60 0 l 60 967 l 411 967 l 631 258 l 626 288 q 601 466 610 383 q 592 657 592 549 l 592 967 l 844 967 l 844 0 m 1299 154 q 1250 -55 1299 28 q 1127 -183 1201 -137 q 953 -262 1053 -229 l 876 -61 q 965 -8 936 -39 q 1003 63 994 24 q 1013 164 1013 103 l 1013 967 l 1299 967 l 1299 154 z \\\"},\\\"Ń\\\":{\\\"ha\\\":904,\\\"x_min\\\":60,\\\"x_max\\\":844,\\\"o\\\":\\\"m 844 0 l 486 0 l 275 706 l 279 675 q 303 490 294 574 q 313 300 313 406 l 313 0 l 60 0 l 60 967 l 411 967 l 631 258 l 626 288 q 601 466 610 383 q 592 657 592 549 l 592 967 l 844 967 l 844 0 m 664 1167 l 311 1040 l 242 1178 l 567 1367 l 664 1167 z \\\"},\\\"Ň\\\":{\\\"ha\\\":904,\\\"x_min\\\":60,\\\"x_max\\\":844,\\\"o\\\":\\\"m 844 0 l 486 0 l 275 706 l 279 675 q 303 490 294 574 q 313 300 313 406 l 313 0 l 60 0 l 60 967 l 411 967 l 631 258 l 626 288 q 601 466 610 383 q 592 657 592 549 l 592 967 l 844 967 l 844 0 m 736 1233 l 535 1038 l 371 1038 l 169 1233 l 263 1340 l 453 1221 l 643 1340 l 736 1233 z \\\"},\\\"Ṋ\\\":{\\\"ha\\\":904,\\\"x_min\\\":60,\\\"x_max\\\":844,\\\"o\\\":\\\"m 844 0 l 486 0 l 275 706 l 279 675 q 303 490 294 574 q 313 300 313 406 l 313 0 l 60 0 l 60 967 l 411 967 l 631 258 l 626 288 q 601 466 610 383 q 592 657 592 549 l 592 967 l 844 967 l 844 0 m 169 -293 l 371 -83 l 535 -83 l 736 -293 l 643 -400 l 453 -267 l 263 -400 l 169 -293 z \\\"},\\\"Ņ\\\":{\\\"ha\\\":904,\\\"x_min\\\":60,\\\"x_max\\\":844,\\\"o\\\":\\\"m 844 0 l 486 0 l 275 706 l 279 675 q 303 490 294 574 q 313 300 313 406 l 313 0 l 60 0 l 60 967 l 411 967 l 631 258 l 626 288 q 601 466 610 383 q 592 657 592 549 l 592 967 l 844 967 l 844 0 z \\\"},\\\"Ṅ\\\":{\\\"ha\\\":904,\\\"x_min\\\":60,\\\"x_max\\\":844,\\\"o\\\":\\\"m 844 0 l 486 0 l 275 706 l 279 675 q 303 490 294 574 q 313 300 313 406 l 313 0 l 60 0 l 60 967 l 411 967 l 631 258 l 626 288 q 601 466 610 383 q 592 657 592 549 l 592 967 l 844 967 l 844 0 z \\\"},\\\"Ṇ\\\":{\\\"ha\\\":904,\\\"x_min\\\":60,\\\"x_max\\\":844,\\\"o\\\":\\\"m 844 0 l 486 0 l 275 706 l 279 675 q 303 490 294 574 q 313 300 313 406 l 313 0 l 60 0 l 60 967 l 411 967 l 631 258 l 626 288 q 601 466 610 383 q 592 657 592 549 l 592 967 l 844 967 l 844 0 m 453 -367 q 342 -324 386 -367 q 299 -219 299 -282 q 342 -115 299 -157 q 453 -72 386 -72 q 563 -115 519 -72 q 607 -219 607 -157 q 563 -324 607 -282 q 453 -367 519 -367 z \\\"},\\\"Ǹ\\\":{\\\"ha\\\":904,\\\"x_min\\\":60,\\\"x_max\\\":844,\\\"o\\\":\\\"m 844 0 l 486 0 l 275 706 l 279 675 q 303 490 294 574 q 313 300 313 406 l 313 0 l 60 0 l 60 967 l 411 967 l 631 258 l 626 288 q 601 466 610 383 q 592 657 592 549 l 592 967 l 844 967 l 844 0 m 664 1178 l 594 1040 l 242 1167 l 340 1367 l 664 1178 z \\\"},\\\"Ŋ\\\":{\\\"ha\\\":904,\\\"x_min\\\":60,\\\"x_max\\\":844,\\\"o\\\":\\\"m 844 967 l 844 -22 q 758 -240 844 -165 q 524 -315 672 -315 q 306 -253 392 -315 l 394 -86 q 444 -108 425 -101 q 489 -114 463 -114 q 540 -95 522 -114 q 558 -40 558 -76 l 558 0 l 486 0 l 275 706 l 279 675 q 303 490 294 574 q 313 300 313 406 l 313 0 l 60 0 l 60 967 l 411 967 l 631 258 l 626 288 q 601 466 610 383 q 592 657 592 549 l 592 967 l 844 967 z \\\"},\\\"Ɲ\\\":{\\\"ha\\\":904,\\\"x_min\\\":-196,\\\"x_max\\\":844,\\\"o\\\":\\\"m 844 967 l 844 0 l 486 0 l 275 706 l 279 675 q 303 490 294 574 q 313 300 313 406 l 313 -22 q 234 -240 313 -165 q 22 -315 156 -315 q -196 -253 -110 -315 l -107 -93 q -58 -115 -76 -108 q -12 -121 -39 -121 q 41 -102 22 -121 q 60 -47 60 -83 l 60 967 l 411 967 l 631 258 l 626 288 q 601 466 610 383 q 592 657 592 549 l 592 967 l 844 967 z \\\"},\\\"ǋ\\\":{\\\"ha\\\":1296,\\\"x_min\\\":60,\\\"x_max\\\":1254,\\\"o\\\":\\\"m 844 0 l 486 0 l 275 706 l 279 675 q 303 490 294 574 q 313 300 313 406 l 313 0 l 60 0 l 60 967 l 411 967 l 631 258 l 626 288 q 601 466 610 383 q 592 657 592 549 l 592 967 l 844 967 l 844 0 z \\\"},\\\"Ƞ\\\":{\\\"ha\\\":893,\\\"x_min\\\":60,\\\"x_max\\\":840,\\\"o\\\":\\\"m 594 994 q 777 925 714 994 q 840 744 840 856 l 840 -299 l 554 -299 l 554 701 q 538 767 554 746 q 485 788 522 788 q 414 770 446 788 q 346 714 382 753 l 346 0 l 60 0 l 60 967 l 311 967 l 331 888 q 452 969 393 944 q 594 994 511 994 z \\\"},\\\"Ñ\\\":{\\\"ha\\\":904,\\\"x_min\\\":60,\\\"x_max\\\":844,\\\"o\\\":\\\"m 844 0 l 486 0 l 275 706 l 279 675 q 303 490 294 574 q 313 300 313 406 l 313 0 l 60 0 l 60 967 l 411 967 l 631 258 l 626 288 q 601 466 610 383 q 592 657 592 549 l 592 967 l 844 967 l 844 0 z \\\"},\\\"O\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 z \\\"},\\\"Ȣ\\\":{\\\"ha\\\":903,\\\"x_min\\\":28,\\\"x_max\\\":875,\\\"o\\\":\\\"m 699 564 q 875 310 875 492 q 823 140 875 218 q 675 17 771 63 q 451 -28 579 -28 q 227 17 324 -28 q 79 138 131 61 q 28 310 28 214 q 73 462 28 399 q 203 561 118 525 q 81 769 81 625 l 81 967 l 367 967 l 367 750 q 385 672 367 697 q 451 647 403 647 q 518 672 500 647 q 536 750 536 697 l 536 967 l 822 967 l 822 769 q 790 649 822 701 q 699 564 758 596 m 451 175 q 545 213 513 175 q 578 314 578 250 q 544 417 578 378 q 451 456 511 456 q 358 417 392 456 q 325 314 325 378 q 358 213 325 250 q 451 175 392 175 z \\\"},\\\"Ó\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 m 690 1167 l 338 1040 l 268 1178 l 593 1367 l 690 1167 z \\\"},\\\"Ŏ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 m 479 1036 q 297 1112 363 1036 q 222 1294 232 1188 l 365 1318 q 406 1249 378 1276 q 479 1222 435 1222 q 552 1249 524 1222 q 593 1318 581 1276 l 736 1294 q 661 1112 726 1188 q 479 1036 596 1036 z \\\"},\\\"Ǒ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 m 763 1233 l 561 1038 l 397 1038 l 196 1233 l 289 1340 l 479 1221 l 669 1340 l 763 1233 z \\\"},\\\"Ɵ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"z \\\"},\\\"Ô\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 m 196 1151 l 397 1347 l 561 1347 l 763 1151 l 669 1044 l 479 1164 l 289 1044 l 196 1151 z \\\"},\\\"Ố\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":969,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 z \\\"},\\\"Ộ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 m 196 1151 l 397 1347 l 561 1347 l 763 1151 l 669 1044 l 479 1164 l 289 1044 l 196 1151 m 479 -367 q 369 -324 413 -367 q 325 -219 325 -282 q 369 -115 325 -157 q 479 -72 413 -72 q 590 -115 546 -72 q 633 -219 633 -157 q 590 -324 633 -282 q 479 -367 546 -367 z \\\"},\\\"Ồ\\\":{\\\"ha\\\":958,\\\"x_min\\\":-10,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 z \\\"},\\\"Ổ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":932,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 z \\\"},\\\"Ỗ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 z \\\"},\\\"Ȍ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 z \\\"},\\\"Ö\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 z \\\"},\\\"Ȫ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 z \\\"},\\\"Ȯ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 z \\\"},\\\"Ȱ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 z \\\"},\\\"Ọ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 m 479 -367 q 369 -324 413 -367 q 325 -219 325 -282 q 369 -115 325 -157 q 479 -72 413 -72 q 590 -115 546 -72 q 633 -219 633 -157 q 590 -324 633 -282 q 479 -367 546 -367 z \\\"},\\\"Ò\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 m 690 1178 l 621 1040 l 268 1167 l 367 1367 l 690 1178 z \\\"},\\\"Ỏ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 m 403 1190 q 478 1203 456 1192 q 501 1239 501 1214 q 488 1267 501 1257 q 450 1278 474 1278 q 408 1274 426 1278 q 364 1260 389 1269 l 324 1363 q 488 1401 389 1401 q 625 1360 576 1401 q 674 1251 674 1318 q 643 1161 674 1196 q 554 1115 613 1126 l 554 1061 l 403 1061 l 403 1190 z \\\"},\\\"Ơ\\\":{\\\"ha\\\":1004,\\\"x_min\\\":28,\\\"x_max\\\":1032,\\\"o\\\":\\\"m 1032 946 q 992 823 1032 869 q 878 761 951 776 q 931 485 931 644 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 q 794 879 679 994 q 842 903 828 883 q 856 963 856 922 q 839 1053 856 1006 l 1006 1074 q 1032 946 1032 1018 m 479 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 z \\\"},\\\"Ớ\\\":{\\\"ha\\\":1004,\\\"x_min\\\":28,\\\"x_max\\\":1032,\\\"o\\\":\\\"m 338 1040 l 268 1178 l 593 1367 l 690 1167 l 338 1040 m 1032 946 q 992 823 1032 869 q 878 761 951 776 q 931 485 931 644 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 q 794 879 679 994 q 842 903 828 883 q 856 963 856 922 q 839 1053 856 1006 l 1006 1074 q 1032 946 1032 1018 m 479 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 z \\\"},\\\"Ợ\\\":{\\\"ha\\\":1004,\\\"x_min\\\":28,\\\"x_max\\\":1032,\\\"o\\\":\\\"m 1032 946 q 992 823 1032 869 q 878 761 951 776 q 931 485 931 644 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 q 794 879 679 994 q 842 903 828 883 q 856 963 856 922 q 839 1053 856 1006 l 1006 1074 q 1032 946 1032 1018 m 479 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 m 479 -72 q 590 -115 546 -72 q 633 -219 633 -157 q 590 -324 633 -282 q 479 -367 546 -367 q 369 -324 413 -367 q 325 -219 325 -282 q 369 -115 325 -157 q 479 -72 413 -72 z \\\"},\\\"Ờ\\\":{\\\"ha\\\":1004,\\\"x_min\\\":28,\\\"x_max\\\":1032,\\\"o\\\":\\\"m 621 1040 l 268 1167 l 367 1367 l 690 1178 l 621 1040 m 1032 946 q 992 823 1032 869 q 878 761 951 776 q 931 485 931 644 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 q 794 879 679 994 q 842 903 828 883 q 856 963 856 922 q 839 1053 856 1006 l 1006 1074 q 1032 946 1032 1018 m 479 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 z \\\"},\\\"Ở\\\":{\\\"ha\\\":1004,\\\"x_min\\\":28,\\\"x_max\\\":1032,\\\"o\\\":\\\"m 450 1278 q 408 1274 426 1278 q 364 1260 389 1269 l 324 1363 q 488 1401 389 1401 q 625 1360 576 1401 q 674 1251 674 1318 q 643 1161 674 1196 q 554 1115 613 1126 l 554 1061 l 403 1061 l 403 1190 q 478 1203 456 1192 q 501 1239 501 1214 q 488 1267 501 1257 q 450 1278 474 1278 m 1032 946 q 992 823 1032 869 q 878 761 951 776 q 931 485 931 644 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 q 794 879 679 994 q 842 903 828 883 q 856 963 856 922 q 839 1053 856 1006 l 1006 1074 q 1032 946 1032 1018 m 479 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 z \\\"},\\\"Ỡ\\\":{\\\"ha\\\":1004,\\\"x_min\\\":28,\\\"x_max\\\":1032,\\\"o\\\":\\\"m 403 1099 q 363 1085 378 1099 q 329 1039 347 1071 l 200 1101 q 280 1237 229 1183 q 396 1290 331 1290 q 448 1283 426 1290 q 493 1260 469 1276 q 530 1237 517 1243 q 557 1231 543 1231 q 596 1244 581 1231 q 629 1290 611 1258 l 758 1228 q 678 1092 729 1144 q 560 1039 626 1039 q 510 1046 531 1039 q 468 1068 490 1053 q 430 1092 442 1086 q 403 1099 418 1099 m 1032 946 q 992 823 1032 869 q 878 761 951 776 q 931 485 931 644 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 q 794 879 679 994 q 842 903 828 883 q 856 963 856 922 q 839 1053 856 1006 l 1006 1074 q 1032 946 1032 1018 m 479 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 z \\\"},\\\"Ő\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 m 574 1267 l 396 1035 l 278 1096 l 404 1356 l 574 1267 m 822 1244 l 632 1022 l 518 1090 l 658 1343 l 822 1244 z \\\"},\\\"Ƣ\\\":{\\\"ha\\\":1363,\\\"x_min\\\":28,\\\"x_max\\\":1303,\\\"o\\\":\\\"m 986 994 q 1217 919 1132 994 q 1303 701 1303 844 l 1303 -299 l 1017 -299 l 1017 713 q 947 800 1017 800 q 863 782 906 800 q 931 485 931 661 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 q 740 919 631 994 q 986 994 851 994 m 479 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 z \\\"},\\\"Ȏ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 m 479 1346 q 662 1268 597 1346 q 736 1074 726 1190 l 593 1050 q 552 1131 581 1101 q 479 1160 524 1160 q 406 1131 435 1160 q 365 1050 378 1101 l 222 1074 q 297 1268 232 1190 q 479 1346 361 1346 z \\\"},\\\"Ō\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 z \\\"},\\\"Ṓ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 z \\\"},\\\"Ṑ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 z \\\"},\\\"Ꞷ\\\":{\\\"ha\\\":1272,\\\"x_min\\\":56,\\\"x_max\\\":1217,\\\"o\\\":\\\"m 1106 967 q 1188 722 1160 844 q 1217 422 1217 600 q 1135 83 1217 194 q 890 -28 1053 -28 q 638 151 690 -28 q 549 16 614 60 q 397 -28 483 -28 q 138 82 221 -28 q 56 422 56 192 q 84 721 56 599 q 165 967 113 843 l 428 967 l 418 929 q 361 688 381 793 q 342 439 342 583 q 362 235 342 296 q 431 175 382 175 q 499 278 499 175 l 499 554 l 781 554 l 781 278 q 795 197 781 219 q 847 175 810 175 q 912 235 893 175 q 931 439 931 294 q 917 640 931 549 q 883 799 903 731 q 831 967 864 867 l 1106 967 z \\\"},\\\"Ǫ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 931 485 q 858 174 931 300 q 651 0 786 49 q 527 -65 563 -29 q 492 -132 492 -100 q 563 -193 492 -193 q 647 -182 599 -193 l 631 -342 q 528 -353 582 -353 q 368 -306 431 -353 q 306 -178 306 -258 q 381 -19 306 -83 q 119 141 210 10 q 28 485 28 272 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 q 813 860 696 994 q 931 485 931 726 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 z \\\"},\\\"Ǭ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 704 1075 l 253 1075 l 253 1261 l 704 1261 l 704 1075 m 931 485 q 858 174 931 300 q 651 0 786 49 q 527 -65 563 -29 q 492 -132 492 -100 q 563 -193 492 -193 q 647 -182 599 -193 l 631 -342 q 528 -353 582 -353 q 368 -306 431 -353 q 306 -178 306 -258 q 381 -19 306 -83 q 119 141 210 10 q 28 485 28 272 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 q 813 860 696 994 q 931 485 931 726 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 z \\\"},\\\"Ɔ\\\":{\\\"ha\\\":811,\\\"x_min\\\":0,\\\"x_max\\\":783,\\\"o\\\":\\\"m 339 994 q 572 934 471 994 q 728 759 672 874 q 783 486 783 644 q 727 206 783 322 q 567 31 671 90 q 325 -28 464 -28 q 144 10 226 -28 q 0 107 61 47 l 124 264 q 217 206 175 225 q 310 188 258 188 q 440 258 394 188 q 486 486 486 329 q 444 717 486 644 q 322 789 403 789 q 231 772 272 789 q 147 721 190 754 l 11 881 q 157 965 78 936 q 339 994 236 994 z \\\"},\\\"Ø\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 738 926 q 881 753 832 865 q 931 485 931 640 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 425 -25 461 -28 l 374 -193 l 165 -137 l 221 42 q 77 216 126 103 q 28 485 28 329 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 q 533 992 497 994 l 585 1157 l 793 1101 l 738 926 m 479 792 q 361 722 397 792 q 325 485 325 651 q 346 267 325 336 l 504 790 q 479 792 496 792 m 479 175 q 598 246 563 175 q 633 485 633 317 q 613 700 633 632 l 456 176 q 479 175 463 175 z \\\"},\\\"Ǿ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 738 926 q 881 753 832 865 q 931 485 931 640 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 425 -25 461 -28 l 374 -193 l 165 -137 l 221 42 q 77 216 126 103 q 28 485 28 329 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 q 533 992 497 994 l 585 1157 l 793 1101 l 738 926 m 479 792 q 361 722 397 792 q 325 485 325 651 q 346 267 325 336 l 504 790 q 479 792 496 792 m 479 175 q 598 246 563 175 q 633 485 633 317 q 613 700 633 632 l 456 176 q 479 175 463 175 m 690 1229 l 338 1103 l 268 1240 l 593 1429 l 690 1229 z \\\"},\\\"Õ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 z \\\"},\\\"Ṍ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 z \\\"},\\\"Ȭ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 z \\\"},\\\"Œ\\\":{\\\"ha\\\":1264,\\\"x_min\\\":28,\\\"x_max\\\":1236,\\\"o\\\":\\\"m 896 394 q 824 200 878 283 l 1229 200 l 1229 0 l 603 0 q 454 -28 536 -28 q 226 33 322 -28 q 79 210 131 94 q 28 485 28 325 q 79 756 28 640 q 226 933 131 871 q 454 994 322 994 q 608 967 540 994 l 1236 967 l 1207 768 l 825 768 q 894 588 876 690 l 1168 588 l 1168 394 l 896 394 m 465 175 q 572 247 539 175 q 606 485 606 318 q 572 720 606 649 q 465 792 538 792 q 359 720 393 792 q 325 485 325 649 q 359 247 325 319 q 465 175 393 175 z \\\"},\\\"P\\\":{\\\"ha\\\":849,\\\"x_min\\\":60,\\\"x_max\\\":828,\\\"o\\\":\\\"m 408 967 q 717 884 607 967 q 828 642 828 801 q 723 389 828 476 q 440 301 618 301 l 346 301 l 346 0 l 60 0 l 60 967 l 408 967 m 413 503 q 536 642 536 503 q 404 768 536 768 l 346 768 l 346 503 l 413 503 z \\\"},\\\"Ṕ\\\":{\\\"ha\\\":849,\\\"x_min\\\":60,\\\"x_max\\\":828,\\\"o\\\":\\\"m 408 967 q 717 884 607 967 q 828 642 828 801 q 723 389 828 476 q 440 301 618 301 l 346 301 l 346 0 l 60 0 l 60 967 l 408 967 m 413 503 q 536 642 536 503 q 404 768 536 768 l 346 768 l 346 503 l 413 503 m 636 1167 l 283 1040 l 214 1178 l 539 1367 l 636 1167 z \\\"},\\\"Ṗ\\\":{\\\"ha\\\":849,\\\"x_min\\\":60,\\\"x_max\\\":828,\\\"o\\\":\\\"m 408 967 q 717 884 607 967 q 828 642 828 801 q 723 389 828 476 q 440 301 618 301 l 346 301 l 346 0 l 60 0 l 60 967 l 408 967 m 413 503 q 536 642 536 503 q 404 768 536 768 l 346 768 l 346 503 l 413 503 z \\\"},\\\"Ƥ\\\":{\\\"ha\\\":1094,\\\"x_min\\\":0,\\\"x_max\\\":1074,\\\"o\\\":\\\"m 654 967 q 963 884 853 967 q 1074 642 1074 801 q 969 389 1074 476 q 686 301 864 301 l 592 301 l 592 0 l 306 0 l 306 768 l 271 768 q 214 717 214 768 q 219 678 214 697 q 235 632 224 660 l 64 560 q 17 648 35 606 q 0 736 0 690 q 78 906 0 844 q 286 967 157 967 l 654 967 m 658 503 q 782 642 782 503 q 650 768 782 768 l 592 768 l 592 503 l 658 503 z \\\"},\\\"Þ\\\":{\\\"ha\\\":849,\\\"x_min\\\":60,\\\"x_max\\\":828,\\\"o\\\":\\\"m 408 824 q 717 741 607 824 q 828 497 828 658 q 723 236 828 325 q 440 147 618 147 l 346 147 l 346 0 l 60 0 l 60 967 l 346 967 l 346 824 l 408 824 m 413 349 q 505 385 474 349 q 536 497 536 421 q 404 625 536 625 l 346 625 l 346 349 l 413 349 z \\\"},\\\"Q\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":1000,\\\"o\\\":\\\"m 700 67 q 869 46 800 67 q 1000 -21 938 25 l 832 -240 q 670 -83 758 -143 q 458 -22 582 -22 q 227 38 324 -22 q 79 211 131 97 q 28 485 28 325 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 q 813 860 696 994 q 931 485 931 726 q 865 226 931 326 q 700 67 799 125 m 325 485 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 q 361 722 397 792 q 325 485 325 651 z \\\"},\\\"Ɋ\\\":{\\\"ha\\\":938,\\\"x_min\\\":28,\\\"x_max\\\":1131,\\\"o\\\":\\\"m 1131 -253 q 913 -315 1044 -315 q 678 -240 764 -315 q 592 -22 592 -165 l 592 36 q 410 -28 521 -28 q 207 33 293 -28 q 74 206 121 93 q 28 471 28 318 q 77 750 28 632 q 213 931 126 868 q 413 994 300 994 q 615 915 529 994 l 622 967 l 878 967 l 878 -40 q 896 -95 878 -76 q 947 -114 914 -114 q 992 -108 974 -114 q 1042 -86 1011 -101 l 1131 -253 m 476 168 q 592 208 542 168 l 592 747 q 476 792 544 792 q 362 718 399 792 q 325 471 325 644 q 362 236 325 304 q 476 168 399 168 z \\\"},\\\"R\\\":{\\\"ha\\\":867,\\\"x_min\\\":60,\\\"x_max\\\":894,\\\"o\\\":\\\"m 399 344 l 346 344 l 346 0 l 60 0 l 60 967 l 414 967 q 726 892 624 967 q 829 660 829 818 q 789 510 829 569 q 658 397 749 450 l 894 0 l 578 0 l 399 344 m 346 536 l 421 536 q 508 567 479 536 q 538 660 538 597 q 407 771 538 771 l 346 771 l 346 536 z \\\"},\\\"Ŕ\\\":{\\\"ha\\\":867,\\\"x_min\\\":60,\\\"x_max\\\":894,\\\"o\\\":\\\"m 399 344 l 346 344 l 346 0 l 60 0 l 60 967 l 414 967 q 726 892 624 967 q 829 660 829 818 q 789 510 829 569 q 658 397 749 450 l 894 0 l 578 0 l 399 344 m 346 536 l 421 536 q 508 567 479 536 q 538 660 538 597 q 407 771 538 771 l 346 771 l 346 536 m 631 1167 l 278 1040 l 208 1178 l 533 1367 l 631 1167 z \\\"},\\\"Ř\\\":{\\\"ha\\\":867,\\\"x_min\\\":60,\\\"x_max\\\":894,\\\"o\\\":\\\"m 399 344 l 346 344 l 346 0 l 60 0 l 60 967 l 414 967 q 726 892 624 967 q 829 660 829 818 q 789 510 829 569 q 658 397 749 450 l 894 0 l 578 0 l 399 344 m 346 536 l 421 536 q 508 567 479 536 q 538 660 538 597 q 407 771 538 771 l 346 771 l 346 536 m 703 1233 l 501 1038 l 338 1038 l 136 1233 l 229 1340 l 419 1221 l 610 1340 l 703 1233 z \\\"},\\\"Ŗ\\\":{\\\"ha\\\":867,\\\"x_min\\\":60,\\\"x_max\\\":894,\\\"o\\\":\\\"m 399 344 l 346 344 l 346 0 l 60 0 l 60 967 l 414 967 q 726 892 624 967 q 829 660 829 818 q 789 510 829 569 q 658 397 749 450 l 894 0 l 578 0 l 399 344 m 346 536 l 421 536 q 508 567 479 536 q 538 660 538 597 q 407 771 538 771 l 346 771 l 346 536 z \\\"},\\\"Ȑ\\\":{\\\"ha\\\":867,\\\"x_min\\\":60,\\\"x_max\\\":894,\\\"o\\\":\\\"m 399 344 l 346 344 l 346 0 l 60 0 l 60 967 l 414 967 q 726 892 624 967 q 829 660 829 818 q 789 510 829 569 q 658 397 749 450 l 894 0 l 578 0 l 399 344 m 346 536 l 421 536 q 508 567 479 536 q 538 660 538 597 q 407 771 538 771 l 346 771 l 346 536 z \\\"},\\\"Ṛ\\\":{\\\"ha\\\":867,\\\"x_min\\\":60,\\\"x_max\\\":894,\\\"o\\\":\\\"m 399 344 l 346 344 l 346 0 l 60 0 l 60 967 l 414 967 q 726 892 624 967 q 829 660 829 818 q 789 510 829 569 q 658 397 749 450 l 894 0 l 578 0 l 399 344 m 346 536 l 421 536 q 508 567 479 536 q 538 660 538 597 q 407 771 538 771 l 346 771 l 346 536 m 433 -367 q 323 -324 367 -367 q 279 -219 279 -282 q 323 -115 279 -157 q 433 -72 367 -72 q 544 -115 500 -72 q 588 -219 588 -157 q 544 -324 588 -282 q 433 -367 500 -367 z \\\"},\\\"Ȓ\\\":{\\\"ha\\\":867,\\\"x_min\\\":60,\\\"x_max\\\":894,\\\"o\\\":\\\"m 399 344 l 346 344 l 346 0 l 60 0 l 60 967 l 414 967 q 726 892 624 967 q 829 660 829 818 q 789 510 829 569 q 658 397 749 450 l 894 0 l 578 0 l 399 344 m 346 536 l 421 536 q 508 567 479 536 q 538 660 538 597 q 407 771 538 771 l 346 771 l 346 536 m 419 1346 q 602 1268 538 1346 q 676 1074 667 1190 l 533 1050 q 492 1131 521 1101 q 419 1160 464 1160 q 347 1131 375 1160 q 306 1050 318 1101 l 163 1074 q 237 1268 172 1190 q 419 1346 301 1346 z \\\"},\\\"Ɍ\\\":{\\\"ha\\\":889,\\\"x_min\\\":14,\\\"x_max\\\":917,\\\"o\\\":\\\"m 421 344 l 368 344 l 368 0 l 82 0 l 82 344 l 14 344 l 14 536 l 82 536 l 82 967 l 436 967 q 749 892 646 967 q 851 660 851 818 q 811 510 851 569 q 681 397 771 450 l 917 0 l 600 0 l 421 344 m 368 771 l 368 536 l 443 536 q 531 567 501 536 q 560 660 560 597 q 429 771 560 771 l 368 771 z \\\"},\\\"Ɽ\\\":{\\\"ha\\\":867,\\\"x_min\\\":60,\\\"x_max\\\":894,\\\"o\\\":\\\"m 415 -114 q 460 -108 442 -114 q 510 -86 479 -101 l 599 -253 q 381 -315 513 -315 q 146 -240 232 -315 q 60 -22 60 -165 l 60 967 l 414 967 q 726 892 624 967 q 829 660 829 818 q 789 510 829 569 q 658 397 749 450 l 894 0 l 578 0 l 399 344 l 346 344 l 346 -40 q 364 -95 346 -76 q 415 -114 382 -114 m 346 771 l 346 536 l 421 536 q 508 567 479 536 q 538 660 538 597 q 407 771 538 771 l 346 771 z \\\"},\\\"S\\\":{\\\"ha\\\":817,\\\"x_min\\\":0,\\\"x_max\\\":796,\\\"o\\\":\\\"m 415 994 q 772 863 636 994 l 646 714 q 439 792 549 792 q 361 774 388 792 q 335 722 335 756 q 349 681 335 697 q 398 651 364 665 q 508 613 432 638 q 728 490 661 564 q 796 289 796 417 q 747 124 796 196 q 606 13 697 53 q 389 -28 514 -28 q 164 13 261 -28 q 0 118 67 53 l 140 272 q 378 178 250 178 q 468 202 438 178 q 499 265 499 226 q 485 314 499 294 q 439 350 472 333 q 342 386 406 367 q 107 513 174 439 q 40 699 40 588 q 89 856 40 789 q 223 958 138 922 q 415 994 308 994 z \\\"},\\\"Ś\\\":{\\\"ha\\\":817,\\\"x_min\\\":0,\\\"x_max\\\":796,\\\"o\\\":\\\"m 415 994 q 772 863 636 994 l 646 714 q 439 792 549 792 q 361 774 388 792 q 335 722 335 756 q 349 681 335 697 q 398 651 364 665 q 508 613 432 638 q 728 490 661 564 q 796 289 796 417 q 747 124 796 196 q 606 13 697 53 q 389 -28 514 -28 q 164 13 261 -28 q 0 118 67 53 l 140 272 q 378 178 250 178 q 468 202 438 178 q 499 265 499 226 q 485 314 499 294 q 439 350 472 333 q 342 386 406 367 q 107 513 174 439 q 40 699 40 588 q 89 856 40 789 q 223 958 138 922 q 415 994 308 994 m 638 1167 l 285 1040 l 215 1178 l 540 1367 l 638 1167 z \\\"},\\\"Ꞌ\\\":{\\\"ha\\\":368,\\\"x_min\\\":56,\\\"x_max\\\":313,\\\"o\\\":\\\"m 56 967 l 313 967 l 282 453 l 86 453 l 56 967 z \\\"},\\\"Š\\\":{\\\"ha\\\":817,\\\"x_min\\\":0,\\\"x_max\\\":796,\\\"o\\\":\\\"m 415 994 q 772 863 636 994 l 646 714 q 439 792 549 792 q 361 774 388 792 q 335 722 335 756 q 349 681 335 697 q 398 651 364 665 q 508 613 432 638 q 728 490 661 564 q 796 289 796 417 q 747 124 796 196 q 606 13 697 53 q 389 -28 514 -28 q 164 13 261 -28 q 0 118 67 53 l 140 272 q 378 178 250 178 q 468 202 438 178 q 499 265 499 226 q 485 314 499 294 q 439 350 472 333 q 342 386 406 367 q 107 513 174 439 q 40 699 40 588 q 89 856 40 789 q 223 958 138 922 q 415 994 308 994 m 710 1233 l 508 1038 l 344 1038 l 143 1233 l 236 1340 l 426 1221 l 617 1340 l 710 1233 z \\\"},\\\"Ş\\\":{\\\"ha\\\":817,\\\"x_min\\\":0,\\\"x_max\\\":796,\\\"o\\\":\\\"m 796 289 q 711 81 796 165 q 475 -22 626 -3 l 475 -60 q 628 -210 628 -79 q 567 -333 628 -285 q 400 -382 506 -382 q 303 -369 349 -382 q 226 -335 258 -356 l 286 -215 q 375 -240 332 -240 q 438 -207 438 -240 q 407 -176 438 -185 q 307 -167 376 -167 l 325 -25 q 0 118 131 -7 l 140 272 q 378 178 250 178 q 468 202 438 178 q 499 265 499 226 q 485 314 499 294 q 439 350 472 333 q 342 386 406 367 q 107 513 174 439 q 40 699 40 588 q 89 856 40 789 q 223 958 138 922 q 415 994 308 994 q 772 863 636 994 l 646 714 q 439 792 549 792 q 361 774 388 792 q 335 722 335 756 q 349 681 335 697 q 398 651 364 665 q 508 613 432 638 q 728 490 661 564 q 796 289 796 417 z \\\"},\\\"Ŝ\\\":{\\\"ha\\\":817,\\\"x_min\\\":0,\\\"x_max\\\":796,\\\"o\\\":\\\"m 415 994 q 772 863 636 994 l 646 714 q 439 792 549 792 q 361 774 388 792 q 335 722 335 756 q 349 681 335 697 q 398 651 364 665 q 508 613 432 638 q 728 490 661 564 q 796 289 796 417 q 747 124 796 196 q 606 13 697 53 q 389 -28 514 -28 q 164 13 261 -28 q 0 118 67 53 l 140 272 q 378 178 250 178 q 468 202 438 178 q 499 265 499 226 q 485 314 499 294 q 439 350 472 333 q 342 386 406 367 q 107 513 174 439 q 40 699 40 588 q 89 856 40 789 q 223 958 138 922 q 415 994 308 994 m 143 1151 l 344 1347 l 508 1347 l 710 1151 l 617 1044 l 426 1164 l 236 1044 l 143 1151 z \\\"},\\\"Ș\\\":{\\\"ha\\\":817,\\\"x_min\\\":0,\\\"x_max\\\":796,\\\"o\\\":\\\"m 415 994 q 772 863 636 994 l 646 714 q 439 792 549 792 q 361 774 388 792 q 335 722 335 756 q 349 681 335 697 q 398 651 364 665 q 508 613 432 638 q 728 490 661 564 q 796 289 796 417 q 747 124 796 196 q 606 13 697 53 q 389 -28 514 -28 q 164 13 261 -28 q 0 118 67 53 l 140 272 q 378 178 250 178 q 468 202 438 178 q 499 265 499 226 q 485 314 499 294 q 439 350 472 333 q 342 386 406 367 q 107 513 174 439 q 40 699 40 588 q 89 856 40 789 q 223 958 138 922 q 415 994 308 994 z \\\"},\\\"Ṡ\\\":{\\\"ha\\\":817,\\\"x_min\\\":0,\\\"x_max\\\":796,\\\"o\\\":\\\"m 415 994 q 772 863 636 994 l 646 714 q 439 792 549 792 q 361 774 388 792 q 335 722 335 756 q 349 681 335 697 q 398 651 364 665 q 508 613 432 638 q 728 490 661 564 q 796 289 796 417 q 747 124 796 196 q 606 13 697 53 q 389 -28 514 -28 q 164 13 261 -28 q 0 118 67 53 l 140 272 q 378 178 250 178 q 468 202 438 178 q 499 265 499 226 q 485 314 499 294 q 439 350 472 333 q 342 386 406 367 q 107 513 174 439 q 40 699 40 588 q 89 856 40 789 q 223 958 138 922 q 415 994 308 994 z \\\"},\\\"Ṣ\\\":{\\\"ha\\\":817,\\\"x_min\\\":0,\\\"x_max\\\":796,\\\"o\\\":\\\"m 415 994 q 772 863 636 994 l 646 714 q 439 792 549 792 q 361 774 388 792 q 335 722 335 756 q 349 681 335 697 q 398 651 364 665 q 508 613 432 638 q 728 490 661 564 q 796 289 796 417 q 747 124 796 196 q 606 13 697 53 q 389 -28 514 -28 q 164 13 261 -28 q 0 118 67 53 l 140 272 q 378 178 250 178 q 468 202 438 178 q 499 265 499 226 q 485 314 499 294 q 439 350 472 333 q 342 386 406 367 q 107 513 174 439 q 40 699 40 588 q 89 856 40 789 q 223 958 138 922 q 415 994 308 994 m 407 -367 q 297 -324 340 -367 q 253 -219 253 -282 q 297 -115 253 -157 q 407 -72 340 -72 q 517 -115 474 -72 q 561 -219 561 -157 q 517 -324 561 -282 q 407 -367 474 -367 z \\\"},\\\"ẞ\\\":{\\\"ha\\\":940,\\\"x_min\\\":60,\\\"x_max\\\":919,\\\"o\\\":\\\"m 424 994 q 645 970 551 994 q 856 896 739 946 l 856 781 l 671 550 q 852 463 785 526 q 919 275 919 400 q 872 108 919 176 q 744 6 824 39 q 572 -28 665 -28 q 379 13 460 -28 l 460 196 q 532 182 492 182 q 595 206 568 182 q 622 281 622 229 q 578 378 622 343 q 431 428 535 414 l 431 557 l 590 769 q 444 792 519 792 q 369 765 392 792 q 346 679 346 739 l 346 0 l 60 0 l 60 669 q 153 908 60 822 q 424 994 246 994 z \\\"},\\\"Ə\\\":{\\\"ha\\\":881,\\\"x_min\\\":14,\\\"x_max\\\":853,\\\"o\\\":\\\"m 424 994 q 742 865 631 994 q 853 486 853 735 q 742 105 853 238 q 429 -28 631 -28 q 115 106 217 -28 q 14 472 14 239 q 24 578 14 526 l 565 578 q 394 792 557 792 q 286 773 332 792 q 192 719 240 754 l 68 868 q 228 963 143 932 q 424 994 314 994 m 429 175 q 530 224 496 175 q 565 390 564 274 l 288 390 q 324 225 288 275 q 429 175 361 175 z \\\"},\\\"T\\\":{\\\"ha\\\":769,\\\"x_min\\\":7,\\\"x_max\\\":776,\\\"o\\\":\\\"m 747 753 l 528 753 l 528 0 l 242 0 l 242 753 l 7 753 l 7 967 l 776 967 l 747 753 z \\\"},\\\"Ŧ\\\":{\\\"ha\\\":769,\\\"x_min\\\":7,\\\"x_max\\\":776,\\\"o\\\":\\\"m 528 753 l 528 543 l 679 543 l 679 396 l 528 396 l 528 0 l 242 0 l 242 396 l 89 396 l 89 543 l 242 543 l 242 753 l 7 753 l 7 967 l 776 967 l 747 753 l 528 753 z \\\"},\\\"Ť\\\":{\\\"ha\\\":769,\\\"x_min\\\":7,\\\"x_max\\\":776,\\\"o\\\":\\\"m 747 753 l 528 753 l 528 0 l 242 0 l 242 753 l 7 753 l 7 967 l 776 967 l 747 753 m 668 1233 l 467 1038 l 303 1038 l 101 1233 l 194 1340 l 385 1221 l 575 1340 l 668 1233 z \\\"},\\\"Ţ\\\":{\\\"ha\\\":769,\\\"x_min\\\":7,\\\"x_max\\\":776,\\\"o\\\":\\\"m 528 -60 q 681 -210 681 -79 q 619 -333 681 -285 q 453 -382 558 -382 q 357 -368 403 -382 q 279 -335 311 -354 l 339 -215 q 425 -240 385 -240 q 474 -233 458 -240 q 490 -206 490 -225 q 460 -176 490 -185 q 360 -167 429 -167 l 381 0 l 242 0 l 242 753 l 7 753 l 7 967 l 776 967 l 747 753 l 528 753 l 528 -60 z \\\"},\\\"Ṱ\\\":{\\\"ha\\\":769,\\\"x_min\\\":7,\\\"x_max\\\":776,\\\"o\\\":\\\"m 747 753 l 528 753 l 528 0 l 242 0 l 242 753 l 7 753 l 7 967 l 776 967 l 747 753 m 101 -293 l 303 -83 l 467 -83 l 668 -293 l 575 -400 l 385 -267 l 194 -400 l 101 -293 z \\\"},\\\"Ț\\\":{\\\"ha\\\":769,\\\"x_min\\\":7,\\\"x_max\\\":776,\\\"o\\\":\\\"m 747 753 l 528 753 l 528 0 l 242 0 l 242 753 l 7 753 l 7 967 l 776 967 l 747 753 z \\\"},\\\"Ⱦ\\\":{\\\"ha\\\":769,\\\"x_min\\\":7,\\\"x_max\\\":776,\\\"o\\\":\\\"m 633 767 l 507 519 l 507 0 l 263 0 l 263 42 l 186 -107 l 113 -68 l 263 225 l 263 767 l 7 767 l 7 967 l 643 967 l 688 1054 l 761 1015 l 736 967 l 776 967 l 747 767 l 633 767 m 540 767 l 507 767 l 507 701 l 540 767 z \\\"},\\\"Ṫ\\\":{\\\"ha\\\":769,\\\"x_min\\\":7,\\\"x_max\\\":776,\\\"o\\\":\\\"m 747 753 l 528 753 l 528 0 l 242 0 l 242 753 l 7 753 l 7 967 l 776 967 l 747 753 z \\\"},\\\"Ṭ\\\":{\\\"ha\\\":769,\\\"x_min\\\":7,\\\"x_max\\\":776,\\\"o\\\":\\\"m 747 753 l 528 753 l 528 0 l 242 0 l 242 753 l 7 753 l 7 967 l 776 967 l 747 753 m 385 -367 q 274 -324 318 -367 q 231 -219 231 -282 q 274 -115 231 -157 q 385 -72 318 -72 q 495 -115 451 -72 q 539 -219 539 -157 q 495 -324 539 -282 q 385 -367 451 -367 z \\\"},\\\"Ƭ\\\":{\\\"ha\\\":860,\\\"x_min\\\":0,\\\"x_max\\\":867,\\\"o\\\":\\\"m 838 753 l 618 753 l 618 0 l 332 0 l 332 753 l 271 753 q 228 740 243 753 q 214 703 214 726 q 218 670 214 685 q 232 632 222 656 l 51 560 q 0 736 0 650 q 81 906 0 844 q 299 967 161 967 l 867 967 l 838 753 z \\\"},\\\"Ṯ\\\":{\\\"ha\\\":769,\\\"x_min\\\":7,\\\"x_max\\\":776,\\\"o\\\":\\\"m 747 753 l 528 753 l 528 0 l 242 0 l 242 753 l 7 753 l 7 967 l 776 967 l 747 753 z \\\"},\\\"Ƽ\\\":{\\\"ha\\\":781,\\\"x_min\\\":7,\\\"x_max\\\":746,\\\"o\\\":\\\"m 665 775 l 333 775 l 333 617 q 471 646 401 646 q 611 608 549 646 q 710 499 674 571 q 746 325 746 426 q 697 139 746 218 q 558 16 649 60 q 344 -28 467 -28 q 149 15 235 -28 q 7 129 64 57 l 158 267 q 235 199 190 224 q 333 175 281 175 q 431 212 397 175 q 465 322 465 249 q 354 464 465 464 q 249 431 306 464 l 69 431 l 69 967 l 694 967 l 665 775 z \\\"},\\\"Ƅ\\\":{\\\"ha\\\":890,\\\"x_min\\\":0,\\\"x_max\\\":876,\\\"o\\\":\\\"m 483 651 q 775 572 674 651 q 876 336 876 493 q 772 86 876 172 q 494 0 667 0 l 108 0 l 108 656 l 0 733 q 158 967 92 828 l 394 967 l 394 651 l 483 651 m 457 201 q 549 235 519 201 q 579 333 579 269 q 451 460 579 460 l 394 460 l 394 201 l 457 201 z \\\"},\\\"Ƨ\\\":{\\\"ha\\\":803,\\\"x_min\\\":21,\\\"x_max\\\":803,\\\"o\\\":\\\"m 415 994 q 608 958 525 994 q 738 856 692 922 q 783 701 783 789 q 713 522 783 593 q 475 399 642 450 q 351 341 385 371 q 318 268 318 311 q 431 182 318 182 q 663 272 550 182 l 803 118 q 633 13 732 54 q 407 -28 533 -28 q 203 13 290 -28 q 68 124 115 53 q 21 289 21 196 q 88 481 21 410 q 308 600 156 551 q 451 659 413 633 q 489 722 489 685 q 463 773 489 754 q 392 792 438 792 q 278 772 331 792 q 178 714 226 753 l 51 863 q 415 994 199 994 z \\\"},\\\"Ʈ\\\":{\\\"ha\\\":774,\\\"x_min\\\":7,\\\"x_max\\\":781,\\\"o\\\":\\\"m 781 -253 q 563 -315 694 -315 q 328 -240 414 -315 q 242 -22 242 -165 l 242 753 l 7 753 l 7 967 l 776 967 l 747 753 l 528 753 l 528 -40 q 546 -95 528 -76 q 597 -114 564 -114 q 642 -108 624 -114 q 692 -86 661 -101 l 781 -253 z \\\"},\\\"U\\\":{\\\"ha\\\":894,\\\"x_min\\\":46,\\\"x_max\\\":849,\\\"o\\\":\\\"m 849 328 q 804 146 849 226 q 669 19 760 65 q 447 -28 579 -28 q 147 68 249 -28 q 46 328 46 164 l 46 967 l 332 967 l 332 336 q 359 216 332 254 q 447 178 386 178 q 535 216 508 178 q 563 336 563 254 l 563 967 l 849 967 l 849 328 z \\\"},\\\"Ú\\\":{\\\"ha\\\":894,\\\"x_min\\\":46,\\\"x_max\\\":849,\\\"o\\\":\\\"m 849 328 q 804 146 849 226 q 669 19 760 65 q 447 -28 579 -28 q 147 68 249 -28 q 46 328 46 164 l 46 967 l 332 967 l 332 336 q 359 216 332 254 q 447 178 386 178 q 535 216 508 178 q 563 336 563 254 l 563 967 l 849 967 l 849 328 m 658 1167 l 306 1040 l 236 1178 l 561 1367 l 658 1167 z \\\"},\\\"Ʉ\\\":{\\\"ha\\\":939,\\\"x_min\\\":0,\\\"x_max\\\":939,\\\"o\\\":\\\"m 939 688 l 871 688 l 871 328 q 826 146 871 226 q 692 19 782 65 q 469 -28 601 -28 q 169 68 271 -28 q 68 328 68 164 l 68 688 l 0 688 l 0 835 l 68 835 l 68 967 l 354 967 l 354 835 l 585 835 l 585 967 l 871 967 l 871 835 l 939 835 l 939 688 m 585 688 l 354 688 l 354 336 q 381 216 354 254 q 469 178 408 178 q 558 216 531 178 q 585 336 585 254 l 585 688 z \\\"},\\\"Ŭ\\\":{\\\"ha\\\":894,\\\"x_min\\\":46,\\\"x_max\\\":849,\\\"o\\\":\\\"m 849 328 q 804 146 849 226 q 669 19 760 65 q 447 -28 579 -28 q 147 68 249 -28 q 46 328 46 164 l 46 967 l 332 967 l 332 336 q 359 216 332 254 q 447 178 386 178 q 535 216 508 178 q 563 336 563 254 l 563 967 l 849 967 l 849 328 m 447 1036 q 265 1112 331 1036 q 190 1294 200 1188 l 333 1318 q 374 1249 346 1276 q 447 1222 403 1222 q 520 1249 492 1222 q 561 1318 549 1276 l 704 1294 q 629 1112 694 1188 q 447 1036 564 1036 z \\\"},\\\"Ǔ\\\":{\\\"ha\\\":894,\\\"x_min\\\":46,\\\"x_max\\\":849,\\\"o\\\":\\\"m 849 328 q 804 146 849 226 q 669 19 760 65 q 447 -28 579 -28 q 147 68 249 -28 q 46 328 46 164 l 46 967 l 332 967 l 332 336 q 359 216 332 254 q 447 178 386 178 q 535 216 508 178 q 563 336 563 254 l 563 967 l 849 967 l 849 328 m 731 1233 l 529 1038 l 365 1038 l 164 1233 l 257 1340 l 447 1221 l 638 1340 l 731 1233 z \\\"},\\\"Û\\\":{\\\"ha\\\":894,\\\"x_min\\\":46,\\\"x_max\\\":849,\\\"o\\\":\\\"m 849 328 q 804 146 849 226 q 669 19 760 65 q 447 -28 579 -28 q 147 68 249 -28 q 46 328 46 164 l 46 967 l 332 967 l 332 336 q 359 216 332 254 q 447 178 386 178 q 535 216 508 178 q 563 336 563 254 l 563 967 l 849 967 l 849 328 m 164 1151 l 365 1347 l 529 1347 l 731 1151 l 638 1044 l 447 1164 l 257 1044 l 164 1151 z \\\"},\\\"Ȕ\\\":{\\\"ha\\\":894,\\\"x_min\\\":46,\\\"x_max\\\":849,\\\"o\\\":\\\"m 849 328 q 804 146 849 226 q 669 19 760 65 q 447 -28 579 -28 q 147 68 249 -28 q 46 328 46 164 l 46 967 l 332 967 l 332 336 q 359 216 332 254 q 447 178 386 178 q 535 216 508 178 q 563 336 563 254 l 563 967 l 849 967 l 849 328 z \\\"},\\\"Ü\\\":{\\\"ha\\\":894,\\\"x_min\\\":46,\\\"x_max\\\":849,\\\"o\\\":\\\"m 849 328 q 804 146 849 226 q 669 19 760 65 q 447 -28 579 -28 q 147 68 249 -28 q 46 328 46 164 l 46 967 l 332 967 l 332 336 q 359 216 332 254 q 447 178 386 178 q 535 216 508 178 q 563 336 563 254 l 563 967 l 849 967 l 849 328 z \\\"},\\\"Ǘ\\\":{\\\"ha\\\":894,\\\"x_min\\\":46,\\\"x_max\\\":849,\\\"o\\\":\\\"m 849 328 q 804 146 849 226 q 669 19 760 65 q 447 -28 579 -28 q 147 68 249 -28 q 46 328 46 164 l 46 967 l 332 967 l 332 336 q 359 216 332 254 q 447 178 386 178 q 535 216 508 178 q 563 336 563 254 l 563 967 l 849 967 l 849 328 m 681 1450 l 443 1243 l 342 1333 l 536 1592 l 681 1450 m 263 1297 q 356 1260 317 1297 q 394 1169 394 1222 q 356 1078 394 1115 q 263 1040 317 1040 q 169 1078 207 1040 q 131 1169 131 1115 q 169 1260 131 1222 q 263 1297 207 1297 m 631 1297 q 724 1260 685 1297 q 763 1169 763 1222 q 724 1078 763 1115 q 631 1040 685 1040 q 537 1078 575 1040 q 499 1169 499 1115 q 537 1260 499 1222 q 631 1297 575 1297 z \\\"},\\\"Ǚ\\\":{\\\"ha\\\":894,\\\"x_min\\\":46,\\\"x_max\\\":849,\\\"o\\\":\\\"m 849 328 q 804 146 849 226 q 669 19 760 65 q 447 -28 579 -28 q 147 68 249 -28 q 46 328 46 164 l 46 967 l 332 967 l 332 336 q 359 216 332 254 q 447 178 386 178 q 535 216 508 178 q 563 336 563 254 l 563 967 l 849 967 l 849 328 m 728 1486 l 526 1290 l 363 1290 l 161 1486 l 254 1593 l 444 1474 l 635 1593 l 728 1486 m 263 1297 q 356 1260 317 1297 q 394 1169 394 1222 q 356 1078 394 1115 q 263 1040 317 1040 q 169 1078 207 1040 q 131 1169 131 1115 q 169 1260 131 1222 q 263 1297 207 1297 m 631 1297 q 724 1260 685 1297 q 763 1169 763 1222 q 724 1078 763 1115 q 631 1040 685 1040 q 537 1078 575 1040 q 499 1169 499 1115 q 537 1260 499 1222 q 631 1297 575 1297 z \\\"},\\\"Ǜ\\\":{\\\"ha\\\":894,\\\"x_min\\\":46,\\\"x_max\\\":849,\\\"o\\\":\\\"m 849 328 q 804 146 849 226 q 669 19 760 65 q 447 -28 579 -28 q 147 68 249 -28 q 46 328 46 164 l 46 967 l 332 967 l 332 336 q 359 216 332 254 q 447 178 386 178 q 535 216 508 178 q 563 336 563 254 l 563 967 l 849 967 l 849 328 m 554 1333 l 453 1243 l 215 1450 l 360 1592 l 554 1333 m 263 1297 q 356 1260 318 1297 q 394 1169 394 1222 q 356 1078 394 1115 q 263 1040 318 1040 q 169 1078 208 1040 q 131 1169 131 1115 q 169 1260 131 1222 q 263 1297 208 1297 m 631 1297 q 724 1260 686 1297 q 763 1169 763 1222 q 724 1078 763 1115 q 631 1040 686 1040 q 538 1078 576 1040 q 499 1169 499 1115 q 538 1260 499 1222 q 631 1297 576 1297 z \\\"},\\\"Ǖ\\\":{\\\"ha\\\":894,\\\"x_min\\\":46,\\\"x_max\\\":849,\\\"o\\\":\\\"m 849 328 q 804 146 849 226 q 669 19 760 65 q 447 -28 579 -28 q 147 68 249 -28 q 46 328 46 164 l 46 967 l 332 967 l 332 336 q 359 216 332 254 q 447 178 386 178 q 535 216 508 178 q 563 336 563 254 l 563 967 l 849 967 l 849 328 z \\\"},\\\"Ụ\\\":{\\\"ha\\\":894,\\\"x_min\\\":46,\\\"x_max\\\":849,\\\"o\\\":\\\"m 849 328 q 804 146 849 226 q 669 19 760 65 q 447 -28 579 -28 q 147 68 249 -28 q 46 328 46 164 l 46 967 l 332 967 l 332 336 q 359 216 332 254 q 447 178 386 178 q 535 216 508 178 q 563 336 563 254 l 563 967 l 849 967 l 849 328 m 447 -367 q 337 -324 381 -367 q 293 -219 293 -282 q 337 -115 293 -157 q 447 -72 381 -72 q 558 -115 514 -72 q 601 -219 601 -157 q 558 -324 601 -282 q 447 -367 514 -367 z \\\"},\\\"Ù\\\":{\\\"ha\\\":894,\\\"x_min\\\":46,\\\"x_max\\\":849,\\\"o\\\":\\\"m 849 328 q 804 146 849 226 q 669 19 760 65 q 447 -28 579 -28 q 147 68 249 -28 q 46 328 46 164 l 46 967 l 332 967 l 332 336 q 359 216 332 254 q 447 178 386 178 q 535 216 508 178 q 563 336 563 254 l 563 967 l 849 967 l 849 328 m 658 1178 l 589 1040 l 236 1167 l 335 1367 l 658 1178 z \\\"},\\\"Ủ\\\":{\\\"ha\\\":894,\\\"x_min\\\":46,\\\"x_max\\\":849,\\\"o\\\":\\\"m 849 328 q 804 146 849 226 q 669 19 760 65 q 447 -28 579 -28 q 147 68 249 -28 q 46 328 46 164 l 46 967 l 332 967 l 332 336 q 359 216 332 254 q 447 178 386 178 q 535 216 508 178 q 563 336 563 254 l 563 967 l 849 967 l 849 328 m 371 1190 q 447 1203 424 1192 q 469 1239 469 1214 q 456 1267 469 1257 q 418 1278 442 1278 q 376 1274 394 1278 q 332 1260 357 1269 l 292 1363 q 456 1401 357 1401 q 593 1360 544 1401 q 642 1251 642 1318 q 611 1161 642 1196 q 522 1115 581 1126 l 522 1061 l 371 1061 l 371 1190 z \\\"},\\\"Ư\\\":{\\\"ha\\\":1049,\\\"x_min\\\":46,\\\"x_max\\\":1076,\\\"o\\\":\\\"m 1050 1074 q 1076 946 1076 1018 q 1016 803 1076 851 q 849 754 956 754 l 849 328 q 804 146 849 226 q 669 19 760 65 q 447 -28 579 -28 q 147 68 249 -28 q 46 328 46 164 l 46 967 l 332 967 l 332 336 q 359 216 332 254 q 447 178 386 178 q 535 216 508 178 q 563 336 563 254 l 563 967 l 849 967 l 849 881 q 888 906 876 886 q 900 963 900 925 q 883 1053 900 1006 l 1050 1074 z \\\"},\\\"Ứ\\\":{\\\"ha\\\":1049,\\\"x_min\\\":46,\\\"x_max\\\":1076,\\\"o\\\":\\\"m 306 1040 l 236 1178 l 561 1367 l 658 1167 l 306 1040 m 1050 1074 q 1076 946 1076 1018 q 1016 803 1076 851 q 849 754 956 754 l 849 328 q 804 146 849 226 q 669 19 760 65 q 447 -28 579 -28 q 147 68 249 -28 q 46 328 46 164 l 46 967 l 332 967 l 332 336 q 359 216 332 254 q 447 178 386 178 q 535 216 508 178 q 563 336 563 254 l 563 967 l 849 967 l 849 881 q 888 906 876 886 q 900 963 900 925 q 883 1053 900 1006 l 1050 1074 z \\\"},\\\"Ự\\\":{\\\"ha\\\":1049,\\\"x_min\\\":46,\\\"x_max\\\":1076,\\\"o\\\":\\\"m 1050 1074 q 1076 946 1076 1018 q 1016 803 1076 851 q 849 754 956 754 l 849 328 q 804 146 849 226 q 669 19 760 65 q 447 -28 579 -28 q 147 68 249 -28 q 46 328 46 164 l 46 967 l 332 967 l 332 336 q 359 216 332 254 q 447 178 386 178 q 535 216 508 178 q 563 336 563 254 l 563 967 l 849 967 l 849 881 q 888 906 876 886 q 900 963 900 925 q 883 1053 900 1006 l 1050 1074 m 447 -72 q 558 -115 514 -72 q 601 -219 601 -157 q 558 -324 601 -282 q 447 -367 514 -367 q 337 -324 381 -367 q 293 -219 293 -282 q 337 -115 293 -157 q 447 -72 381 -72 z \\\"},\\\"Ừ\\\":{\\\"ha\\\":1049,\\\"x_min\\\":46,\\\"x_max\\\":1076,\\\"o\\\":\\\"m 589 1040 l 236 1167 l 335 1367 l 658 1178 l 589 1040 m 1050 1074 q 1076 946 1076 1018 q 1016 803 1076 851 q 849 754 956 754 l 849 328 q 804 146 849 226 q 669 19 760 65 q 447 -28 579 -28 q 147 68 249 -28 q 46 328 46 164 l 46 967 l 332 967 l 332 336 q 359 216 332 254 q 447 178 386 178 q 535 216 508 178 q 563 336 563 254 l 563 967 l 849 967 l 849 881 q 888 906 876 886 q 900 963 900 925 q 883 1053 900 1006 l 1050 1074 z \\\"},\\\"Ử\\\":{\\\"ha\\\":1049,\\\"x_min\\\":46,\\\"x_max\\\":1076,\\\"o\\\":\\\"m 418 1278 q 376 1274 394 1278 q 332 1260 357 1269 l 292 1363 q 456 1401 357 1401 q 593 1360 544 1401 q 642 1251 642 1318 q 611 1161 642 1196 q 522 1115 581 1126 l 522 1061 l 371 1061 l 371 1190 q 447 1203 424 1192 q 469 1239 469 1214 q 456 1267 469 1257 q 418 1278 442 1278 m 1050 1074 q 1076 946 1076 1018 q 1016 803 1076 851 q 849 754 956 754 l 849 328 q 804 146 849 226 q 669 19 760 65 q 447 -28 579 -28 q 147 68 249 -28 q 46 328 46 164 l 46 967 l 332 967 l 332 336 q 359 216 332 254 q 447 178 386 178 q 535 216 508 178 q 563 336 563 254 l 563 967 l 849 967 l 849 881 q 888 906 876 886 q 900 963 900 925 q 883 1053 900 1006 l 1050 1074 z \\\"},\\\"Ữ\\\":{\\\"ha\\\":1049,\\\"x_min\\\":46,\\\"x_max\\\":1076,\\\"o\\\":\\\"m 371 1099 q 331 1085 346 1099 q 297 1039 315 1071 l 168 1101 q 248 1237 197 1183 q 364 1290 299 1290 q 416 1283 394 1290 q 461 1260 438 1276 q 498 1237 485 1243 q 525 1231 511 1231 q 564 1244 549 1231 q 597 1290 579 1258 l 726 1228 q 646 1092 697 1144 q 528 1039 594 1039 q 478 1046 499 1039 q 436 1068 458 1053 q 398 1092 410 1086 q 371 1099 386 1099 m 1050 1074 q 1076 946 1076 1018 q 1016 803 1076 851 q 849 754 956 754 l 849 328 q 804 146 849 226 q 669 19 760 65 q 447 -28 579 -28 q 147 68 249 -28 q 46 328 46 164 l 46 967 l 332 967 l 332 336 q 359 216 332 254 q 447 178 386 178 q 535 216 508 178 q 563 336 563 254 l 563 967 l 849 967 l 849 881 q 888 906 876 886 q 900 963 900 925 q 883 1053 900 1006 l 1050 1074 z \\\"},\\\"Ű\\\":{\\\"ha\\\":894,\\\"x_min\\\":46,\\\"x_max\\\":849,\\\"o\\\":\\\"m 849 328 q 804 146 849 226 q 669 19 760 65 q 447 -28 579 -28 q 147 68 249 -28 q 46 328 46 164 l 46 967 l 332 967 l 332 336 q 359 216 332 254 q 447 178 386 178 q 535 216 508 178 q 563 336 563 254 l 563 967 l 849 967 l 849 328 m 542 1267 l 364 1035 l 246 1096 l 372 1356 l 542 1267 m 790 1244 l 600 1022 l 486 1090 l 626 1343 l 790 1244 z \\\"},\\\"Ȗ\\\":{\\\"ha\\\":894,\\\"x_min\\\":46,\\\"x_max\\\":849,\\\"o\\\":\\\"m 849 328 q 804 146 849 226 q 669 19 760 65 q 447 -28 579 -28 q 147 68 249 -28 q 46 328 46 164 l 46 967 l 332 967 l 332 336 q 359 216 332 254 q 447 178 386 178 q 535 216 508 178 q 563 336 563 254 l 563 967 l 849 967 l 849 328 m 447 1346 q 630 1268 565 1346 q 704 1074 694 1190 l 561 1050 q 520 1131 549 1101 q 447 1160 492 1160 q 374 1131 403 1160 q 333 1050 346 1101 l 190 1074 q 265 1268 200 1190 q 447 1346 329 1346 z \\\"},\\\"Ū\\\":{\\\"ha\\\":894,\\\"x_min\\\":46,\\\"x_max\\\":849,\\\"o\\\":\\\"m 849 328 q 804 146 849 226 q 669 19 760 65 q 447 -28 579 -28 q 147 68 249 -28 q 46 328 46 164 l 46 967 l 332 967 l 332 336 q 359 216 332 254 q 447 178 386 178 q 535 216 508 178 q 563 336 563 254 l 563 967 l 849 967 l 849 328 z \\\"},\\\"Ų\\\":{\\\"ha\\\":894,\\\"x_min\\\":46,\\\"x_max\\\":849,\\\"o\\\":\\\"m 849 967 l 849 328 q 792 126 849 214 q 625 0 735 39 q 500 -65 535 -31 q 465 -132 465 -100 q 536 -193 465 -193 q 621 -182 572 -193 l 604 -342 q 501 -353 556 -353 q 342 -306 404 -353 q 279 -178 279 -258 q 383 -25 279 -78 q 131 84 217 -10 q 46 328 46 178 l 46 967 l 332 967 l 332 336 q 359 216 332 254 q 447 178 386 178 q 535 216 508 178 q 563 336 563 254 l 563 967 l 849 967 z \\\"},\\\"Ʊ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 -28 q 237 31 339 -28 q 81 189 135 89 q 28 408 28 289 q 213 769 28 653 l 57 769 l 57 967 l 413 967 l 413 783 q 346 633 367 714 q 325 408 325 553 q 363 234 325 293 q 479 175 400 175 q 596 234 558 175 q 633 408 633 293 q 613 633 633 553 q 546 783 592 714 l 546 967 l 901 967 l 901 769 l 746 769 q 931 408 931 654 q 877 189 931 289 q 722 31 824 89 q 479 -28 619 -28 z \\\"},\\\"Ů\\\":{\\\"ha\\\":894,\\\"x_min\\\":46,\\\"x_max\\\":849,\\\"o\\\":\\\"m 849 328 q 804 146 849 226 q 669 19 760 65 q 447 -28 579 -28 q 147 68 249 -28 q 46 328 46 164 l 46 967 l 332 967 l 332 336 q 359 216 332 254 q 447 178 386 178 q 535 216 508 178 q 563 336 563 254 l 563 967 l 849 967 l 849 328 z \\\"},\\\"Ũ\\\":{\\\"ha\\\":894,\\\"x_min\\\":46,\\\"x_max\\\":849,\\\"o\\\":\\\"m 849 328 q 804 146 849 226 q 669 19 760 65 q 447 -28 579 -28 q 147 68 249 -28 q 46 328 46 164 l 46 967 l 332 967 l 332 336 q 359 216 332 254 q 447 178 386 178 q 535 216 508 178 q 563 336 563 254 l 563 967 l 849 967 l 849 328 z \\\"},\\\"Ṹ\\\":{\\\"ha\\\":894,\\\"x_min\\\":46,\\\"x_max\\\":849,\\\"o\\\":\\\"m 849 328 q 804 146 849 226 q 669 19 760 65 q 447 -28 579 -28 q 147 68 249 -28 q 46 328 46 164 l 46 967 l 332 967 l 332 336 q 359 216 332 254 q 447 178 386 178 q 535 216 508 178 q 563 336 563 254 l 563 967 l 849 967 l 849 328 z \\\"},\\\"V\\\":{\\\"ha\\\":804,\\\"x_min\\\":-35,\\\"x_max\\\":839,\\\"o\\\":\\\"m 594 0 l 225 0 l -35 967 l 267 967 l 414 199 l 546 967 l 839 967 l 594 0 z \\\"},\\\"Ɣ\\\":{\\\"ha\\\":804,\\\"x_min\\\":-35,\\\"x_max\\\":839,\\\"o\\\":\\\"m 547 147 q 619 8 596 72 q 643 -124 643 -57 q 587 -264 643 -212 q 407 -315 531 -315 q 228 -264 286 -315 q 171 -124 171 -212 q 193 -2 171 -62 q 268 147 215 58 l -35 967 l 267 967 l 407 329 l 546 967 l 839 967 l 547 147 m 444 -106 q 436 -59 444 -82 q 407 8 428 -36 q 369 -107 369 -69 q 407 -147 369 -147 q 444 -106 444 -147 z \\\"},\\\"Ʋ\\\":{\\\"ha\\\":894,\\\"x_min\\\":46,\\\"x_max\\\":849,\\\"o\\\":\\\"m 608 994 q 849 731 849 994 l 849 397 q 795 168 849 264 q 644 22 742 72 q 417 -28 546 -28 q 219 14 303 -28 q 90 130 135 56 q 46 300 46 204 l 46 967 l 332 967 l 332 297 q 356 210 332 242 q 426 178 381 178 q 526 227 489 178 q 563 388 563 276 l 563 749 q 526 793 563 793 q 497 789 513 793 l 460 971 q 608 994 524 994 z \\\"},\\\"Ʌ\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 869 0 l 567 0 l 415 767 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 z \\\"},\\\"W\\\":{\\\"ha\\\":1193,\\\"x_min\\\":0,\\\"x_max\\\":1193,\\\"o\\\":\\\"m 1053 0 l 681 0 l 594 694 l 499 0 l 135 0 l 0 967 l 286 967 l 347 207 l 450 967 l 749 967 l 835 207 l 918 967 l 1193 967 l 1053 0 z \\\"},\\\"Ẃ\\\":{\\\"ha\\\":1193,\\\"x_min\\\":0,\\\"x_max\\\":1193,\\\"o\\\":\\\"m 1053 0 l 681 0 l 594 694 l 499 0 l 135 0 l 0 967 l 286 967 l 347 207 l 450 967 l 749 967 l 835 207 l 918 967 l 1193 967 l 1053 0 m 811 1167 l 458 1040 l 389 1178 l 714 1367 l 811 1167 z \\\"},\\\"Ŵ\\\":{\\\"ha\\\":1193,\\\"x_min\\\":0,\\\"x_max\\\":1193,\\\"o\\\":\\\"m 1053 0 l 681 0 l 594 694 l 499 0 l 135 0 l 0 967 l 286 967 l 347 207 l 450 967 l 749 967 l 835 207 l 918 967 l 1193 967 l 1053 0 m 317 1151 l 518 1347 l 682 1347 l 883 1151 l 790 1044 l 600 1164 l 410 1044 l 317 1151 z \\\"},\\\"Ẅ\\\":{\\\"ha\\\":1193,\\\"x_min\\\":0,\\\"x_max\\\":1193,\\\"o\\\":\\\"m 1053 0 l 681 0 l 594 694 l 499 0 l 135 0 l 0 967 l 286 967 l 347 207 l 450 967 l 749 967 l 835 207 l 918 967 l 1193 967 l 1053 0 z \\\"},\\\"Ẁ\\\":{\\\"ha\\\":1193,\\\"x_min\\\":0,\\\"x_max\\\":1193,\\\"o\\\":\\\"m 1053 0 l 681 0 l 594 694 l 499 0 l 135 0 l 0 967 l 286 967 l 347 207 l 450 967 l 749 967 l 835 207 l 918 967 l 1193 967 l 1053 0 m 811 1178 l 742 1040 l 389 1167 l 488 1367 l 811 1178 z \\\"},\\\"Ⱳ\\\":{\\\"ha\\\":1299,\\\"x_min\\\":0,\\\"x_max\\\":1340,\\\"o\\\":\\\"m 135 0 l 499 0 l 594 694 l 681 0 l 1043 0 l 1133 726 q 1153 781 1138 764 q 1200 797 1169 797 q 1235 794 1222 797 q 1268 781 1249 790 l 1340 943 q 1257 981 1300 968 q 1153 994 1214 994 q 967 930 1035 994 q 885 718 899 865 l 835 207 l 749 967 l 450 967 l 347 207 l 286 967 l 0 967 l 135 0 z \\\"},\\\"Ƿ\\\":{\\\"ha\\\":849,\\\"x_min\\\":60,\\\"x_max\\\":828,\\\"o\\\":\\\"m 564 994 q 697 960 636 994 q 792 865 757 926 q 828 724 828 803 q 778 533 828 610 q 647 408 729 457 q 440 315 565 360 l 346 282 l 346 0 l 60 0 l 60 967 l 346 967 l 346 914 q 441 974 385 953 q 564 994 497 994 m 368 482 q 498 578 460 525 q 536 703 536 632 q 513 772 536 747 q 450 796 489 796 q 346 758 394 796 l 346 472 l 368 482 z \\\"},\\\"X\\\":{\\\"ha\\\":842,\\\"x_min\\\":-14,\\\"x_max\\\":856,\\\"o\\\":\\\"m 856 0 l 547 0 l 414 332 l 289 0 l -14 0 l 244 513 l 4 967 l 311 967 l 417 689 l 535 967 l 836 967 l 586 521 l 856 0 z \\\"},\\\"Y\\\":{\\\"ha\\\":861,\\\"x_min\\\":-21,\\\"x_max\\\":882,\\\"o\\\":\\\"m 574 357 l 574 0 l 288 0 l 288 356 l -21 967 l 292 967 l 435 572 l 579 967 l 882 967 l 574 357 z \\\"},\\\"Ý\\\":{\\\"ha\\\":861,\\\"x_min\\\":-21,\\\"x_max\\\":882,\\\"o\\\":\\\"m 574 357 l 574 0 l 288 0 l 288 356 l -21 967 l 292 967 l 435 572 l 579 967 l 882 967 l 574 357 m 642 1167 l 289 1040 l 219 1178 l 544 1367 l 642 1167 z \\\"},\\\"Ŷ\\\":{\\\"ha\\\":861,\\\"x_min\\\":-21,\\\"x_max\\\":882,\\\"o\\\":\\\"m 574 357 l 574 0 l 288 0 l 288 356 l -21 967 l 292 967 l 435 572 l 579 967 l 882 967 l 574 357 m 147 1151 l 349 1347 l 513 1347 l 714 1151 l 621 1044 l 431 1164 l 240 1044 l 147 1151 z \\\"},\\\"Ÿ\\\":{\\\"ha\\\":861,\\\"x_min\\\":-21,\\\"x_max\\\":882,\\\"o\\\":\\\"m 574 357 l 574 0 l 288 0 l 288 356 l -21 967 l 292 967 l 435 572 l 579 967 l 882 967 l 574 357 z \\\"},\\\"Ỵ\\\":{\\\"ha\\\":861,\\\"x_min\\\":-21,\\\"x_max\\\":882,\\\"o\\\":\\\"m 574 357 l 574 0 l 288 0 l 288 356 l -21 967 l 292 967 l 435 572 l 579 967 l 882 967 l 574 357 m 431 -367 q 320 -324 364 -367 q 276 -219 276 -282 q 320 -115 276 -157 q 431 -72 364 -72 q 541 -115 497 -72 q 585 -219 585 -157 q 541 -324 585 -282 q 431 -367 497 -367 z \\\"},\\\"Ỳ\\\":{\\\"ha\\\":861,\\\"x_min\\\":-21,\\\"x_max\\\":882,\\\"o\\\":\\\"m 574 357 l 574 0 l 288 0 l 288 356 l -21 967 l 292 967 l 435 572 l 579 967 l 882 967 l 574 357 m 642 1178 l 572 1040 l 219 1167 l 318 1367 l 642 1178 z \\\"},\\\"Ƴ\\\":{\\\"ha\\\":918,\\\"x_min\\\":-21,\\\"x_max\\\":960,\\\"o\\\":\\\"m 288 356 l -21 967 l 292 967 l 435 572 l 499 768 q 602 942 538 890 q 779 994 667 994 q 960 946 878 994 l 889 781 q 821 797 853 797 q 772 783 790 797 q 738 732 753 768 l 574 357 l 574 0 l 288 0 l 288 356 z \\\"},\\\"Ỷ\\\":{\\\"ha\\\":861,\\\"x_min\\\":-21,\\\"x_max\\\":882,\\\"o\\\":\\\"m 574 357 l 574 0 l 288 0 l 288 356 l -21 967 l 292 967 l 435 572 l 579 967 l 882 967 l 574 357 m 354 1190 q 430 1203 407 1192 q 453 1239 453 1214 q 439 1267 453 1257 q 401 1278 425 1278 q 359 1274 378 1278 q 315 1260 340 1269 l 275 1363 q 439 1401 340 1401 q 576 1360 528 1401 q 625 1251 625 1318 q 594 1161 625 1196 q 506 1115 564 1126 l 506 1061 l 354 1061 l 354 1190 z \\\"},\\\"Ȳ\\\":{\\\"ha\\\":861,\\\"x_min\\\":-21,\\\"x_max\\\":882,\\\"o\\\":\\\"m 574 357 l 574 0 l 288 0 l 288 356 l -21 967 l 292 967 l 435 572 l 579 967 l 882 967 l 574 357 z \\\"},\\\"Ʀ\\\":{\\\"ha\\\":867,\\\"x_min\\\":60,\\\"x_max\\\":894,\\\"o\\\":\\\"m 399 192 l 346 192 l 346 0 l 60 0 l 60 967 l 346 967 l 346 814 l 414 814 q 726 740 624 814 q 829 507 829 665 q 789 357 829 417 q 658 244 749 297 l 894 -153 l 578 -153 l 399 192 m 346 383 l 421 383 q 508 414 479 383 q 538 507 538 444 q 407 618 538 618 l 346 618 l 346 383 z \\\"},\\\"Ɏ\\\":{\\\"ha\\\":863,\\\"x_min\\\":-21,\\\"x_max\\\":883,\\\"o\\\":\\\"m 883 863 l 883 715 l 756 715 l 575 357 l 575 0 l 289 0 l 289 356 l 107 715 l -21 715 l -21 863 l 33 863 l -19 967 l 279 967 l 318 863 l 556 863 l 594 967 l 883 967 l 831 863 l 883 863 m 500 715 l 372 715 l 436 544 l 500 715 z \\\"},\\\"Ỹ\\\":{\\\"ha\\\":861,\\\"x_min\\\":-21,\\\"x_max\\\":882,\\\"o\\\":\\\"m 574 357 l 574 0 l 288 0 l 288 356 l -21 967 l 292 967 l 435 572 l 579 967 l 882 967 l 574 357 z \\\"},\\\"Z\\\":{\\\"ha\\\":774,\\\"x_min\\\":14,\\\"x_max\\\":753,\\\"o\\\":\\\"m 740 754 l 356 224 l 753 224 l 725 0 l 14 0 l 14 210 l 411 750 l 53 750 l 53 967 l 740 967 l 740 754 z \\\"},\\\"Ź\\\":{\\\"ha\\\":774,\\\"x_min\\\":14,\\\"x_max\\\":753,\\\"o\\\":\\\"m 740 754 l 356 224 l 753 224 l 725 0 l 14 0 l 14 210 l 411 750 l 53 750 l 53 967 l 740 967 l 740 754 m 599 1167 l 246 1040 l 176 1178 l 501 1367 l 599 1167 z \\\"},\\\"Ž\\\":{\\\"ha\\\":774,\\\"x_min\\\":14,\\\"x_max\\\":753,\\\"o\\\":\\\"m 740 754 l 356 224 l 753 224 l 725 0 l 14 0 l 14 210 l 411 750 l 53 750 l 53 967 l 740 967 l 740 754 m 671 1233 l 469 1038 l 306 1038 l 104 1233 l 197 1340 l 388 1221 l 578 1340 l 671 1233 z \\\"},\\\"Ż\\\":{\\\"ha\\\":774,\\\"x_min\\\":14,\\\"x_max\\\":753,\\\"o\\\":\\\"m 740 754 l 356 224 l 753 224 l 725 0 l 14 0 l 14 210 l 411 750 l 53 750 l 53 967 l 740 967 l 740 754 z \\\"},\\\"Ẓ\\\":{\\\"ha\\\":774,\\\"x_min\\\":14,\\\"x_max\\\":753,\\\"o\\\":\\\"m 740 754 l 356 224 l 753 224 l 725 0 l 14 0 l 14 210 l 411 750 l 53 750 l 53 967 l 740 967 l 740 754 m 372 -367 q 262 -324 306 -367 q 218 -219 218 -282 q 262 -115 218 -157 q 372 -72 306 -72 q 483 -115 439 -72 q 526 -219 526 -157 q 483 -324 526 -282 q 372 -367 439 -367 z \\\"},\\\"Ȥ\\\":{\\\"ha\\\":761,\\\"x_min\\\":14,\\\"x_max\\\":740,\\\"o\\\":\\\"m 740 754 l 356 224 l 740 224 l 740 -22 q 654 -240 740 -165 q 419 -315 568 -315 q 201 -253 288 -315 l 290 -86 q 341 -108 321 -101 q 392 -114 361 -114 q 468 -40 468 -114 l 468 0 l 14 0 l 14 210 l 411 750 l 53 750 l 53 967 l 740 967 l 740 754 z \\\"},\\\"Ƶ\\\":{\\\"ha\\\":774,\\\"x_min\\\":14,\\\"x_max\\\":753,\\\"o\\\":\\\"m 753 224 l 725 0 l 14 0 l 14 196 l 169 399 l 64 399 l 64 565 l 297 565 l 439 750 l 53 750 l 53 967 l 740 967 l 740 768 l 586 565 l 678 565 l 678 399 l 460 399 l 328 224 l 753 224 z \\\"},\\\"ʙ\\\":{\\\"ha\\\":767,\\\"x_min\\\":58,\\\"x_max\\\":743,\\\"o\\\":\\\"m 553 410 q 743 224 743 386 q 651 56 743 113 q 400 0 558 0 l 58 0 l 58 735 q 381 769 251 769 q 626 719 539 769 q 713 568 713 668 q 672 465 713 506 q 553 410 632 424 m 374 604 q 333 603 351 604 l 333 457 l 375 457 q 426 476 407 457 q 444 531 444 496 q 426 585 444 565 q 374 604 408 604 m 389 171 q 463 251 463 171 q 444 309 463 289 q 389 329 425 329 l 333 329 l 333 171 l 389 171 z \\\"},\\\"ɢ\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":747,\\\"o\\\":\\\"m 428 769 q 602 741 528 769 q 736 661 676 713 l 610 525 q 530 568 568 554 q 447 582 492 582 q 306 374 306 582 q 333 209 306 254 q 417 164 360 164 q 493 176 458 164 l 493 272 l 421 272 l 396 444 l 747 444 l 747 72 q 592 2 678 29 q 413 -25 507 -25 q 119 74 214 -25 q 24 375 24 172 q 75 584 24 494 q 219 722 126 674 q 428 769 311 769 z \\\"},\\\"ʛ\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":957,\\\"o\\\":\\\"m 754 1061 q 957 1010 869 1061 l 886 840 q 797 864 836 864 q 751 846 765 864 q 736 789 736 828 l 736 661 l 624 539 q 538 572 574 563 q 451 582 501 582 q 306 374 306 582 q 333 209 306 254 q 417 164 360 164 q 493 176 458 164 l 493 272 l 421 272 l 396 444 l 747 444 l 747 72 q 600 1 685 26 q 417 -25 515 -25 q 119 75 215 -25 q 24 375 24 175 q 74 583 24 493 q 209 721 124 672 q 396 769 294 769 q 503 754 453 769 l 503 813 q 565 996 503 931 q 754 1061 626 1061 z \\\"},\\\"ʜ\\\":{\\\"ha\\\":808,\\\"x_min\\\":58,\\\"x_max\\\":750,\\\"o\\\":\\\"m 475 276 l 333 276 l 333 0 l 58 0 l 58 742 l 333 742 l 333 474 l 475 474 l 475 742 l 750 742 l 750 0 l 475 0 l 475 276 z \\\"},\\\"ɪ\\\":{\\\"ha\\\":472,\\\"x_min\\\":14,\\\"x_max\\\":458,\\\"o\\\":\\\"m 374 550 l 374 194 l 458 194 l 458 0 l 14 0 l 14 194 l 99 194 l 99 550 l 14 550 l 14 742 l 458 742 l 458 550 l 374 550 z \\\"},\\\"ʟ\\\":{\\\"ha\\\":638,\\\"x_min\\\":58,\\\"x_max\\\":631,\\\"o\\\":\\\"m 333 206 l 631 206 l 603 0 l 58 0 l 58 742 l 333 742 l 333 206 z \\\"},\\\"ɴ\\\":{\\\"ha\\\":810,\\\"x_min\\\":58,\\\"x_max\\\":751,\\\"o\\\":\\\"m 751 0 l 428 0 l 256 513 q 288 335 276 414 q 299 160 299 257 l 299 0 l 58 0 l 58 742 l 378 742 l 554 231 l 546 274 q 519 435 528 369 q 511 593 511 500 l 511 742 l 751 742 l 751 0 z \\\"},\\\"ɶ\\\":{\\\"ha\\\":1079,\\\"x_min\\\":24,\\\"x_max\\\":1058,\\\"o\\\":\\\"m 765 286 q 719 185 751 233 l 1049 185 l 1049 0 l 556 0 q 406 -28 485 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 q 558 742 475 769 l 1058 742 l 1031 558 l 721 558 q 764 464 751 510 l 999 464 l 999 286 l 765 286 m 406 169 q 481 217 458 169 q 503 372 503 264 q 480 526 503 481 q 406 572 457 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 z \\\"},\\\"ʀ\\\":{\\\"ha\\\":739,\\\"x_min\\\":58,\\\"x_max\\\":760,\\\"o\\\":\\\"m 354 239 l 319 239 l 319 0 l 58 0 l 58 742 l 364 742 q 700 486 700 742 q 673 363 700 417 q 590 278 646 310 l 760 0 l 476 0 l 354 239 m 319 393 l 354 393 q 418 413 399 393 q 438 488 438 433 q 419 557 438 539 q 357 575 400 575 l 319 575 l 319 393 z \\\"},\\\"ʁ\\\":{\\\"ha\\\":739,\\\"x_min\\\":58,\\\"x_max\\\":760,\\\"o\\\":\\\"m 590 464 q 673 379 646 432 q 700 260 700 326 q 364 0 700 0 l 58 0 l 58 742 l 319 742 l 319 503 l 354 503 l 476 742 l 760 742 l 590 464 m 357 167 q 419 185 400 167 q 438 258 438 204 q 418 328 438 308 q 354 349 399 349 l 319 349 l 319 167 l 357 167 z \\\"},\\\"ʏ\\\":{\\\"ha\\\":725,\\\"x_min\\\":-28,\\\"x_max\\\":753,\\\"o\\\":\\\"m 500 263 l 500 0 l 225 0 l 225 261 l -28 742 l 265 742 l 367 432 l 468 742 l 753 742 l 500 263 z \\\"},\\\"a\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 z \\\"},\\\"á\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 m 582 989 l 233 851 l 160 989 l 479 1189 l 582 989 z \\\"},\\\"ă\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 m 385 869 q 202 947 267 869 q 128 1142 138 1025 l 271 1165 q 312 1085 283 1114 q 385 1056 340 1056 q 458 1085 429 1056 q 499 1165 486 1114 l 642 1142 q 567 947 632 1025 q 385 869 503 869 z \\\"},\\\"ắ\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 z \\\"},\\\"ặ\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 m 385 869 q 202 947 267 869 q 128 1142 138 1025 l 271 1165 q 312 1085 283 1114 q 385 1056 340 1056 q 458 1085 429 1056 q 499 1165 486 1114 l 642 1142 q 567 947 632 1025 q 385 869 503 869 m 385 -367 q 274 -324 318 -367 q 231 -219 231 -282 q 274 -115 231 -157 q 385 -72 318 -72 q 495 -115 451 -72 q 539 -219 539 -157 q 495 -324 539 -282 q 385 -367 451 -367 z \\\"},\\\"ằ\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 z \\\"},\\\"ẳ\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 z \\\"},\\\"ẵ\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 z \\\"},\\\"ǎ\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 m 668 1046 l 467 836 l 303 836 l 101 1046 l 194 1153 l 385 1019 l 575 1153 l 668 1046 z \\\"},\\\"â\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 m 101 957 l 303 1167 l 467 1167 l 668 957 l 575 850 l 385 983 l 194 850 l 101 957 z \\\"},\\\"ấ\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":875,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 z \\\"},\\\"ậ\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 m 101 957 l 303 1167 l 467 1167 l 668 957 l 575 850 l 385 983 l 194 850 l 101 957 m 385 -367 q 274 -324 318 -367 q 231 -219 231 -282 q 274 -115 231 -157 q 385 -72 318 -72 q 495 -115 451 -72 q 539 -219 539 -157 q 495 -324 539 -282 q 385 -367 451 -367 z \\\"},\\\"ầ\\\":{\\\"ha\\\":765,\\\"x_min\\\":-103,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 z \\\"},\\\"ẩ\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":794,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 z \\\"},\\\"ẫ\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 z \\\"},\\\"ȁ\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 m 360 925 l 226 861 l 44 1133 l 215 1218 l 360 925 m 613 921 l 476 867 l 306 1140 l 479 1218 l 613 921 z \\\"},\\\"ä\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 m 214 1136 q 308 1099 269 1136 q 346 1008 346 1061 q 308 917 346 954 q 214 879 269 879 q 121 917 160 879 q 82 1008 82 954 q 121 1099 82 1061 q 214 1136 160 1136 m 554 1136 q 648 1099 610 1136 q 686 1008 686 1061 q 648 917 686 954 q 554 879 610 879 q 461 917 500 879 q 422 1008 422 954 q 461 1099 422 1061 q 554 1136 500 1136 z \\\"},\\\"ǟ\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 z \\\"},\\\"ȧ\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 m 385 1151 q 495 1109 451 1151 q 539 1004 539 1067 q 495 899 539 942 q 385 857 451 857 q 274 899 318 857 q 231 1004 231 942 q 274 1109 231 1067 q 385 1151 318 1151 z \\\"},\\\"ạ\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 m 385 -367 q 274 -324 318 -367 q 231 -219 231 -282 q 274 -115 231 -157 q 385 -72 318 -72 q 495 -115 451 -72 q 539 -219 539 -157 q 495 -324 539 -282 q 385 -367 451 -367 z \\\"},\\\"ǡ\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 z \\\"},\\\"à\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 m 610 989 l 536 851 l 188 989 l 290 1189 l 610 989 z \\\"},\\\"ả\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 m 308 978 q 384 990 361 979 q 407 1026 407 1001 q 393 1055 407 1044 q 356 1065 379 1065 q 313 1061 332 1065 q 269 1047 294 1057 l 229 1150 q 393 1189 294 1189 q 531 1147 482 1189 q 579 1039 579 1106 q 549 949 579 983 q 460 903 518 914 l 460 835 l 308 835 l 308 978 z \\\"},\\\"ȃ\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 m 385 1121 q 567 1043 503 1121 q 642 849 632 965 l 499 825 q 458 906 486 876 q 385 935 429 935 q 312 906 340 935 q 271 825 283 876 l 128 849 q 202 1043 138 965 q 385 1121 267 1121 z \\\"},\\\"ɑ\\\":{\\\"ha\\\":828,\\\"x_min\\\":24,\\\"x_max\\\":821,\\\"o\\\":\\\"m 764 281 q 776 209 764 233 q 821 168 789 185 l 743 -28 q 610 10 661 -17 q 529 85 558 38 q 432 3 488 33 q 310 -28 376 -28 q 97 80 169 -28 q 24 375 24 188 q 62 580 24 490 q 171 719 100 669 q 338 769 242 769 q 511 690 444 769 l 524 742 l 764 742 l 764 281 m 394 169 q 489 235 451 169 l 489 531 q 449 563 469 553 q 404 574 429 574 q 306 372 306 574 q 329 210 306 251 q 394 169 353 169 z \\\"},\\\"ɒ\\\":{\\\"ha\\\":828,\\\"x_min\\\":7,\\\"x_max\\\":804,\\\"o\\\":\\\"m 518 769 q 731 662 658 769 q 804 367 804 554 q 766 162 804 251 q 657 22 728 72 q 490 -28 586 -28 q 317 51 383 -28 l 304 0 l 64 0 l 64 461 q 51 533 64 508 q 7 574 39 557 l 85 769 q 218 731 167 758 q 299 657 269 704 q 396 739 340 708 q 518 769 451 769 m 424 168 q 522 369 522 168 q 499 531 522 490 q 433 572 475 572 q 339 507 376 572 l 339 211 q 378 178 358 189 q 424 168 399 168 z \\\"},\\\"ā\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 m 158 900 l 158 1086 l 610 1086 l 610 900 l 158 900 z \\\"},\\\"ą\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 689 -22 q 565 -87 600 -51 q 529 -154 529 -122 q 600 -215 529 -215 q 685 -204 636 -215 l 668 -364 q 565 -375 619 -375 q 406 -328 468 -375 q 343 -200 343 -281 q 535 26 343 -51 q 489 81 506 50 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 z \\\"},\\\"å\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 m 385 1231 q 499 1203 450 1231 q 573 1129 547 1175 q 599 1028 599 1083 q 573 926 599 972 q 499 851 547 879 q 385 824 450 824 q 271 851 319 824 q 197 926 222 879 q 171 1028 171 972 q 197 1129 171 1083 q 271 1203 222 1175 q 385 1231 319 1231 m 385 1092 q 344 1076 360 1092 q 329 1028 329 1060 q 344 980 329 996 q 385 964 360 964 q 425 980 410 964 q 440 1028 440 996 q 425 1076 440 1060 q 385 1092 410 1092 z \\\"},\\\"ǻ\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 z \\\"},\\\"ⱥ\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 329 -22 433 -4 l 310 -107 l 228 -89 l 242 -26 q 81 45 142 -19 q 21 208 21 110 q 106 381 21 318 q 353 449 192 443 l 388 596 l 367 596 q 253 585 321 596 q 133 557 186 575 l 74 711 q 222 754 142 739 q 367 769 301 769 q 428 767 389 769 l 444 839 l 525 821 l 510 754 q 654 667 608 731 q 700 496 700 603 l 700 240 m 474 501 q 464 558 474 539 l 439 449 l 474 449 l 474 501 m 371 156 q 474 206 418 164 l 474 319 l 408 319 l 371 156 m 261 228 q 288 165 261 183 l 321 313 q 276 283 290 303 q 261 228 261 263 z \\\"},\\\"ã\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 m 465 864 q 416 871 436 864 q 374 893 396 878 q 335 917 347 911 q 308 924 324 924 q 268 910 283 924 q 235 864 253 896 l 106 926 q 185 1062 135 1008 q 301 1115 236 1115 q 353 1108 332 1115 q 399 1085 375 1101 q 435 1062 422 1068 q 463 1056 449 1056 q 501 1069 486 1056 q 535 1115 517 1083 l 664 1053 q 583 917 635 969 q 465 864 532 864 z \\\"},\\\"ɐ\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 440 167 q 526 177 474 167 q 632 206 578 188 l 692 31 q 544 -12 624 3 q 399 -28 464 -28 q 144 40 224 -28 q 65 246 65 107 l 65 501 q 56 559 65 540 q 21 588 46 578 l 76 764 q 199 735 151 758 q 276 661 246 713 q 500 769 349 769 q 677 703 610 769 q 744 533 744 638 q 653 344 744 410 q 386 279 561 279 l 333 279 l 333 261 q 356 186 333 206 q 440 167 378 167 m 415 576 q 369 564 390 576 q 333 532 347 551 l 333 422 l 363 422 q 449 443 421 422 q 476 507 476 464 q 460 558 476 539 q 415 576 443 576 z \\\"},\\\"æ\\\":{\\\"ha\\\":1197,\\\"x_min\\\":21,\\\"x_max\\\":1176,\\\"o\\\":\\\"m 1176 381 q 1171 293 1176 346 l 721 293 q 767 192 732 218 q 869 167 803 167 q 949 183 908 167 q 1038 232 989 199 l 1149 82 q 843 -28 1014 -28 q 663 5 740 -28 q 533 94 585 38 q 271 -28 447 -28 q 88 38 156 -28 q 21 208 21 104 q 115 397 21 332 q 390 463 208 463 l 443 463 l 443 478 q 421 553 443 533 q 336 572 399 572 q 251 562 303 572 q 144 533 199 551 l 85 711 q 233 754 153 739 q 378 769 313 769 q 607 685 531 769 q 835 769 699 769 q 1011 724 933 769 q 1133 590 1089 678 q 1176 381 1176 501 m 906 458 q 885 560 904 524 q 818 596 867 596 q 749 564 772 596 q 719 449 726 532 l 906 449 l 906 458 m 365 165 q 416 182 394 165 q 460 231 438 199 q 449 306 450 272 l 449 313 l 417 313 q 333 293 360 313 q 307 229 307 274 q 322 183 307 200 q 365 165 338 165 z \\\"},\\\"ǽ\\\":{\\\"ha\\\":1197,\\\"x_min\\\":21,\\\"x_max\\\":1176,\\\"o\\\":\\\"m 1176 381 q 1171 293 1176 346 l 721 293 q 767 192 732 218 q 869 167 803 167 q 949 183 908 167 q 1038 232 989 199 l 1149 82 q 843 -28 1014 -28 q 663 5 740 -28 q 533 94 585 38 q 271 -28 447 -28 q 88 38 156 -28 q 21 208 21 104 q 115 397 21 332 q 390 463 208 463 l 443 463 l 443 478 q 421 553 443 533 q 336 572 399 572 q 251 562 303 572 q 144 533 199 551 l 85 711 q 233 754 153 739 q 378 769 313 769 q 607 685 531 769 q 835 769 699 769 q 1011 724 933 769 q 1133 590 1089 678 q 1176 381 1176 501 m 906 458 q 885 560 904 524 q 818 596 867 596 q 749 564 772 596 q 719 449 726 532 l 906 449 l 906 458 m 365 165 q 416 182 394 165 q 460 231 438 199 q 449 306 450 272 l 449 313 l 417 313 q 333 293 360 313 q 307 229 307 274 q 322 183 307 200 q 365 165 338 165 m 794 989 l 446 851 l 372 989 l 692 1189 l 794 989 z \\\"},\\\"ǣ\\\":{\\\"ha\\\":1197,\\\"x_min\\\":21,\\\"x_max\\\":1176,\\\"o\\\":\\\"m 1176 381 q 1171 293 1176 346 l 721 293 q 767 192 732 218 q 869 167 803 167 q 949 183 908 167 q 1038 232 989 199 l 1149 82 q 843 -28 1014 -28 q 663 5 740 -28 q 533 94 585 38 q 271 -28 447 -28 q 88 38 156 -28 q 21 208 21 104 q 115 397 21 332 q 390 463 208 463 l 443 463 l 443 478 q 421 553 443 533 q 336 572 399 572 q 251 562 303 572 q 144 533 199 551 l 85 711 q 233 754 153 739 q 378 769 313 769 q 607 685 531 769 q 835 769 699 769 q 1011 724 933 769 q 1133 590 1089 678 q 1176 381 1176 501 m 906 458 q 885 560 904 524 q 818 596 867 596 q 749 564 772 596 q 719 449 726 532 l 906 449 l 906 458 m 365 165 q 416 182 394 165 q 460 231 438 199 q 449 306 450 272 l 449 313 l 417 313 q 333 293 360 313 q 307 229 307 274 q 322 183 307 200 q 365 165 338 165 m 371 900 l 371 1086 l 822 1086 l 822 900 l 371 900 z \\\"},\\\"b\\\":{\\\"ha\\\":825,\\\"x_min\\\":58,\\\"x_max\\\":801,\\\"o\\\":\\\"m 528 769 q 732 665 663 769 q 801 369 801 560 q 766 165 801 256 q 663 24 731 75 q 504 -28 596 -28 q 395 -3 444 -28 q 313 64 346 21 l 303 0 l 58 0 l 58 1033 l 333 1061 l 333 676 q 417 744 364 718 q 528 769 469 769 m 421 168 q 494 214 468 168 q 519 369 519 260 q 497 531 519 489 q 431 572 474 572 q 333 503 374 572 l 333 222 q 421 168 365 168 z \\\"},\\\"ḃ\\\":{\\\"ha\\\":825,\\\"x_min\\\":58,\\\"x_max\\\":801,\\\"o\\\":\\\"m 528 769 q 732 665 663 769 q 801 369 801 560 q 766 165 801 256 q 663 24 731 75 q 504 -28 596 -28 q 395 -3 444 -28 q 313 64 346 21 l 303 0 l 58 0 l 58 1033 l 333 1061 l 333 676 q 417 744 364 718 q 528 769 469 769 m 421 168 q 494 214 468 168 q 519 369 519 260 q 497 531 519 489 q 431 572 474 572 q 333 503 374 572 l 333 222 q 421 168 365 168 z \\\"},\\\"ḅ\\\":{\\\"ha\\\":825,\\\"x_min\\\":58,\\\"x_max\\\":801,\\\"o\\\":\\\"m 528 769 q 732 665 663 769 q 801 369 801 560 q 766 165 801 256 q 663 24 731 75 q 504 -28 596 -28 q 395 -3 444 -28 q 313 64 346 21 l 303 0 l 58 0 l 58 1033 l 333 1061 l 333 676 q 417 744 364 718 q 528 769 469 769 m 421 168 q 494 214 468 168 q 519 369 519 260 q 497 531 519 489 q 431 572 474 572 q 333 503 374 572 l 333 222 q 421 168 365 168 m 428 -367 q 317 -324 361 -367 q 274 -219 274 -282 q 317 -115 274 -157 q 428 -72 361 -72 q 538 -115 494 -72 q 582 -219 582 -157 q 538 -324 582 -282 q 428 -367 494 -367 z \\\"},\\\"ꞵ\\\":{\\\"ha\\\":847,\\\"x_min\\\":58,\\\"x_max\\\":828,\\\"o\\\":\\\"m 564 564 q 750 493 672 553 q 828 292 828 433 q 788 126 828 199 q 676 13 747 54 q 511 -28 604 -28 q 321 26 404 -28 l 321 -278 l 58 -315 l 58 763 q 103 923 58 856 q 228 1026 149 990 q 408 1061 308 1061 q 592 1026 515 1061 q 708 931 668 992 q 747 794 747 871 q 702 647 747 707 q 564 564 657 588 m 426 179 q 518 213 485 179 q 551 319 551 247 q 513 432 551 401 q 413 463 475 463 l 368 463 l 382 642 l 394 642 q 459 674 438 642 q 481 767 481 706 q 403 874 481 874 q 342 847 364 874 q 321 765 321 819 l 321 199 q 426 179 363 179 z \\\"},\\\"ɓ\\\":{\\\"ha\\\":825,\\\"x_min\\\":58,\\\"x_max\\\":801,\\\"o\\\":\\\"m 521 769 q 731 665 661 769 q 801 369 801 561 q 766 165 801 256 q 663 24 731 75 q 504 -28 596 -28 q 395 -3 444 -28 q 313 64 346 21 l 303 0 l 58 0 l 58 785 q 139 983 58 906 q 372 1061 219 1061 q 490 1047 431 1061 q 590 1010 550 1032 l 518 839 q 410 864 464 864 q 351 843 369 864 q 333 771 333 822 l 333 676 q 416 744 364 718 q 521 769 468 769 m 424 168 q 494 214 469 168 q 519 369 519 260 q 497 531 519 489 q 432 572 474 572 q 333 503 372 572 l 333 222 q 424 168 365 168 z \\\"},\\\"ʭ\\\":{\\\"ha\\\":528,\\\"x_min\\\":42,\\\"x_max\\\":486,\\\"o\\\":\\\"m 42 797 l 486 797 l 486 556 l 329 556 l 329 667 l 199 667 l 199 556 l 42 556 l 42 797 m 42 242 l 486 242 l 486 0 l 329 0 l 329 111 l 199 111 l 199 0 l 42 0 l 42 242 z \\\"},\\\"ʘ\\\":{\\\"ha\\\":1113,\\\"x_min\\\":28,\\\"x_max\\\":1085,\\\"o\\\":\\\"m 557 994 q 834 931 714 994 q 1019 752 954 868 q 1085 485 1085 636 q 1019 222 1085 339 q 833 39 953 106 q 557 -28 713 -28 q 280 36 400 -28 q 94 217 160 100 q 28 485 28 333 q 94 747 28 631 q 281 928 160 863 q 557 994 401 994 m 557 811 q 297 485 297 811 q 557 156 297 156 q 750 235 685 156 q 815 485 815 315 q 745 731 815 650 q 557 811 675 811 m 557 600 q 646 566 611 600 q 681 482 681 532 q 646 399 681 432 q 557 365 611 365 q 468 399 503 365 q 433 482 433 432 q 468 566 433 532 q 557 600 503 600 z \\\"},\\\"ʬ\\\":{\\\"ha\\\":653,\\\"x_min\\\":43,\\\"x_max\\\":611,\\\"o\\\":\\\"m 532 556 l 374 556 l 333 825 l 286 556 l 132 556 l 43 929 l 156 929 l 214 636 l 263 929 l 407 929 l 454 635 l 504 929 l 611 929 l 532 556 m 532 0 l 374 0 l 333 269 l 286 0 l 132 0 l 43 374 l 156 374 l 214 81 l 263 374 l 407 374 l 454 79 l 504 374 l 611 374 l 532 0 z \\\"},\\\"ƀ\\\":{\\\"ha\\\":839,\\\"x_min\\\":0,\\\"x_max\\\":815,\\\"o\\\":\\\"m 542 769 q 746 665 676 769 q 815 369 815 560 q 780 165 815 256 q 677 24 744 75 q 518 -28 610 -28 q 409 -3 458 -28 q 326 64 360 21 l 317 0 l 72 0 l 72 819 l 0 819 l 0 967 l 72 967 l 72 1033 l 347 1061 l 347 967 l 517 967 l 517 819 l 347 819 l 347 676 q 431 744 378 718 q 542 769 483 769 m 435 168 q 508 214 482 168 q 533 369 533 260 q 510 531 533 489 q 444 572 488 572 q 347 503 388 572 l 347 222 q 435 168 379 168 z \\\"},\\\"ƃ\\\":{\\\"ha\\\":825,\\\"x_min\\\":58,\\\"x_max\\\":801,\\\"o\\\":\\\"m 521 742 q 731 640 661 742 q 801 356 801 538 q 766 161 801 249 q 663 23 731 74 q 504 -28 596 -28 q 395 -3 444 -28 q 313 64 346 21 l 303 0 l 58 0 l 58 1033 l 631 1033 l 603 840 l 333 840 l 333 649 q 416 716 364 690 q 521 742 468 742 m 424 168 q 519 356 519 168 q 497 505 519 465 q 432 544 474 544 q 333 475 372 544 l 333 222 q 424 168 365 168 z \\\"},\\\"c\\\":{\\\"ha\\\":665,\\\"x_min\\\":24,\\\"x_max\\\":679,\\\"o\\\":\\\"m 410 769 q 679 671 568 769 l 565 511 q 435 563 501 563 q 340 518 371 563 q 310 365 310 474 q 341 223 310 261 q 432 185 372 185 q 492 195 464 185 q 561 232 519 206 l 679 64 q 417 -28 567 -28 q 207 22 296 -28 q 71 160 118 71 q 24 365 24 250 q 72 574 24 482 q 207 717 119 665 q 410 769 294 769 z \\\"},\\\"ć\\\":{\\\"ha\\\":665,\\\"x_min\\\":24,\\\"x_max\\\":679,\\\"o\\\":\\\"m 410 769 q 679 671 568 769 l 565 511 q 435 563 501 563 q 340 518 371 563 q 310 365 310 474 q 341 223 310 261 q 432 185 372 185 q 492 195 464 185 q 561 232 519 206 l 679 64 q 417 -28 567 -28 q 207 22 296 -28 q 71 160 118 71 q 24 365 24 250 q 72 574 24 482 q 207 717 119 665 q 410 769 294 769 m 603 989 l 254 851 l 181 989 l 500 1189 l 603 989 z \\\"},\\\"č\\\":{\\\"ha\\\":665,\\\"x_min\\\":24,\\\"x_max\\\":689,\\\"o\\\":\\\"m 410 769 q 679 671 568 769 l 565 511 q 435 563 501 563 q 340 518 371 563 q 310 365 310 474 q 341 223 310 261 q 432 185 372 185 q 492 195 464 185 q 561 232 519 206 l 679 64 q 417 -28 567 -28 q 207 22 296 -28 q 71 160 118 71 q 24 365 24 250 q 72 574 24 482 q 207 717 119 665 q 410 769 294 769 m 689 1046 l 488 836 l 324 836 l 122 1046 l 215 1153 l 406 1019 l 596 1153 l 689 1046 z \\\"},\\\"ç\\\":{\\\"ha\\\":665,\\\"x_min\\\":24,\\\"x_max\\\":679,\\\"o\\\":\\\"m 679 64 q 463 -25 583 -14 l 463 -60 q 615 -210 615 -79 q 554 -333 615 -285 q 388 -382 493 -382 q 291 -369 336 -382 q 214 -335 246 -356 l 274 -215 q 363 -240 319 -240 q 425 -207 425 -240 q 394 -176 425 -185 q 294 -167 364 -167 l 313 -17 q 100 115 176 13 q 24 365 24 217 q 72 574 24 482 q 207 717 119 665 q 410 769 294 769 q 679 671 568 769 l 565 511 q 435 563 501 563 q 340 518 371 563 q 310 365 310 474 q 341 223 310 261 q 432 185 372 185 q 492 195 464 185 q 561 232 519 206 l 679 64 z \\\"},\\\"ĉ\\\":{\\\"ha\\\":665,\\\"x_min\\\":24,\\\"x_max\\\":689,\\\"o\\\":\\\"m 410 769 q 679 671 568 769 l 565 511 q 435 563 501 563 q 340 518 371 563 q 310 365 310 474 q 341 223 310 261 q 432 185 372 185 q 492 195 464 185 q 561 232 519 206 l 679 64 q 417 -28 567 -28 q 207 22 296 -28 q 71 160 118 71 q 24 365 24 250 q 72 574 24 482 q 207 717 119 665 q 410 769 294 769 m 122 957 l 324 1167 l 488 1167 l 689 957 l 596 850 l 406 983 l 215 850 l 122 957 z \\\"},\\\"ɕ\\\":{\\\"ha\\\":707,\\\"x_min\\\":24,\\\"x_max\\\":714,\\\"o\\\":\\\"m 529 371 q 661 324 608 371 q 714 194 714 278 q 635 28 714 83 q 438 -28 557 -28 q 340 -19 381 -28 l 293 -125 l 169 -78 l 217 22 q 74 156 124 67 q 24 365 24 246 q 72 574 24 482 q 207 717 119 665 q 410 769 294 769 q 679 671 568 769 l 565 511 q 435 563 501 563 q 340 518 371 563 q 310 365 310 474 q 325 244 310 296 q 408 342 358 313 q 529 371 458 371 m 472 160 q 536 204 536 160 q 501 238 536 238 q 419 167 454 238 q 472 160 447 160 z \\\"},\\\"ċ\\\":{\\\"ha\\\":665,\\\"x_min\\\":24,\\\"x_max\\\":679,\\\"o\\\":\\\"m 410 769 q 679 671 568 769 l 565 511 q 435 563 501 563 q 340 518 371 563 q 310 365 310 474 q 341 223 310 261 q 432 185 372 185 q 492 195 464 185 q 561 232 519 206 l 679 64 q 417 -28 567 -28 q 207 22 296 -28 q 71 160 118 71 q 24 365 24 250 q 72 574 24 482 q 207 717 119 665 q 410 769 294 769 m 406 1151 q 516 1109 472 1151 q 560 1004 560 1067 q 516 899 560 942 q 406 857 472 857 q 295 899 339 857 q 251 1004 251 942 q 295 1109 251 1067 q 406 1151 339 1151 z \\\"},\\\"ꭓ\\\":{\\\"ha\\\":724,\\\"x_min\\\":-28,\\\"x_max\\\":751,\\\"o\\\":\\\"m 751 -299 l 476 -299 l 364 39 l 253 -299 l -28 -287 l 222 250 l 21 742 l 289 742 l 367 431 l 443 742 l 718 742 l 501 257 l 751 -299 z \\\"},\\\"ƈ\\\":{\\\"ha\\\":665,\\\"x_min\\\":24,\\\"x_max\\\":901,\\\"o\\\":\\\"m 697 1061 q 901 1010 811 1061 l 829 840 q 740 864 779 864 q 694 846 708 864 q 679 789 679 828 l 679 671 l 581 532 q 440 563 515 563 q 342 518 374 563 q 310 365 310 474 q 341 223 310 261 q 432 185 372 185 q 492 195 464 185 q 561 232 519 206 l 679 64 q 417 -28 567 -28 q 207 22 296 -28 q 71 160 118 71 q 24 365 24 250 q 69 573 24 481 q 194 717 115 665 q 368 769 274 769 q 446 760 404 769 l 446 813 q 508 996 446 931 q 697 1061 569 1061 z \\\"},\\\"ʗ\\\":{\\\"ha\\\":672,\\\"x_min\\\":31,\\\"x_max\\\":686,\\\"o\\\":\\\"m 438 769 q 686 671 585 769 l 576 518 q 456 563 513 563 q 351 484 385 563 q 317 222 317 406 q 349 -29 317 44 q 444 -103 382 -103 q 503 -92 476 -103 q 568 -57 531 -82 l 686 -224 q 436 -315 574 -315 q 135 -174 240 -315 q 31 222 31 -32 q 79 513 31 390 q 219 703 128 636 q 438 769 311 769 z \\\"},\\\"ȼ\\\":{\\\"ha\\\":665,\\\"x_min\\\":24,\\\"x_max\\\":679,\\\"o\\\":\\\"m 432 185 q 492 195 464 185 q 561 232 519 206 l 679 64 q 417 -28 567 -28 q 363 -25 396 -28 l 340 -107 l 253 -86 l 274 -7 q 90 130 156 32 q 24 365 24 228 q 72 574 24 482 q 207 717 119 665 q 410 769 294 769 q 478 765 444 769 l 497 839 l 583 818 l 564 743 q 679 671 628 717 l 565 511 q 511 546 540 532 l 417 185 l 432 185 m 310 365 q 336 231 310 275 l 424 563 q 338 515 367 560 q 310 365 310 469 z \\\"},\\\"d\\\":{\\\"ha\\\":828,\\\"x_min\\\":24,\\\"x_max\\\":769,\\\"o\\\":\\\"m 769 1033 l 769 0 l 525 0 l 515 76 q 306 -28 436 -28 q 94 79 165 -28 q 24 375 24 186 q 63 578 24 489 q 172 719 101 668 q 333 769 242 769 q 494 711 429 769 l 494 1061 l 769 1033 m 399 169 q 494 235 457 169 l 494 532 q 456 563 475 553 q 413 574 436 574 q 335 526 364 574 q 306 372 306 478 q 330 210 306 250 q 399 169 354 169 z \\\"},\\\"ð\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":781,\\\"o\\\":\\\"m 508 936 q 717 703 654 836 q 781 394 781 571 q 737 183 781 279 q 606 29 693 86 q 397 -28 519 -28 q 206 15 290 -28 q 72 136 121 57 q 24 324 24 215 q 65 503 24 424 q 173 626 106 582 q 318 669 240 669 q 410 657 369 669 q 489 621 450 644 q 440 711 469 672 q 363 788 411 750 l 300 724 l 131 800 l 193 867 q 88 888 133 881 l 140 1060 q 339 1015 243 1046 l 444 1126 l 579 1008 l 508 936 m 403 168 q 479 210 458 168 q 500 347 500 251 l 500 453 q 401 483 457 483 q 303 326 303 483 q 328 204 303 240 q 403 168 353 168 z \\\"},\\\"ȸ\\\":{\\\"ha\\\":1206,\\\"x_min\\\":24,\\\"x_max\\\":1182,\\\"o\\\":\\\"m 929 769 q 1117 664 1051 769 q 1182 369 1182 558 q 1147 166 1182 257 q 1047 24 1111 75 q 899 -28 983 -28 q 799 -2 846 -28 q 722 72 753 24 l 711 0 l 497 0 l 486 76 q 292 -28 410 -28 q 92 80 161 -28 q 24 375 24 188 q 60 578 24 489 q 163 719 97 668 q 313 769 229 769 q 397 750 357 769 q 467 690 436 731 l 467 1033 l 742 1061 l 742 675 q 823 744 774 718 q 929 769 872 769 m 388 169 q 427 186 406 169 q 467 235 449 203 l 467 526 q 393 574 432 574 q 330 526 354 574 q 306 372 306 478 q 328 211 306 253 q 388 169 351 169 m 818 168 q 877 215 854 168 q 900 369 900 261 q 879 530 900 488 q 825 572 858 572 q 742 513 781 572 l 742 228 q 778 184 758 200 q 818 168 799 168 z \\\"},\\\"ď\\\":{\\\"ha\\\":1026,\\\"x_min\\\":24,\\\"x_max\\\":1054,\\\"o\\\":\\\"m 769 1033 l 769 0 l 525 0 l 515 76 q 306 -28 436 -28 q 94 79 165 -28 q 24 375 24 186 q 63 578 24 489 q 172 719 101 668 q 333 769 242 769 q 494 711 429 769 l 494 1061 l 769 1033 m 399 169 q 494 235 457 169 l 494 532 q 456 563 475 553 q 413 574 436 574 q 335 526 364 574 q 306 372 306 478 q 330 210 306 250 q 399 169 354 169 m 1054 1032 l 858 1061 l 824 729 l 974 707 l 1054 1032 z \\\"},\\\"ḓ\\\":{\\\"ha\\\":828,\\\"x_min\\\":24,\\\"x_max\\\":769,\\\"o\\\":\\\"m 769 1033 l 769 0 l 525 0 l 515 76 q 306 -28 436 -28 q 94 79 165 -28 q 24 375 24 186 q 63 578 24 489 q 172 719 101 668 q 333 769 242 769 q 494 711 429 769 l 494 1061 l 769 1033 m 399 169 q 494 235 457 169 l 494 532 q 456 563 475 553 q 413 574 436 574 q 335 526 364 574 q 306 372 306 478 q 330 210 306 250 q 399 169 354 169 m 138 -293 l 339 -83 l 503 -83 l 704 -293 l 611 -400 l 421 -267 l 231 -400 l 138 -293 z \\\"},\\\"đ\\\":{\\\"ha\\\":849,\\\"x_min\\\":24,\\\"x_max\\\":849,\\\"o\\\":\\\"m 849 967 l 849 819 l 769 819 l 769 0 l 525 0 l 515 76 q 306 -28 436 -28 q 94 79 165 -28 q 24 375 24 186 q 63 578 24 489 q 172 719 101 668 q 333 769 242 769 q 494 711 429 769 l 494 819 l 329 819 l 329 967 l 494 967 l 494 1061 l 769 1033 l 769 967 l 849 967 m 399 169 q 494 235 457 169 l 494 532 q 456 563 475 553 q 413 574 436 574 q 335 526 364 574 q 306 372 306 478 q 330 210 306 250 q 399 169 354 169 z \\\"},\\\"ȡ\\\":{\\\"ha\\\":1131,\\\"x_min\\\":24,\\\"x_max\\\":1131,\\\"o\\\":\\\"m 953 358 q 1080 313 1029 358 q 1131 190 1131 268 q 1051 26 1131 81 q 847 -28 972 -28 q 790 -25 826 -28 l 744 -125 l 621 -78 l 663 8 q 542 113 586 43 q 440 8 497 44 q 306 -28 383 -28 q 94 79 165 -28 q 24 375 24 186 q 62 580 24 490 q 172 719 100 669 q 340 769 243 769 q 423 754 382 769 q 494 711 464 739 l 494 1061 l 769 1033 l 769 306 q 775 239 769 263 q 848 331 807 303 q 953 358 889 358 m 401 169 q 499 242 458 169 q 494 306 494 271 l 494 532 q 456 563 474 553 q 414 574 438 574 q 335 526 364 574 q 306 372 306 478 q 318 243 306 288 q 351 184 331 199 q 401 169 371 169 m 899 160 q 938 169 922 160 q 953 196 953 178 q 945 217 953 210 q 924 225 938 225 q 895 212 907 225 q 868 161 883 199 q 899 160 878 160 z \\\"},\\\"ḋ\\\":{\\\"ha\\\":828,\\\"x_min\\\":24,\\\"x_max\\\":769,\\\"o\\\":\\\"m 769 1033 l 769 0 l 525 0 l 515 76 q 306 -28 436 -28 q 94 79 165 -28 q 24 375 24 186 q 63 578 24 489 q 172 719 101 668 q 333 769 242 769 q 494 711 429 769 l 494 1061 l 769 1033 m 399 169 q 494 235 457 169 l 494 532 q 456 563 475 553 q 413 574 436 574 q 335 526 364 574 q 306 372 306 478 q 330 210 306 250 q 399 169 354 169 z \\\"},\\\"ḍ\\\":{\\\"ha\\\":828,\\\"x_min\\\":24,\\\"x_max\\\":769,\\\"o\\\":\\\"m 769 1033 l 769 0 l 525 0 l 515 76 q 306 -28 436 -28 q 94 79 165 -28 q 24 375 24 186 q 63 578 24 489 q 172 719 101 668 q 333 769 242 769 q 494 711 429 769 l 494 1061 l 769 1033 m 399 169 q 494 235 457 169 l 494 532 q 456 563 475 553 q 413 574 436 574 q 335 526 364 574 q 306 372 306 478 q 330 210 306 250 q 399 169 354 169 m 421 -367 q 310 -324 354 -367 q 267 -219 267 -282 q 310 -115 267 -157 q 421 -72 354 -72 q 531 -115 488 -72 q 575 -219 575 -157 q 531 -324 575 -282 q 421 -367 488 -367 z \\\"},\\\"ƍ\\\":{\\\"ha\\\":800,\\\"x_min\\\":24,\\\"x_max\\\":776,\\\"o\\\":\\\"m 563 111 q 675 17 647 63 q 703 -90 703 -28 q 622 -252 703 -189 q 372 -315 540 -315 q 215 -290 286 -315 q 96 -225 143 -265 l 217 -86 q 357 -131 288 -131 q 444 -82 444 -131 q 437 -51 444 -64 q 403 -25 429 -39 q 322 11 378 -11 q 93 160 163 74 q 24 393 24 247 q 70 596 24 511 q 201 725 117 681 q 400 769 286 769 q 676 673 576 769 q 776 406 776 576 q 724 235 776 310 q 563 111 671 160 m 306 392 q 314 293 306 328 q 349 233 322 258 q 431 179 375 208 q 485 271 472 222 q 497 392 497 319 q 474 530 497 488 q 401 572 451 572 q 329 530 353 572 q 306 392 306 488 z \\\"},\\\"ʤ\\\":{\\\"ha\\\":1465,\\\"x_min\\\":24,\\\"x_max\\\":1458,\\\"o\\\":\\\"m 769 1033 l 769 0 l 525 0 l 515 76 q 306 -28 436 -28 q 94 79 165 -28 q 24 375 24 186 q 63 578 24 489 q 172 719 101 668 q 333 769 242 769 q 494 711 429 769 l 494 1061 l 769 1033 m 399 169 q 494 235 457 169 l 494 532 q 456 563 475 553 q 413 574 436 574 q 335 526 364 574 q 306 372 306 478 q 330 210 306 250 q 399 169 354 169 m 1176 299 q 1385 215 1313 285 q 1458 15 1458 144 q 1411 -153 1458 -78 q 1274 -272 1364 -228 q 1061 -315 1185 -315 q 713 -162 838 -315 l 854 -25 q 947 -90 904 -69 q 1042 -110 990 -110 q 1140 -74 1101 -110 q 1178 35 1178 -37 q 1140 124 1178 97 q 1029 151 1101 151 l 889 151 l 889 300 l 1097 542 l 775 542 l 775 742 l 1407 742 l 1407 558 l 1176 299 z \\\"},\\\"ɗ\\\":{\\\"ha\\\":828,\\\"x_min\\\":24,\\\"x_max\\\":992,\\\"o\\\":\\\"m 788 1061 q 992 1010 901 1061 l 919 840 q 831 864 869 864 q 784 846 799 864 q 769 789 769 828 l 769 0 l 525 0 l 515 76 q 306 -28 436 -28 q 94 79 165 -28 q 24 375 24 186 q 62 580 24 490 q 172 719 100 669 q 340 769 243 769 q 423 754 382 769 q 494 711 464 739 l 494 785 q 569 983 494 906 q 788 1061 644 1061 m 401 169 q 494 235 457 169 l 494 532 q 456 563 474 553 q 414 574 438 574 q 335 526 364 574 q 306 372 306 478 q 318 243 306 288 q 351 184 331 199 q 401 169 371 169 z \\\"},\\\"ḏ\\\":{\\\"ha\\\":828,\\\"x_min\\\":24,\\\"x_max\\\":769,\\\"o\\\":\\\"m 769 1033 l 769 0 l 525 0 l 515 76 q 306 -28 436 -28 q 94 79 165 -28 q 24 375 24 186 q 63 578 24 489 q 172 719 101 668 q 333 769 242 769 q 494 711 429 769 l 494 1061 l 769 1033 m 399 169 q 494 235 457 169 l 494 532 q 456 563 475 553 q 413 574 436 574 q 335 526 364 574 q 306 372 306 478 q 330 210 306 250 q 399 169 354 169 z \\\"},\\\"ɖ\\\":{\\\"ha\\\":828,\\\"x_min\\\":24,\\\"x_max\\\":1025,\\\"o\\\":\\\"m 1025 -253 q 806 -315 939 -315 q 578 -240 663 -315 q 494 -22 494 -165 l 494 53 q 306 -28 419 -28 q 94 79 165 -28 q 24 375 24 186 q 62 580 24 490 q 172 719 100 669 q 340 769 243 769 q 423 754 382 769 q 494 711 464 739 l 494 1061 l 769 1033 l 769 -47 q 788 -102 769 -83 q 842 -121 807 -121 q 888 -115 868 -121 q 936 -96 907 -110 l 1025 -253 m 401 169 q 494 235 457 169 l 494 532 q 456 563 474 553 q 414 574 438 574 q 335 526 364 574 q 306 372 306 478 q 318 243 306 288 q 351 184 331 199 q 401 169 371 169 z \\\"},\\\"ƌ\\\":{\\\"ha\\\":828,\\\"x_min\\\":24,\\\"x_max\\\":769,\\\"o\\\":\\\"m 769 0 l 525 0 l 515 76 q 306 -28 436 -28 q 94 77 165 -28 q 24 361 24 182 q 62 556 24 469 q 172 692 100 643 q 340 742 244 742 q 423 726 382 742 q 494 683 464 711 l 494 840 l 211 840 l 211 1033 l 769 1033 l 769 0 m 401 169 q 494 235 457 169 l 494 504 q 456 535 474 525 q 414 546 438 546 q 335 501 365 546 q 306 358 306 456 q 331 208 306 246 q 401 169 356 169 z \\\"},\\\"ǳ\\\":{\\\"ha\\\":1476,\\\"x_min\\\":24,\\\"x_max\\\":1469,\\\"o\\\":\\\"m 769 1033 l 769 0 l 525 0 l 515 76 q 306 -28 436 -28 q 94 79 165 -28 q 24 375 24 186 q 63 578 24 489 q 172 719 101 668 q 333 769 242 769 q 494 711 429 769 l 494 1061 l 769 1033 m 399 169 q 494 235 457 169 l 494 532 q 456 563 475 553 q 413 574 436 574 q 335 526 364 574 q 306 372 306 478 q 330 210 306 250 q 399 169 354 169 m 1460 551 l 1156 203 l 1469 203 l 1446 0 l 835 0 l 835 192 l 1143 542 l 863 542 l 863 742 l 1460 742 l 1460 551 z \\\"},\\\"ʣ\\\":{\\\"ha\\\":1413,\\\"x_min\\\":24,\\\"x_max\\\":1406,\\\"o\\\":\\\"m 1406 203 l 1382 0 l 771 0 l 771 185 l 1093 542 l 769 542 l 769 0 l 525 0 l 515 76 q 306 -28 436 -28 q 94 79 165 -28 q 24 375 24 186 q 63 578 24 489 q 172 719 101 668 q 333 769 242 769 q 494 711 429 769 l 494 1061 l 769 1033 l 769 742 l 1396 742 l 1396 551 l 1078 203 l 1406 203 m 399 169 q 494 235 457 169 l 494 532 q 456 563 475 553 q 413 574 436 574 q 335 526 364 574 q 306 372 306 478 q 330 210 306 250 q 399 169 354 169 z \\\"},\\\"ǆ\\\":{\\\"ha\\\":1476,\\\"x_min\\\":24,\\\"x_max\\\":1469,\\\"o\\\":\\\"m 769 1033 l 769 0 l 525 0 l 515 76 q 306 -28 436 -28 q 94 79 165 -28 q 24 375 24 186 q 63 578 24 489 q 172 719 101 668 q 333 769 242 769 q 494 711 429 769 l 494 1061 l 769 1033 m 399 169 q 494 235 457 169 l 494 532 q 456 563 475 553 q 413 574 436 574 q 335 526 364 574 q 306 372 306 478 q 330 210 306 250 q 399 169 354 169 z \\\"},\\\"ʥ\\\":{\\\"ha\\\":1596,\\\"x_min\\\":24,\\\"x_max\\\":1617,\\\"o\\\":\\\"m 1426 413 q 1563 363 1510 413 q 1617 229 1617 314 q 1540 59 1617 119 q 1303 0 1464 -1 q 1294 -137 1294 -42 l 1294 -183 l 1149 -183 q 1157 0 1149 -75 l 771 0 l 771 192 l 1093 542 l 769 542 l 769 0 l 525 0 l 515 76 q 306 -28 436 -28 q 94 79 165 -28 q 24 375 24 186 q 63 578 24 489 q 172 719 101 668 q 333 769 242 769 q 494 711 429 769 l 494 1061 l 769 1033 l 769 742 l 1396 742 l 1396 565 l 1064 203 l 1185 203 q 1279 364 1218 315 q 1426 413 1340 413 m 399 169 q 494 235 457 169 l 494 532 q 456 563 475 553 q 413 574 436 574 q 335 526 364 574 q 306 372 306 478 q 330 210 306 250 q 399 169 354 169 m 1367 203 q 1439 247 1439 203 q 1430 270 1439 261 q 1404 279 1421 279 q 1329 203 1351 279 l 1367 203 z \\\"},\\\"e\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":757,\\\"o\\\":\\\"m 757 381 q 751 293 757 346 l 301 293 q 348 192 313 218 q 450 167 383 167 q 529 183 489 167 q 618 232 569 199 l 729 82 q 424 -28 594 -28 q 125 81 226 -28 q 24 369 24 190 q 66 572 24 481 q 192 716 108 663 q 393 769 275 769 q 585 724 503 769 q 712 590 667 678 q 757 381 757 503 m 486 458 q 466 560 485 524 q 399 596 447 596 q 330 564 353 596 q 300 449 307 532 l 486 449 l 486 458 z \\\"},\\\"é\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":757,\\\"o\\\":\\\"m 757 381 q 751 293 757 346 l 301 293 q 348 192 313 218 q 450 167 383 167 q 529 183 489 167 q 618 232 569 199 l 729 82 q 424 -28 594 -28 q 125 81 226 -28 q 24 369 24 190 q 66 572 24 481 q 192 716 108 663 q 393 769 275 769 q 585 724 503 769 q 712 590 667 678 q 757 381 757 503 m 486 458 q 466 560 485 524 q 399 596 447 596 q 330 564 353 596 q 300 449 307 532 l 486 449 l 486 458 m 593 989 l 244 851 l 171 989 l 490 1189 l 593 989 z \\\"},\\\"ĕ\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":757,\\\"o\\\":\\\"m 757 381 q 751 293 757 346 l 301 293 q 348 192 313 218 q 450 167 383 167 q 529 183 489 167 q 618 232 569 199 l 729 82 q 424 -28 594 -28 q 125 81 226 -28 q 24 369 24 190 q 66 572 24 481 q 192 716 108 663 q 393 769 275 769 q 585 724 503 769 q 712 590 667 678 q 757 381 757 503 m 486 458 q 466 560 485 524 q 399 596 447 596 q 330 564 353 596 q 300 449 307 532 l 486 449 l 486 458 m 396 869 q 213 947 278 869 q 139 1142 149 1025 l 282 1165 q 323 1085 294 1114 q 396 1056 351 1056 q 469 1085 440 1056 q 510 1165 497 1114 l 653 1142 q 578 947 643 1025 q 396 869 514 869 z \\\"},\\\"ě\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":757,\\\"o\\\":\\\"m 757 381 q 751 293 757 346 l 301 293 q 348 192 313 218 q 450 167 383 167 q 529 183 489 167 q 618 232 569 199 l 729 82 q 424 -28 594 -28 q 125 81 226 -28 q 24 369 24 190 q 66 572 24 481 q 192 716 108 663 q 393 769 275 769 q 585 724 503 769 q 712 590 667 678 q 757 381 757 503 m 486 458 q 466 560 485 524 q 399 596 447 596 q 330 564 353 596 q 300 449 307 532 l 486 449 l 486 458 m 679 1046 l 478 836 l 314 836 l 113 1046 l 206 1153 l 396 1019 l 586 1153 l 679 1046 z \\\"},\\\"ȩ\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":757,\\\"o\\\":\\\"m 757 381 q 751 293 757 346 l 301 293 q 348 192 313 218 q 450 167 383 167 q 529 183 489 167 q 618 232 569 199 l 729 82 q 486 -24 621 -7 l 486 -60 q 639 -210 639 -79 q 578 -333 639 -285 q 411 -382 517 -382 q 315 -369 360 -382 q 238 -335 269 -356 l 297 -215 q 386 -240 343 -240 q 449 -207 449 -240 q 418 -176 449 -185 q 318 -167 388 -167 l 336 -21 q 103 107 182 3 q 24 369 24 211 q 66 572 24 481 q 192 716 108 663 q 393 769 275 769 q 585 724 503 769 q 712 590 667 678 q 757 381 757 503 m 486 458 q 466 560 485 524 q 399 596 447 596 q 330 564 353 596 q 300 449 307 532 l 486 449 l 486 458 z \\\"},\\\"ê\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":757,\\\"o\\\":\\\"m 757 381 q 751 293 757 346 l 301 293 q 348 192 313 218 q 450 167 383 167 q 529 183 489 167 q 618 232 569 199 l 729 82 q 424 -28 594 -28 q 125 81 226 -28 q 24 369 24 190 q 66 572 24 481 q 192 716 108 663 q 393 769 275 769 q 585 724 503 769 q 712 590 667 678 q 757 381 757 503 m 486 458 q 466 560 485 524 q 399 596 447 596 q 330 564 353 596 q 300 449 307 532 l 486 449 l 486 458 m 113 957 l 314 1167 l 478 1167 l 679 957 l 586 850 l 396 983 l 206 850 l 113 957 z \\\"},\\\"ế\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":886,\\\"o\\\":\\\"m 757 381 q 751 293 757 346 l 301 293 q 348 192 313 218 q 450 167 383 167 q 529 183 489 167 q 618 232 569 199 l 729 82 q 424 -28 594 -28 q 125 81 226 -28 q 24 369 24 190 q 66 572 24 481 q 192 716 108 663 q 393 769 275 769 q 585 724 503 769 q 712 590 667 678 q 757 381 757 503 m 486 458 q 466 560 485 524 q 399 596 447 596 q 330 564 353 596 q 300 449 307 532 l 486 449 l 486 458 z \\\"},\\\"ệ\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":757,\\\"o\\\":\\\"m 757 381 q 751 293 757 346 l 301 293 q 348 192 313 218 q 450 167 383 167 q 529 183 489 167 q 618 232 569 199 l 729 82 q 424 -28 594 -28 q 125 81 226 -28 q 24 369 24 190 q 66 572 24 481 q 192 716 108 663 q 393 769 275 769 q 585 724 503 769 q 712 590 667 678 q 757 381 757 503 m 486 458 q 466 560 485 524 q 399 596 447 596 q 330 564 353 596 q 300 449 307 532 l 486 449 l 486 458 m 113 957 l 314 1167 l 478 1167 l 679 957 l 586 850 l 396 983 l 206 850 l 113 957 m 408 -367 q 298 -324 342 -367 q 254 -219 254 -282 q 298 -115 254 -157 q 408 -72 342 -72 q 519 -115 475 -72 q 563 -219 563 -157 q 519 -324 563 -282 q 408 -367 475 -367 z \\\"},\\\"ề\\\":{\\\"ha\\\":778,\\\"x_min\\\":-92,\\\"x_max\\\":757,\\\"o\\\":\\\"m 757 381 q 751 293 757 346 l 301 293 q 348 192 313 218 q 450 167 383 167 q 529 183 489 167 q 618 232 569 199 l 729 82 q 424 -28 594 -28 q 125 81 226 -28 q 24 369 24 190 q 66 572 24 481 q 192 716 108 663 q 393 769 275 769 q 585 724 503 769 q 712 590 667 678 q 757 381 757 503 m 486 458 q 466 560 485 524 q 399 596 447 596 q 330 564 353 596 q 300 449 307 532 l 486 449 l 486 458 z \\\"},\\\"ể\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":806,\\\"o\\\":\\\"m 757 381 q 751 293 757 346 l 301 293 q 348 192 313 218 q 450 167 383 167 q 529 183 489 167 q 618 232 569 199 l 729 82 q 424 -28 594 -28 q 125 81 226 -28 q 24 369 24 190 q 66 572 24 481 q 192 716 108 663 q 393 769 275 769 q 585 724 503 769 q 712 590 667 678 q 757 381 757 503 m 486 458 q 466 560 485 524 q 399 596 447 596 q 330 564 353 596 q 300 449 307 532 l 486 449 l 486 458 z \\\"},\\\"ễ\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":757,\\\"o\\\":\\\"m 757 381 q 751 293 757 346 l 301 293 q 348 192 313 218 q 450 167 383 167 q 529 183 489 167 q 618 232 569 199 l 729 82 q 424 -28 594 -28 q 125 81 226 -28 q 24 369 24 190 q 66 572 24 481 q 192 716 108 663 q 393 769 275 769 q 585 724 503 769 q 712 590 667 678 q 757 381 757 503 m 486 458 q 466 560 485 524 q 399 596 447 596 q 330 564 353 596 q 300 449 307 532 l 486 449 l 486 458 z \\\"},\\\"ȅ\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":757,\\\"o\\\":\\\"m 757 381 q 751 293 757 346 l 301 293 q 348 192 313 218 q 450 167 383 167 q 529 183 489 167 q 618 232 569 199 l 729 82 q 424 -28 594 -28 q 125 81 226 -28 q 24 369 24 190 q 66 572 24 481 q 192 716 108 663 q 393 769 275 769 q 585 724 503 769 q 712 590 667 678 q 757 381 757 503 m 486 458 q 466 560 485 524 q 399 596 447 596 q 330 564 353 596 q 300 449 307 532 l 486 449 l 486 458 m 371 925 l 238 861 l 56 1133 l 226 1218 l 371 925 m 624 921 l 488 867 l 317 1140 l 490 1218 l 624 921 z \\\"},\\\"ë\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":757,\\\"o\\\":\\\"m 757 381 q 751 293 757 346 l 301 293 q 348 192 313 218 q 450 167 383 167 q 529 183 489 167 q 618 232 569 199 l 729 82 q 424 -28 594 -28 q 125 81 226 -28 q 24 369 24 190 q 66 572 24 481 q 192 716 108 663 q 393 769 275 769 q 585 724 503 769 q 712 590 667 678 q 757 381 757 503 m 486 458 q 466 560 485 524 q 399 596 447 596 q 330 564 353 596 q 300 449 307 532 l 486 449 l 486 458 m 225 1136 q 319 1099 281 1136 q 357 1008 357 1061 q 319 917 357 954 q 225 879 281 879 q 132 917 171 879 q 93 1008 93 954 q 132 1099 93 1061 q 225 1136 171 1136 m 565 1136 q 659 1099 621 1136 q 697 1008 697 1061 q 659 917 697 954 q 565 879 621 879 q 472 917 511 879 q 433 1008 433 954 q 472 1099 433 1061 q 565 1136 511 1136 z \\\"},\\\"ė\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":757,\\\"o\\\":\\\"m 757 381 q 751 293 757 346 l 301 293 q 348 192 313 218 q 450 167 383 167 q 529 183 489 167 q 618 232 569 199 l 729 82 q 424 -28 594 -28 q 125 81 226 -28 q 24 369 24 190 q 66 572 24 481 q 192 716 108 663 q 393 769 275 769 q 585 724 503 769 q 712 590 667 678 q 757 381 757 503 m 486 458 q 466 560 485 524 q 399 596 447 596 q 330 564 353 596 q 300 449 307 532 l 486 449 l 486 458 m 396 1151 q 506 1109 463 1151 q 550 1004 550 1067 q 506 899 550 942 q 396 857 463 857 q 285 899 329 857 q 242 1004 242 942 q 285 1109 242 1067 q 396 1151 329 1151 z \\\"},\\\"ẹ\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":757,\\\"o\\\":\\\"m 757 381 q 751 293 757 346 l 301 293 q 348 192 313 218 q 450 167 383 167 q 529 183 489 167 q 618 232 569 199 l 729 82 q 424 -28 594 -28 q 125 81 226 -28 q 24 369 24 190 q 66 572 24 481 q 192 716 108 663 q 393 769 275 769 q 585 724 503 769 q 712 590 667 678 q 757 381 757 503 m 486 458 q 466 560 485 524 q 399 596 447 596 q 330 564 353 596 q 300 449 307 532 l 486 449 l 486 458 m 408 -367 q 298 -324 342 -367 q 254 -219 254 -282 q 298 -115 254 -157 q 408 -72 342 -72 q 519 -115 475 -72 q 563 -219 563 -157 q 519 -324 563 -282 q 408 -367 475 -367 z \\\"},\\\"è\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":757,\\\"o\\\":\\\"m 757 381 q 751 293 757 346 l 301 293 q 348 192 313 218 q 450 167 383 167 q 529 183 489 167 q 618 232 569 199 l 729 82 q 424 -28 594 -28 q 125 81 226 -28 q 24 369 24 190 q 66 572 24 481 q 192 716 108 663 q 393 769 275 769 q 585 724 503 769 q 712 590 667 678 q 757 381 757 503 m 486 458 q 466 560 485 524 q 399 596 447 596 q 330 564 353 596 q 300 449 307 532 l 486 449 l 486 458 m 621 989 l 547 851 l 199 989 l 301 1189 l 621 989 z \\\"},\\\"ẻ\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":757,\\\"o\\\":\\\"m 757 381 q 751 293 757 346 l 301 293 q 348 192 313 218 q 450 167 383 167 q 529 183 489 167 q 618 232 569 199 l 729 82 q 424 -28 594 -28 q 125 81 226 -28 q 24 369 24 190 q 66 572 24 481 q 192 716 108 663 q 393 769 275 769 q 585 724 503 769 q 712 590 667 678 q 757 381 757 503 m 486 458 q 466 560 485 524 q 399 596 447 596 q 330 564 353 596 q 300 449 307 532 l 486 449 l 486 458 m 319 978 q 395 990 372 979 q 418 1026 418 1001 q 404 1055 418 1044 q 367 1065 390 1065 q 324 1061 343 1065 q 281 1047 306 1057 l 240 1150 q 404 1189 306 1189 q 542 1147 493 1189 q 590 1039 590 1106 q 560 949 590 983 q 471 903 529 914 l 471 835 l 319 835 l 319 978 z \\\"},\\\"ȇ\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":757,\\\"o\\\":\\\"m 757 381 q 751 293 757 346 l 301 293 q 348 192 313 218 q 450 167 383 167 q 529 183 489 167 q 618 232 569 199 l 729 82 q 424 -28 594 -28 q 125 81 226 -28 q 24 369 24 190 q 66 572 24 481 q 192 716 108 663 q 393 769 275 769 q 585 724 503 769 q 712 590 667 678 q 757 381 757 503 m 486 458 q 466 560 485 524 q 399 596 447 596 q 330 564 353 596 q 300 449 307 532 l 486 449 l 486 458 m 396 1121 q 578 1043 514 1121 q 653 849 643 965 l 510 825 q 469 906 497 876 q 396 935 440 935 q 323 906 351 935 q 282 825 294 876 l 139 849 q 213 1043 149 965 q 396 1121 278 1121 z \\\"},\\\"ē\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":757,\\\"o\\\":\\\"m 757 381 q 751 293 757 346 l 301 293 q 348 192 313 218 q 450 167 383 167 q 529 183 489 167 q 618 232 569 199 l 729 82 q 424 -28 594 -28 q 125 81 226 -28 q 24 369 24 190 q 66 572 24 481 q 192 716 108 663 q 393 769 275 769 q 585 724 503 769 q 712 590 667 678 q 757 381 757 503 m 486 458 q 466 560 485 524 q 399 596 447 596 q 330 564 353 596 q 300 449 307 532 l 486 449 l 486 458 m 169 900 l 169 1086 l 621 1086 l 621 900 l 169 900 z \\\"},\\\"ę\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":757,\\\"o\\\":\\\"m 757 381 q 751 293 757 346 l 301 293 q 348 192 313 218 q 450 167 383 167 q 529 183 489 167 q 618 232 569 199 l 729 82 q 557 -8 651 19 q 481 -63 503 -35 q 458 -117 458 -92 q 529 -178 458 -178 q 614 -167 565 -178 l 597 -326 q 494 -337 549 -337 q 335 -290 397 -337 q 272 -162 272 -243 q 353 -24 272 -76 q 107 102 190 -3 q 24 369 24 207 q 66 572 24 481 q 192 716 108 663 q 393 769 275 769 q 585 724 503 769 q 712 590 667 678 q 757 381 757 503 m 486 458 q 466 560 485 524 q 399 596 447 596 q 330 564 353 596 q 300 449 307 532 l 486 449 l 486 458 z \\\"},\\\"ɛ\\\":{\\\"ha\\\":675,\\\"x_min\\\":21,\\\"x_max\\\":682,\\\"o\\\":\\\"m 364 769 q 663 676 540 769 l 556 540 q 478 575 514 564 q 403 586 443 586 q 347 571 368 586 q 325 528 325 556 q 344 479 325 497 q 404 461 364 461 l 501 461 l 476 294 l 393 294 q 324 277 346 294 q 303 229 303 260 q 404 161 303 161 q 481 173 442 161 q 571 213 519 185 l 682 63 q 358 -28 558 -28 q 115 33 208 -28 q 21 204 21 93 q 226 394 21 369 q 49 564 49 431 q 135 714 49 658 q 364 769 222 769 z \\\"},\\\"ʚ\\\":{\\\"ha\\\":797,\\\"x_min\\\":21,\\\"x_max\\\":774,\\\"o\\\":\\\"m 383 -28 q 118 33 215 -28 q 21 211 21 94 q 72 336 21 292 q 226 394 124 381 q 56 561 56 435 q 145 713 56 657 q 383 769 235 769 q 593 721 506 769 q 727 583 681 672 q 774 372 774 493 q 672 76 774 179 q 383 -28 571 -28 m 382 161 q 458 181 432 161 q 493 246 483 201 q 503 372 503 290 q 477 537 503 488 q 392 586 451 586 q 342 570 360 586 q 325 525 325 554 q 401 461 325 461 l 411 461 l 426 294 l 383 294 q 316 280 336 294 q 296 232 296 265 q 382 161 296 161 z \\\"},\\\"ɜ\\\":{\\\"ha\\\":686,\\\"x_min\\\":-7,\\\"x_max\\\":665,\\\"o\\\":\\\"m 326 769 q 483 744 414 769 q 591 671 551 718 q 631 561 631 624 q 460 394 631 435 q 614 336 563 381 q 665 211 665 292 q 569 33 665 94 q 306 -28 472 -28 q -7 60 117 -28 l 119 208 q 208 171 168 181 q 296 161 247 161 q 383 229 383 161 q 296 294 383 294 l 169 294 l 185 461 l 278 461 q 354 528 354 461 q 336 571 354 556 q 285 586 318 586 q 210 575 244 586 q 139 542 175 564 l 14 682 q 326 769 143 769 z \\\"},\\\"ɞ\\\":{\\\"ha\\\":797,\\\"x_min\\\":24,\\\"x_max\\\":776,\\\"o\\\":\\\"m 414 -28 q 125 76 226 -28 q 24 372 24 179 q 70 583 24 493 q 204 721 117 672 q 414 769 292 769 q 652 713 563 769 q 742 561 742 657 q 571 394 742 435 q 725 336 674 381 q 776 211 776 292 q 679 33 776 94 q 414 -28 582 -28 m 415 161 q 501 232 501 161 q 481 280 501 265 q 414 294 461 294 l 371 294 l 386 461 l 396 461 q 472 525 472 461 q 455 570 472 554 q 406 586 438 586 q 320 537 346 586 q 294 372 294 488 q 304 246 294 290 q 340 181 314 201 q 415 161 365 161 z \\\"},\\\"ɝ\\\":{\\\"ha\\\":1093,\\\"x_min\\\":-7,\\\"x_max\\\":1107,\\\"o\\\":\\\"m 1107 472 q 926 421 1031 421 q 770 463 828 421 q 694 581 713 506 l 693 586 l 631 549 q 460 394 622 433 q 614 336 563 381 q 665 211 665 292 q 569 33 665 94 q 306 -28 472 -28 q -7 60 117 -28 l 119 208 q 208 171 168 181 q 296 161 247 161 q 383 229 383 161 q 296 294 383 294 l 169 294 l 185 461 l 278 461 q 354 528 354 461 q 336 571 354 556 q 285 586 318 586 q 210 575 244 586 q 139 542 175 564 l 14 682 q 326 769 143 769 q 471 748 406 769 q 576 688 536 726 l 679 742 l 899 742 l 899 668 q 915 620 899 636 q 960 604 932 604 q 1011 612 989 604 q 1038 621 1033 619 l 1107 472 z \\\"},\\\"ɘ\\\":{\\\"ha\\\":778,\\\"x_min\\\":21,\\\"x_max\\\":754,\\\"o\\\":\\\"m 385 769 q 662 660 569 769 q 754 369 754 551 q 653 81 754 190 q 354 -28 551 -28 q 49 82 183 -28 l 160 232 q 249 183 208 199 q 328 167 289 167 q 430 192 394 167 q 476 293 465 218 l 26 293 q 21 381 21 346 q 66 590 21 503 q 194 724 111 678 q 385 769 276 769 m 292 449 l 478 449 q 451 566 472 536 q 383 596 431 596 q 313 560 332 596 q 292 458 293 524 l 292 449 z \\\"},\\\"ʃ\\\":{\\\"ha\\\":392,\\\"x_min\\\":-197,\\\"x_max\\\":556,\\\"o\\\":\\\"m 351 1061 q 556 1010 465 1061 l 483 840 q 394 864 433 864 q 348 846 363 864 q 333 789 333 828 l 333 -22 q 249 -240 333 -165 q 22 -315 165 -315 q -197 -253 -111 -315 l -108 -96 q -60 -115 -79 -110 q -14 -121 -40 -121 q 40 -102 21 -121 q 58 -47 58 -83 l 58 785 q 133 983 58 906 q 351 1061 208 1061 z \\\"},\\\"ʆ\\\":{\\\"ha\\\":500,\\\"x_min\\\":-104,\\\"x_max\\\":664,\\\"o\\\":\\\"m 442 79 q 439 0 442 50 q 571 -57 506 -22 l 525 -162 q 417 -121 485 -144 q 311 -267 385 -219 q 117 -315 238 -315 q -47 -270 10 -315 q -104 -143 -104 -225 q -44 -4 -104 -53 q 121 44 17 44 q 167 43 151 44 l 167 785 q 242 983 167 906 q 460 1061 317 1061 q 664 1010 574 1061 l 592 840 q 503 864 542 864 q 456 846 471 864 q 442 789 442 828 l 442 79 m 94 -185 q 146 -160 129 -185 q 165 -78 163 -136 q 119 -76 151 -76 q 43 -135 43 -76 q 56 -172 43 -158 q 94 -185 69 -185 z \\\"},\\\"ƪ\\\":{\\\"ha\\\":639,\\\"x_min\\\":-28,\\\"x_max\\\":836,\\\"o\\\":\\\"m 836 -253 q 617 -315 750 -315 q 390 -240 474 -315 q 306 -22 306 -165 l 306 549 q 215 532 263 532 q 40 604 107 532 q -28 794 -28 676 q 7 931 -28 871 q 108 1026 42 992 q 268 1061 175 1061 q 438 1024 367 1061 q 544 921 508 986 q 581 771 581 856 l 581 -47 q 599 -102 581 -83 q 653 -121 618 -121 q 699 -115 679 -121 q 747 -96 718 -110 l 836 -253 m 267 715 q 306 719 288 715 l 306 814 q 256 878 306 878 q 200 799 200 878 q 217 735 200 756 q 267 715 233 715 z \\\"},\\\"ʅ\\\":{\\\"ha\\\":711,\\\"x_min\\\":-21,\\\"x_max\\\":732,\\\"o\\\":\\\"m 732 35 q 513 -28 646 -28 q 285 47 369 -28 q 201 265 201 122 l 201 497 q 187 554 201 536 q 140 572 172 572 q 51 549 101 572 l -21 718 q 183 769 69 769 q 401 692 326 769 q 476 493 476 614 l 476 240 q 495 185 476 204 q 549 167 514 167 q 594 172 575 167 q 643 192 614 178 l 732 35 z \\\"},\\\"ɇ\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":757,\\\"o\\\":\\\"m 417 300 l 383 171 q 450 167 413 167 q 529 183 489 167 q 618 232 569 199 l 729 82 q 424 -28 594 -28 q 332 -21 381 -28 l 310 -107 l 228 -86 l 250 0 q 81 139 138 42 q 24 369 24 236 q 66 572 24 481 q 192 716 108 663 q 393 769 275 769 q 453 765 424 769 l 472 839 l 553 818 l 535 747 q 699 615 640 708 q 757 381 757 521 q 751 300 757 353 l 417 300 m 399 603 q 307 567 336 603 q 272 442 278 532 l 367 442 l 410 603 l 399 603 m 521 451 q 513 524 519 494 q 488 572 506 553 l 454 442 l 521 442 l 521 451 m 329 300 l 274 300 q 306 210 279 240 l 329 300 z \\\"},\\\"ẽ\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":757,\\\"o\\\":\\\"m 757 381 q 751 293 757 346 l 301 293 q 348 192 313 218 q 450 167 383 167 q 529 183 489 167 q 618 232 569 199 l 729 82 q 424 -28 594 -28 q 125 81 226 -28 q 24 369 24 190 q 66 572 24 481 q 192 716 108 663 q 393 769 275 769 q 585 724 503 769 q 712 590 667 678 q 757 381 757 503 m 486 458 q 466 560 485 524 q 399 596 447 596 q 330 564 353 596 q 300 449 307 532 l 486 449 l 486 458 m 476 864 q 427 871 447 864 q 385 893 407 878 q 347 917 358 911 q 319 924 335 924 q 279 910 294 924 q 246 864 264 896 l 117 926 q 197 1062 146 1008 q 313 1115 247 1115 q 365 1108 343 1115 q 410 1085 386 1101 q 447 1062 433 1068 q 474 1056 460 1056 q 513 1069 497 1056 q 546 1115 528 1083 l 675 1053 q 594 917 646 969 q 476 864 543 864 z \\\"},\\\"ǝ\\\":{\\\"ha\\\":778,\\\"x_min\\\":21,\\\"x_max\\\":754,\\\"o\\\":\\\"z \\\"},\\\"ə\\\":{\\\"ha\\\":778,\\\"x_min\\\":21,\\\"x_max\\\":754,\\\"o\\\":\\\"m 378 769 q 660 661 565 769 q 754 372 754 553 q 712 170 754 261 q 586 26 669 79 q 385 -28 503 -28 q 193 18 275 -28 q 66 151 111 64 q 21 361 21 239 q 26 449 21 396 l 496 449 q 458 549 490 517 q 367 582 426 582 q 273 569 317 582 q 181 525 229 556 l 69 671 q 205 744 131 718 q 378 769 279 769 m 385 160 q 462 191 435 160 q 496 293 489 222 l 278 293 l 278 283 q 307 193 281 226 q 385 160 333 160 z \\\"},\\\"ɚ\\\":{\\\"ha\\\":1190,\\\"x_min\\\":21,\\\"x_max\\\":1204,\\\"o\\\":\\\"m 1204 472 q 1024 421 1128 421 q 867 463 925 421 q 792 581 810 506 l 790 586 l 726 549 q 754 372 754 468 q 712 170 754 261 q 586 26 669 79 q 385 -28 503 -28 q 193 18 275 -28 q 66 151 111 64 q 21 361 21 239 q 26 449 21 396 l 496 449 q 458 549 490 517 q 367 582 426 582 q 273 569 317 582 q 181 525 229 556 l 69 671 q 205 744 131 718 q 378 769 279 769 q 647 674 551 769 l 776 742 l 996 742 l 996 668 q 1013 620 996 636 q 1057 604 1029 604 q 1108 612 1086 604 q 1135 621 1131 619 l 1204 472 m 385 160 q 462 191 435 160 q 496 293 489 222 l 278 293 l 278 283 q 307 193 281 226 q 385 160 333 160 z \\\"},\\\"ʒ\\\":{\\\"ha\\\":725,\\\"x_min\\\":-28,\\\"x_max\\\":718,\\\"o\\\":\\\"m 436 299 q 645 215 572 285 q 718 15 718 144 q 671 -153 718 -78 q 534 -272 624 -228 q 321 -315 444 -315 q -28 -162 97 -315 l 114 -25 q 207 -90 164 -69 q 301 -110 250 -110 q 399 -74 361 -110 q 438 35 438 -37 q 399 124 438 97 q 289 151 361 151 l 149 151 l 149 300 l 357 542 l 35 542 l 35 742 l 667 742 l 667 558 l 436 299 z \\\"},\\\"ǯ\\\":{\\\"ha\\\":725,\\\"x_min\\\":-28,\\\"x_max\\\":718,\\\"o\\\":\\\"m 436 299 q 645 215 572 285 q 718 15 718 144 q 671 -153 718 -78 q 534 -272 624 -228 q 321 -315 444 -315 q -28 -162 97 -315 l 114 -25 q 207 -90 164 -69 q 301 -110 250 -110 q 399 -74 361 -110 q 438 35 438 -37 q 399 124 438 97 q 289 151 361 151 l 149 151 l 149 300 l 357 542 l 35 542 l 35 742 l 667 742 l 667 558 l 436 299 m 635 1046 l 433 836 l 269 836 l 68 1046 l 161 1153 l 351 1019 l 542 1153 l 635 1046 z \\\"},\\\"ʓ\\\":{\\\"ha\\\":725,\\\"x_min\\\":-28,\\\"x_max\\\":718,\\\"o\\\":\\\"m 718 22 q 658 -169 718 -87 q 479 -287 597 -250 l 517 -365 l 393 -412 l 347 -312 q 279 -315 306 -315 q 56 -254 140 -315 q -28 -82 -28 -193 q 24 53 -28 6 q 157 100 76 100 q 278 63 231 100 q 369 -62 326 26 l 381 -86 q 438 42 438 -54 q 400 138 438 110 q 289 165 363 165 l 149 165 l 149 314 l 361 542 l 35 542 l 35 742 l 667 742 l 667 558 l 436 313 q 718 22 718 282 m 150 -68 q 173 -101 150 -92 q 261 -110 196 -110 q 224 -51 240 -68 q 185 -33 207 -33 q 150 -68 150 -33 z \\\"},\\\"ƹ\\\":{\\\"ha\\\":725,\\\"x_min\\\":7,\\\"x_max\\\":753,\\\"o\\\":\\\"m 753 -162 q 403 -315 628 -315 q 191 -272 281 -315 q 54 -155 101 -229 q 7 11 7 -81 q 81 211 7 139 q 289 299 154 283 l 58 558 l 58 742 l 690 742 l 690 542 l 363 542 l 576 293 l 576 151 l 436 151 q 288 29 288 151 q 325 -74 288 -39 q 422 -110 363 -110 q 519 -91 475 -110 q 615 -28 563 -72 l 753 -162 z \\\"},\\\"ƺ\\\":{\\\"ha\\\":739,\\\"x_min\\\":28,\\\"x_max\\\":711,\\\"o\\\":\\\"m 282 -315 q 104 -231 171 -287 q 38 -93 38 -174 q 97 35 38 -12 q 281 110 156 82 q 398 147 365 129 q 431 196 431 165 q 406 236 431 224 q 324 249 382 249 l 156 249 l 156 383 l 343 556 l 28 556 l 28 742 l 660 742 l 660 572 l 449 396 l 461 396 q 645 339 579 396 q 711 186 711 282 q 638 20 711 75 q 436 -60 564 -35 q 315 -92 344 -78 q 285 -126 285 -107 q 338 -171 285 -151 l 282 -315 z \\\"},\\\"f\\\":{\\\"ha\\\":513,\\\"x_min\\\":-3,\\\"x_max\\\":629,\\\"o\\\":\\\"m 449 864 q 390 843 408 864 q 372 771 372 822 l 372 742 l 544 742 l 514 556 l 372 556 l 372 0 l 97 0 l 97 556 l -3 556 l -3 742 l 97 742 l 97 785 q 178 983 97 906 q 411 1061 258 1061 q 529 1047 469 1061 q 629 1010 589 1032 l 557 836 q 449 864 506 864 z \\\"},\\\"ḟ\\\":{\\\"ha\\\":513,\\\"x_min\\\":-3,\\\"x_max\\\":629,\\\"o\\\":\\\"m 449 864 q 390 843 408 864 q 372 771 372 822 l 372 742 l 544 742 l 514 556 l 372 556 l 372 0 l 97 0 l 97 556 l -3 556 l -3 742 l 97 742 l 97 785 q 178 983 97 906 q 411 1061 258 1061 q 529 1047 469 1061 q 629 1010 589 1032 l 557 836 q 449 864 506 864 z \\\"},\\\"ʩ\\\":{\\\"ha\\\":1229,\\\"x_min\\\":-3,\\\"x_max\\\":1181,\\\"o\\\":\\\"m 981 769 q 1127 711 1074 769 q 1181 547 1181 653 l 1181 -22 q 1097 -240 1181 -165 q 869 -315 1013 -315 q 650 -253 736 -315 l 739 -96 q 788 -115 768 -110 q 833 -121 807 -121 q 887 -102 868 -121 q 906 -47 906 -83 l 906 497 q 895 554 906 539 q 864 569 885 569 q 771 496 818 569 l 771 0 l 496 0 l 496 556 l 372 556 l 372 0 l 97 0 l 97 556 l -3 556 l -3 742 l 97 742 l 97 785 q 178 983 97 906 q 411 1061 258 1061 q 529 1047 469 1061 q 629 1010 589 1032 l 557 836 q 449 864 506 864 q 390 843 408 864 q 372 771 372 822 l 372 742 l 736 742 l 756 665 q 860 744 807 719 q 981 769 914 769 z \\\"},\\\"g\\\":{\\\"ha\\\":792,\\\"x_min\\\":-7,\\\"x_max\\\":792,\\\"o\\\":\\\"m 792 692 q 581 658 718 658 q 690 583 656 626 q 725 464 725 539 q 685 338 725 394 q 570 251 644 282 q 396 219 496 219 q 317 224 342 219 q 300 197 300 215 q 314 172 300 182 q 372 163 328 163 l 479 163 q 639 135 571 163 q 744 56 707 107 q 781 -58 781 6 q 674 -247 781 -178 q 369 -315 568 -315 q 141 -285 224 -315 q 26 -200 58 -254 q -7 -68 -7 -146 l 239 -68 q 250 -112 239 -97 q 290 -135 261 -128 q 378 -142 319 -142 q 478 -124 453 -142 q 504 -78 504 -107 q 485 -39 504 -54 q 425 -24 467 -24 l 322 -24 q 133 17 194 -24 q 72 125 72 58 q 99 208 72 168 q 167 274 125 249 q 60 365 92 314 q 28 490 28 417 q 122 696 28 622 q 376 769 217 769 q 566 797 482 765 q 732 883 650 828 l 792 692 m 385 592 q 324 567 347 592 q 300 496 300 542 q 324 420 300 446 q 385 394 347 394 q 469 500 469 394 q 449 570 469 549 q 385 592 428 592 z \\\"},\\\"ǵ\\\":{\\\"ha\\\":792,\\\"x_min\\\":-7,\\\"x_max\\\":792,\\\"o\\\":\\\"m 792 692 q 581 658 718 658 q 690 583 656 626 q 725 464 725 539 q 685 338 725 394 q 570 251 644 282 q 396 219 496 219 q 317 224 342 219 q 300 197 300 215 q 314 172 300 182 q 372 163 328 163 l 479 163 q 639 135 571 163 q 744 56 707 107 q 781 -58 781 6 q 674 -247 781 -178 q 369 -315 568 -315 q 141 -285 224 -315 q 26 -200 58 -254 q -7 -68 -7 -146 l 239 -68 q 250 -112 239 -97 q 290 -135 261 -128 q 378 -142 319 -142 q 478 -124 453 -142 q 504 -78 504 -107 q 485 -39 504 -54 q 425 -24 467 -24 l 322 -24 q 133 17 194 -24 q 72 125 72 58 q 99 208 72 168 q 167 274 125 249 q 60 365 92 314 q 28 490 28 417 q 122 696 28 622 q 376 769 217 769 q 566 797 482 765 q 732 883 650 828 l 792 692 m 385 592 q 324 567 347 592 q 300 496 300 542 q 324 420 300 446 q 385 394 347 394 q 469 500 469 394 q 449 570 469 549 q 385 592 428 592 m 593 989 l 244 851 l 171 989 l 490 1189 l 593 989 z \\\"},\\\"ɣ\\\":{\\\"ha\\\":742,\\\"x_min\\\":-21,\\\"x_max\\\":763,\\\"o\\\":\\\"m 504 129 q 582 -10 558 47 q 606 -128 606 -67 q 550 -265 606 -215 q 375 -315 494 -315 q 201 -265 257 -315 q 144 -128 144 -215 q 167 -15 144 -71 q 246 129 189 42 l -21 742 l 271 742 l 375 303 l 479 742 l 763 742 l 504 129 m 413 -115 q 403 -72 413 -94 q 375 -11 394 -50 q 338 -117 338 -82 q 347 -145 338 -135 q 375 -156 357 -156 q 413 -115 413 -156 z \\\"},\\\"ğ\\\":{\\\"ha\\\":792,\\\"x_min\\\":-7,\\\"x_max\\\":792,\\\"o\\\":\\\"m 792 692 q 581 658 718 658 q 690 583 656 626 q 725 464 725 539 q 685 338 725 394 q 570 251 644 282 q 396 219 496 219 q 317 224 342 219 q 300 197 300 215 q 314 172 300 182 q 372 163 328 163 l 479 163 q 639 135 571 163 q 744 56 707 107 q 781 -58 781 6 q 674 -247 781 -178 q 369 -315 568 -315 q 141 -285 224 -315 q 26 -200 58 -254 q -7 -68 -7 -146 l 239 -68 q 250 -112 239 -97 q 290 -135 261 -128 q 378 -142 319 -142 q 478 -124 453 -142 q 504 -78 504 -107 q 485 -39 504 -54 q 425 -24 467 -24 l 322 -24 q 133 17 194 -24 q 72 125 72 58 q 99 208 72 168 q 167 274 125 249 q 60 365 92 314 q 28 490 28 417 q 122 696 28 622 q 376 769 217 769 q 566 797 482 765 q 732 883 650 828 l 792 692 m 385 592 q 324 567 347 592 q 300 496 300 542 q 324 420 300 446 q 385 394 347 394 q 469 500 469 394 q 449 570 469 549 q 385 592 428 592 m 396 869 q 213 947 278 869 q 139 1142 149 1025 l 282 1165 q 323 1085 294 1114 q 396 1056 351 1056 q 469 1085 440 1056 q 510 1165 497 1114 l 653 1142 q 578 947 643 1025 q 396 869 514 869 z \\\"},\\\"ǧ\\\":{\\\"ha\\\":792,\\\"x_min\\\":-7,\\\"x_max\\\":792,\\\"o\\\":\\\"m 792 692 q 581 658 718 658 q 690 583 656 626 q 725 464 725 539 q 685 338 725 394 q 570 251 644 282 q 396 219 496 219 q 317 224 342 219 q 300 197 300 215 q 314 172 300 182 q 372 163 328 163 l 479 163 q 639 135 571 163 q 744 56 707 107 q 781 -58 781 6 q 674 -247 781 -178 q 369 -315 568 -315 q 141 -285 224 -315 q 26 -200 58 -254 q -7 -68 -7 -146 l 239 -68 q 250 -112 239 -97 q 290 -135 261 -128 q 378 -142 319 -142 q 478 -124 453 -142 q 504 -78 504 -107 q 485 -39 504 -54 q 425 -24 467 -24 l 322 -24 q 133 17 194 -24 q 72 125 72 58 q 99 208 72 168 q 167 274 125 249 q 60 365 92 314 q 28 490 28 417 q 122 696 28 622 q 376 769 217 769 q 566 797 482 765 q 732 883 650 828 l 792 692 m 385 592 q 324 567 347 592 q 300 496 300 542 q 324 420 300 446 q 385 394 347 394 q 469 500 469 394 q 449 570 469 549 q 385 592 428 592 m 679 1046 l 478 836 l 314 836 l 113 1046 l 206 1153 l 396 1019 l 586 1153 l 679 1046 z \\\"},\\\"ĝ\\\":{\\\"ha\\\":792,\\\"x_min\\\":-7,\\\"x_max\\\":792,\\\"o\\\":\\\"m 792 692 q 581 658 718 658 q 690 583 656 626 q 725 464 725 539 q 685 338 725 394 q 570 251 644 282 q 396 219 496 219 q 317 224 342 219 q 300 197 300 215 q 314 172 300 182 q 372 163 328 163 l 479 163 q 639 135 571 163 q 744 56 707 107 q 781 -58 781 6 q 674 -247 781 -178 q 369 -315 568 -315 q 141 -285 224 -315 q 26 -200 58 -254 q -7 -68 -7 -146 l 239 -68 q 250 -112 239 -97 q 290 -135 261 -128 q 378 -142 319 -142 q 478 -124 453 -142 q 504 -78 504 -107 q 485 -39 504 -54 q 425 -24 467 -24 l 322 -24 q 133 17 194 -24 q 72 125 72 58 q 99 208 72 168 q 167 274 125 249 q 60 365 92 314 q 28 490 28 417 q 122 696 28 622 q 376 769 217 769 q 566 797 482 765 q 732 883 650 828 l 792 692 m 385 592 q 324 567 347 592 q 300 496 300 542 q 324 420 300 446 q 385 394 347 394 q 469 500 469 394 q 449 570 469 549 q 385 592 428 592 m 113 957 l 314 1167 l 478 1167 l 679 957 l 586 850 l 396 983 l 206 850 l 113 957 z \\\"},\\\"ģ\\\":{\\\"ha\\\":792,\\\"x_min\\\":-7,\\\"x_max\\\":792,\\\"o\\\":\\\"m 792 692 q 581 658 718 658 q 690 583 656 626 q 725 464 725 539 q 685 338 725 394 q 570 251 644 282 q 396 219 496 219 q 317 224 342 219 q 300 197 300 215 q 314 172 300 182 q 372 163 328 163 l 479 163 q 639 135 571 163 q 744 56 707 107 q 781 -58 781 6 q 674 -247 781 -178 q 369 -315 568 -315 q 141 -285 224 -315 q 26 -200 58 -254 q -7 -68 -7 -146 l 239 -68 q 250 -112 239 -97 q 290 -135 261 -128 q 378 -142 319 -142 q 478 -124 453 -142 q 504 -78 504 -107 q 485 -39 504 -54 q 425 -24 467 -24 l 322 -24 q 133 17 194 -24 q 72 125 72 58 q 99 208 72 168 q 167 274 125 249 q 60 365 92 314 q 28 490 28 417 q 122 696 28 622 q 376 769 217 769 q 566 797 482 765 q 732 883 650 828 l 792 692 m 385 592 q 324 567 347 592 q 300 496 300 542 q 324 420 300 446 q 385 394 347 394 q 469 500 469 394 q 449 570 469 549 q 385 592 428 592 m 388 796 q 296 832 332 796 q 260 922 260 868 q 268 976 260 951 q 297 1044 276 1001 l 367 1185 l 497 1185 l 463 1026 q 515 922 515 986 q 479 833 515 869 q 388 796 443 796 z \\\"},\\\"ġ\\\":{\\\"ha\\\":792,\\\"x_min\\\":-7,\\\"x_max\\\":792,\\\"o\\\":\\\"m 792 692 q 581 658 718 658 q 690 583 656 626 q 725 464 725 539 q 685 338 725 394 q 570 251 644 282 q 396 219 496 219 q 317 224 342 219 q 300 197 300 215 q 314 172 300 182 q 372 163 328 163 l 479 163 q 639 135 571 163 q 744 56 707 107 q 781 -58 781 6 q 674 -247 781 -178 q 369 -315 568 -315 q 141 -285 224 -315 q 26 -200 58 -254 q -7 -68 -7 -146 l 239 -68 q 250 -112 239 -97 q 290 -135 261 -128 q 378 -142 319 -142 q 478 -124 453 -142 q 504 -78 504 -107 q 485 -39 504 -54 q 425 -24 467 -24 l 322 -24 q 133 17 194 -24 q 72 125 72 58 q 99 208 72 168 q 167 274 125 249 q 60 365 92 314 q 28 490 28 417 q 122 696 28 622 q 376 769 217 769 q 566 797 482 765 q 732 883 650 828 l 792 692 m 385 592 q 324 567 347 592 q 300 496 300 542 q 324 420 300 446 q 385 394 347 394 q 469 500 469 394 q 449 570 469 549 q 385 592 428 592 m 396 1151 q 506 1109 463 1151 q 550 1004 550 1067 q 506 899 550 942 q 396 857 463 857 q 285 899 329 857 q 242 1004 242 942 q 285 1109 242 1067 q 396 1151 329 1151 z \\\"},\\\"ɠ\\\":{\\\"ha\\\":825,\\\"x_min\\\":21,\\\"x_max\\\":989,\\\"o\\\":\\\"m 785 1061 q 989 1010 899 1061 l 917 840 q 828 864 867 864 q 781 846 796 864 q 767 789 767 828 l 767 33 q 667 -231 767 -146 q 382 -315 568 -315 q 90 -242 207 -315 l 171 -76 q 357 -121 260 -121 q 459 -92 426 -121 q 492 -6 492 -64 l 492 81 q 303 0 417 0 q 92 105 163 0 q 21 389 21 210 q 59 584 21 497 q 169 720 97 671 q 338 769 242 769 q 492 710 422 769 l 492 785 q 567 983 492 906 q 785 1061 642 1061 m 399 197 q 492 263 454 197 l 492 532 q 453 563 471 553 q 411 574 435 574 q 333 528 363 574 q 303 386 303 483 q 328 235 303 274 q 399 197 353 197 z \\\"},\\\"ƾ\\\":{\\\"ha\\\":711,\\\"x_min\\\":-14,\\\"x_max\\\":688,\\\"o\\\":\\\"m 504 601 q 642 499 597 568 q 688 317 688 431 q 642 133 688 211 q 514 14 596 56 q 325 -28 432 -28 q -14 106 126 -28 l 118 240 q 197 186 160 203 q 279 169 235 169 q 372 207 338 169 q 407 317 407 244 q 368 453 407 401 q 243 525 329 504 l 179 538 l 179 722 l 88 722 l 88 869 l 179 869 l 179 1033 l 454 1061 l 454 869 l 579 869 l 579 722 l 454 722 l 454 614 l 504 601 z \\\"},\\\"ʔ\\\":{\\\"ha\\\":694,\\\"x_min\\\":-28,\\\"x_max\\\":674,\\\"o\\\":\\\"m 179 496 l 224 510 q 352 587 311 538 q 393 717 393 636 q 358 826 393 789 q 265 864 324 864 q 183 847 221 864 q 104 793 146 831 l -28 928 q 311 1061 113 1061 q 500 1020 418 1061 q 628 902 582 979 q 674 721 674 825 q 627 542 674 608 q 485 433 581 476 l 454 419 l 454 0 l 179 0 l 179 496 z \\\"},\\\"ʖ\\\":{\\\"ha\\\":711,\\\"x_min\\\":-14,\\\"x_max\\\":688,\\\"o\\\":\\\"m 454 1061 l 454 614 l 504 601 q 642 499 597 568 q 688 317 688 431 q 642 133 688 211 q 514 14 596 56 q 325 -28 432 -28 q -14 106 126 -28 l 118 240 q 197 186 160 203 q 279 169 235 169 q 372 207 338 169 q 407 317 407 244 q 368 453 407 401 q 243 525 329 504 l 179 538 l 179 1033 l 454 1061 z \\\"},\\\"ʕ\\\":{\\\"ha\\\":694,\\\"x_min\\\":21,\\\"x_max\\\":722,\\\"o\\\":\\\"m 240 0 l 240 419 l 210 433 q 67 542 114 476 q 21 722 21 608 q 69 902 21 825 q 201 1020 117 979 q 390 1061 285 1061 q 572 1028 492 1061 q 722 928 651 994 l 590 793 q 514 847 551 829 q 432 864 476 864 q 338 825 374 864 q 301 713 301 786 q 342 586 301 635 q 471 510 383 538 l 515 496 l 515 0 l 240 0 z \\\"},\\\"ɂ\\\":{\\\"ha\\\":661,\\\"x_min\\\":-14,\\\"x_max\\\":633,\\\"o\\\":\\\"m 147 286 l 203 303 q 314 360 276 325 q 351 457 351 396 q 323 542 351 511 q 249 572 294 572 q 179 558 210 572 q 113 513 149 543 l -14 644 q 283 769 111 769 q 467 731 388 769 q 590 622 546 692 q 633 460 633 551 q 592 311 633 367 q 464 224 551 256 l 422 208 l 422 0 l 147 0 l 147 286 z \\\"},\\\"ʡ\\\":{\\\"ha\\\":694,\\\"x_min\\\":-28,\\\"x_max\\\":674,\\\"o\\\":\\\"m 454 419 l 454 314 l 579 314 l 579 167 l 454 167 l 454 0 l 179 0 l 179 167 l 88 167 l 88 314 l 179 314 l 179 496 l 224 510 q 352 587 311 538 q 393 717 393 636 q 358 826 393 789 q 265 864 324 864 q 183 847 221 864 q 104 793 146 831 l -28 928 q 311 1061 113 1061 q 500 1020 418 1061 q 628 902 582 979 q 674 721 674 825 q 627 542 674 608 q 485 433 581 476 l 454 419 z \\\"},\\\"ʢ\\\":{\\\"ha\\\":694,\\\"x_min\\\":21,\\\"x_max\\\":722,\\\"o\\\":\\\"m 515 314 l 607 314 l 607 167 l 515 167 l 515 0 l 240 0 l 240 167 l 115 167 l 115 314 l 240 314 l 240 419 l 210 433 q 67 542 114 476 q 21 722 21 608 q 69 902 21 825 q 201 1020 117 979 q 390 1061 285 1061 q 572 1028 492 1061 q 722 928 651 994 l 590 793 q 514 847 551 829 q 432 864 476 864 q 338 825 374 864 q 301 713 301 786 q 342 586 301 635 q 471 510 383 538 l 515 496 l 515 314 z \\\"},\\\"ɡ\\\":{\\\"ha\\\":822,\\\"x_min\\\":21,\\\"x_max\\\":767,\\\"o\\\":\\\"m 767 742 l 767 44 q 660 -225 767 -135 q 365 -315 554 -315 q 65 -242 190 -315 l 146 -76 q 235 -108 185 -96 q 338 -121 285 -121 q 453 -90 414 -121 q 492 6 492 -60 l 492 79 q 310 0 421 0 q 94 105 167 0 q 21 389 21 210 q 60 583 21 496 q 168 719 99 669 q 324 769 238 769 q 514 690 436 769 l 526 742 l 767 742 m 399 197 q 492 263 454 197 l 492 531 q 449 563 469 553 q 403 574 428 574 q 303 386 303 574 q 328 235 303 274 q 399 197 353 197 z \\\"},\\\"ǥ\\\":{\\\"ha\\\":792,\\\"x_min\\\":-7,\\\"x_max\\\":847,\\\"o\\\":\\\"m 847 -115 l 774 -115 q 645 -262 749 -210 q 369 -315 542 -315 q 141 -285 224 -315 q 26 -200 58 -254 q -7 -68 -7 -146 l 239 -68 q 249 -122 239 -104 q 289 -148 260 -140 q 378 -156 318 -156 q 479 -146 442 -156 q 532 -115 517 -136 l 375 -115 l 375 -32 l 535 -32 q 425 4 511 4 l 322 4 q 133 42 194 4 q 72 138 72 79 q 98 214 72 179 q 167 274 124 249 q 60 365 92 314 q 28 490 28 417 q 122 696 28 622 q 376 769 217 769 q 566 797 482 765 q 732 883 650 828 l 792 692 q 581 658 718 658 q 690 583 656 626 q 725 464 725 539 q 685 338 725 394 q 570 251 644 282 q 396 219 496 219 q 317 224 342 219 q 300 197 300 215 q 313 176 300 183 q 372 169 326 169 l 479 169 q 688 115 608 169 q 779 -32 768 60 l 847 -32 l 847 -115 m 385 592 q 324 567 347 592 q 300 496 300 542 q 324 420 300 446 q 385 394 347 394 q 469 500 469 394 q 449 570 469 549 q 385 592 428 592 z \\\"},\\\"ȝ\\\":{\\\"ha\\\":665,\\\"x_min\\\":-7,\\\"x_max\\\":644,\\\"o\\\":\\\"m 306 769 q 524 712 439 769 q 610 554 610 654 q 439 381 610 421 q 644 213 644 364 q 497 -6 644 90 q 76 -153 350 -101 l 53 22 q 291 119 221 74 q 363 224 361 164 q 344 265 363 250 q 289 281 325 281 l 163 281 l 178 447 l 243 447 q 313 465 293 447 q 333 521 333 483 q 264 586 333 586 q 190 576 224 586 q 118 544 156 565 l -7 682 q 306 769 122 769 z \\\"},\\\"h\\\":{\\\"ha\\\":792,\\\"x_min\\\":58,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 711 636 769 q 743 547 743 653 l 743 0 l 468 0 l 468 497 q 458 554 468 539 q 426 569 447 569 q 333 496 381 569 l 333 0 l 58 0 l 58 1033 l 333 1061 l 333 675 q 431 747 381 725 q 543 769 481 769 z \\\"},\\\"ħ\\\":{\\\"ha\\\":806,\\\"x_min\\\":0,\\\"x_max\\\":757,\\\"o\\\":\\\"m 557 769 q 703 711 650 769 q 757 547 757 653 l 757 0 l 482 0 l 482 497 q 472 554 482 539 q 440 569 461 569 q 347 496 394 569 l 347 0 l 72 0 l 72 819 l 0 819 l 0 967 l 72 967 l 72 1033 l 347 1061 l 347 967 l 517 967 l 517 819 l 347 819 l 347 675 q 444 747 394 725 q 557 769 494 769 z \\\"},\\\"ȟ\\\":{\\\"ha\\\":792,\\\"x_min\\\":58,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 711 636 769 q 743 547 743 653 l 743 0 l 468 0 l 468 497 q 458 554 468 539 q 426 569 447 569 q 333 496 381 569 l 333 0 l 58 0 l 58 1033 l 333 1061 l 333 675 q 431 747 381 725 q 543 769 481 769 m 681 1300 l 479 1104 l 315 1104 l 114 1300 l 207 1407 l 397 1288 l 588 1407 l 681 1300 z \\\"},\\\"ĥ\\\":{\\\"ha\\\":792,\\\"x_min\\\":58,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 711 636 769 q 743 547 743 653 l 743 0 l 468 0 l 468 497 q 458 554 468 539 q 426 569 447 569 q 333 496 381 569 l 333 0 l 58 0 l 58 1033 l 333 1061 l 333 675 q 431 747 381 725 q 543 769 481 769 m 114 1218 l 315 1414 l 479 1414 l 681 1218 l 588 1111 l 397 1231 l 207 1111 l 114 1218 z \\\"},\\\"ḥ\\\":{\\\"ha\\\":792,\\\"x_min\\\":58,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 711 636 769 q 743 547 743 653 l 743 0 l 468 0 l 468 497 q 458 554 468 539 q 426 569 447 569 q 333 496 381 569 l 333 0 l 58 0 l 58 1033 l 333 1061 l 333 675 q 431 747 381 725 q 543 769 481 769 m 401 -367 q 291 -324 335 -367 q 247 -219 247 -282 q 291 -115 247 -157 q 401 -72 335 -72 q 512 -115 468 -72 q 556 -219 556 -157 q 512 -324 556 -282 q 401 -367 468 -367 z \\\"},\\\"ɧ\\\":{\\\"ha\\\":792,\\\"x_min\\\":58,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 711 636 769 q 743 547 743 653 l 743 -22 q 659 -240 743 -165 q 432 -315 575 -315 q 213 -253 299 -315 l 301 -96 q 350 -115 331 -110 q 396 -121 369 -121 q 449 -102 431 -121 q 468 -47 468 -83 l 468 497 q 458 554 468 539 q 426 569 447 569 q 333 496 381 569 l 333 0 l 58 0 l 58 785 q 139 983 58 906 q 372 1061 219 1061 q 490 1047 431 1061 q 590 1010 550 1032 l 518 839 q 410 864 464 864 q 351 843 369 864 q 333 771 333 822 l 333 675 q 431 747 381 725 q 543 769 481 769 z \\\"},\\\"ɦ\\\":{\\\"ha\\\":792,\\\"x_min\\\":58,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 711 636 769 q 743 547 743 653 l 743 0 l 468 0 l 468 497 q 458 554 468 539 q 426 569 447 569 q 333 496 381 569 l 333 0 l 58 0 l 58 785 q 139 983 58 906 q 372 1061 219 1061 q 490 1047 431 1061 q 590 1010 550 1032 l 518 839 q 410 864 464 864 q 351 843 369 864 q 333 771 333 822 l 333 675 q 431 747 381 725 q 543 769 481 769 z \\\"},\\\"ɥ\\\":{\\\"ha\\\":792,\\\"x_min\\\":49,\\\"x_max\\\":733,\\\"o\\\":\\\"m 733 742 l 733 -315 l 458 -287 l 458 67 q 361 -6 411 17 q 249 -28 311 -28 q 102 31 156 -28 q 49 194 49 89 l 49 742 l 324 742 l 324 244 q 334 188 324 203 q 365 172 344 172 q 458 246 411 172 l 458 742 l 733 742 z \\\"},\\\"ʮ\\\":{\\\"ha\\\":982,\\\"x_min\\\":-17,\\\"x_max\\\":924,\\\"o\\\":\\\"m 924 742 l 924 -315 l 649 -287 l 649 67 q 551 -6 601 17 q 439 -28 501 -28 q 292 31 346 -28 q 239 194 239 89 l 239 503 q 220 558 239 539 q 167 576 201 576 q 121 571 140 576 q 72 551 101 565 l -17 708 q 203 771 69 771 q 430 696 346 771 q 514 478 514 621 l 514 244 q 524 188 514 203 q 556 172 535 172 q 649 246 601 172 l 649 742 l 924 742 z \\\"},\\\"ʯ\\\":{\\\"ha\\\":982,\\\"x_min\\\":-17,\\\"x_max\\\":1179,\\\"o\\\":\\\"m 1179 -253 q 960 -315 1093 -315 q 733 -240 817 -315 q 649 -22 649 -165 l 649 67 q 551 -6 601 17 q 439 -28 501 -28 q 292 31 346 -28 q 239 194 239 89 l 239 503 q 220 558 239 539 q 167 576 201 576 q 121 571 140 576 q 72 551 101 565 l -17 708 q 203 771 69 771 q 430 696 346 771 q 514 478 514 621 l 514 244 q 524 188 514 203 q 556 172 535 172 q 649 246 601 172 l 649 742 l 924 742 l 924 -47 q 942 -102 924 -83 q 996 -121 961 -121 q 1042 -115 1022 -121 q 1090 -96 1061 -110 l 1179 -253 z \\\"},\\\"ƕ\\\":{\\\"ha\\\":1196,\\\"x_min\\\":58,\\\"x_max\\\":1161,\\\"o\\\":\\\"m 1118 742 q 1149 544 1138 640 q 1161 339 1161 447 q 1107 131 1161 214 q 966 10 1053 49 q 778 -28 879 -28 q 556 44 643 -28 q 468 265 468 117 l 468 497 q 458 554 468 539 q 426 569 447 569 q 333 496 381 569 l 333 0 l 58 0 l 58 1033 l 333 1061 l 333 675 q 431 747 381 725 q 543 769 481 769 q 690 711 636 769 q 743 547 743 653 l 743 264 q 758 190 743 211 q 800 169 772 169 q 863 215 839 169 q 886 360 886 261 q 849 742 886 517 l 1118 742 z \\\"},\\\"i\\\":{\\\"ha\\\":392,\\\"x_min\\\":42,\\\"x_max\\\":350,\\\"o\\\":\\\"m 196 1151 q 306 1109 263 1151 q 350 1004 350 1067 q 306 899 350 942 q 196 857 263 857 q 85 899 129 857 q 42 1004 42 942 q 85 1109 42 1067 q 196 1151 129 1151 m 333 0 l 58 0 l 58 742 l 333 742 l 333 0 z \\\"},\\\"ı\\\":{\\\"ha\\\":392,\\\"x_min\\\":58,\\\"x_max\\\":333,\\\"o\\\":\\\"m 333 0 l 58 0 l 58 742 l 333 742 l 333 0 z \\\"},\\\"í\\\":{\\\"ha\\\":392,\\\"x_min\\\":-29,\\\"x_max\\\":393,\\\"o\\\":\\\"m 333 0 l 58 0 l 58 742 l 333 742 l 333 0 m 393 989 l 44 851 l -29 989 l 290 1189 l 393 989 z \\\"},\\\"ĭ\\\":{\\\"ha\\\":392,\\\"x_min\\\":-61,\\\"x_max\\\":453,\\\"o\\\":\\\"m 333 0 l 58 0 l 58 742 l 333 742 l 333 0 m 196 869 q 13 947 78 869 q -61 1142 -51 1025 l 82 1165 q 123 1085 94 1114 q 196 1056 151 1056 q 269 1085 240 1056 q 310 1165 297 1114 l 453 1142 q 378 947 443 1025 q 196 869 314 869 z \\\"},\\\"ǐ\\\":{\\\"ha\\\":392,\\\"x_min\\\":-87,\\\"x_max\\\":479,\\\"o\\\":\\\"m 333 0 l 58 0 l 58 742 l 333 742 l 333 0 m 479 1046 l 278 836 l 114 836 l -87 1046 l 6 1153 l 196 1019 l 386 1153 l 479 1046 z \\\"},\\\"î\\\":{\\\"ha\\\":392,\\\"x_min\\\":-87,\\\"x_max\\\":479,\\\"o\\\":\\\"m 333 0 l 58 0 l 58 742 l 333 742 l 333 0 m -87 957 l 114 1167 l 278 1167 l 479 957 l 386 850 l 196 983 l 6 850 l -87 957 z \\\"},\\\"ȉ\\\":{\\\"ha\\\":392,\\\"x_min\\\":-144,\\\"x_max\\\":424,\\\"o\\\":\\\"m 333 0 l 58 0 l 58 742 l 333 742 l 333 0 m 171 925 l 38 861 l -144 1133 l 26 1218 l 171 925 m 424 921 l 288 867 l 117 1140 l 290 1218 l 424 921 z \\\"},\\\"ï\\\":{\\\"ha\\\":392,\\\"x_min\\\":-107,\\\"x_max\\\":497,\\\"o\\\":\\\"m 333 0 l 58 0 l 58 742 l 333 742 l 333 0 m 25 1136 q 119 1099 81 1136 q 157 1008 157 1061 q 119 917 157 954 q 25 879 81 879 q -68 917 -29 879 q -107 1008 -107 954 q -68 1099 -107 1061 q 25 1136 -29 1136 m 365 1136 q 459 1099 421 1136 q 497 1008 497 1061 q 459 917 497 954 q 365 879 421 879 q 272 917 311 879 q 233 1008 233 954 q 272 1099 233 1061 q 365 1136 311 1136 z \\\"},\\\"ḯ\\\":{\\\"ha\\\":392,\\\"x_min\\\":-121,\\\"x_max\\\":511,\\\"o\\\":\\\"m 333 0 l 58 0 l 58 742 l 333 742 l 333 0 m 429 1225 l 192 1018 l 90 1108 l 285 1367 l 429 1225 m 11 1072 q 104 1035 65 1072 q 143 944 143 997 q 104 853 143 890 q 11 815 65 815 q -83 853 -44 815 q -121 944 -121 890 q -83 1035 -121 997 q 11 1072 -44 1072 m 379 1072 q 472 1035 433 1072 q 511 944 511 997 q 472 853 511 890 q 379 815 433 815 q 285 853 324 815 q 247 944 247 890 q 285 1035 247 997 q 379 1072 324 1072 z \\\"},\\\"ị\\\":{\\\"ha\\\":392,\\\"x_min\\\":42,\\\"x_max\\\":350,\\\"o\\\":\\\"m 196 1151 q 306 1109 263 1151 q 350 1004 350 1067 q 306 899 350 942 q 196 857 263 857 q 85 899 129 857 q 42 1004 42 942 q 85 1109 42 1067 q 196 1151 129 1151 m 333 0 l 58 0 l 58 742 l 333 742 l 333 0 m 196 -367 q 85 -324 129 -367 q 42 -219 42 -282 q 85 -115 42 -157 q 196 -72 129 -72 q 306 -115 263 -72 q 350 -219 350 -157 q 306 -324 350 -282 q 196 -367 263 -367 z \\\"},\\\"ᵻ\\\":{\\\"ha\\\":392,\\\"x_min\\\":-39,\\\"x_max\\\":433,\\\"o\\\":\\\"m 433 293 l 333 293 l 333 0 l 58 0 l 58 293 l -39 293 l -39 501 l 58 501 l 58 742 l 333 742 l 333 501 l 433 501 l 433 293 z \\\"},\\\"ì\\\":{\\\"ha\\\":392,\\\"x_min\\\":-1,\\\"x_max\\\":421,\\\"o\\\":\\\"m 333 0 l 58 0 l 58 742 l 333 742 l 333 0 m 421 989 l 347 851 l -1 989 l 101 1189 l 421 989 z \\\"},\\\"ỉ\\\":{\\\"ha\\\":392,\\\"x_min\\\":40,\\\"x_max\\\":390,\\\"o\\\":\\\"m 333 0 l 58 0 l 58 742 l 333 742 l 333 0 m 119 978 q 195 990 172 979 q 218 1026 218 1001 q 204 1055 218 1044 q 167 1065 190 1065 q 124 1061 143 1065 q 81 1047 106 1057 l 40 1150 q 204 1189 106 1189 q 342 1147 293 1189 q 390 1039 390 1106 q 360 949 390 983 q 271 903 329 914 l 271 835 l 119 835 l 119 978 z \\\"},\\\"ȋ\\\":{\\\"ha\\\":392,\\\"x_min\\\":-61,\\\"x_max\\\":453,\\\"o\\\":\\\"m 333 0 l 58 0 l 58 742 l 333 742 l 333 0 m 196 1121 q 378 1043 314 1121 q 453 849 443 965 l 310 825 q 269 906 297 876 q 196 935 240 935 q 123 906 151 935 q 82 825 94 876 l -61 849 q 13 1043 -51 965 q 196 1121 78 1121 z \\\"},\\\"ĳ\\\":{\\\"ha\\\":783,\\\"x_min\\\":42,\\\"x_max\\\":742,\\\"o\\\":\\\"m 196 1151 q 306 1109 263 1151 q 350 1004 350 1067 q 306 899 350 942 q 196 857 263 857 q 85 899 129 857 q 42 1004 42 942 q 85 1109 42 1067 q 196 1151 129 1151 m 333 0 l 58 0 l 58 742 l 333 742 l 333 0 z \\\"},\\\"ī\\\":{\\\"ha\\\":392,\\\"x_min\\\":-31,\\\"x_max\\\":421,\\\"o\\\":\\\"m 333 0 l 58 0 l 58 742 l 333 742 l 333 0 m -31 900 l -31 1086 l 421 1086 l 421 900 l -31 900 z \\\"},\\\"į\\\":{\\\"ha\\\":392,\\\"x_min\\\":-68,\\\"x_max\\\":350,\\\"o\\\":\\\"m 196 857 q 85 899 129 857 q 42 1004 42 942 q 85 1109 42 1067 q 196 1151 129 1151 q 306 1109 263 1151 q 350 1004 350 1067 q 306 899 350 942 q 196 857 263 857 m 58 742 l 333 742 l 333 0 l 278 0 q 153 -65 189 -29 q 118 -132 118 -100 q 189 -193 118 -193 q 274 -182 225 -193 l 257 -342 q 154 -353 208 -353 q -6 -306 57 -353 q -68 -178 -68 -258 q 58 17 -68 -57 l 58 742 z \\\"},\\\"ɩ\\\":{\\\"ha\\\":421,\\\"x_min\\\":49,\\\"x_max\\\":435,\\\"o\\\":\\\"m 282 -28 q 109 35 169 -28 q 49 214 49 99 l 49 742 l 324 742 l 324 225 q 357 188 324 188 q 386 192 369 188 l 435 -3 q 282 -28 369 -28 z \\\"},\\\"ɨ\\\":{\\\"ha\\\":472,\\\"x_min\\\":0,\\\"x_max\\\":472,\\\"o\\\":\\\"m 235 857 q 124 899 168 857 q 81 1004 81 942 q 124 1109 81 1067 q 235 1151 168 1151 q 345 1109 301 1151 q 389 1004 389 1067 q 345 899 389 942 q 235 857 301 857 m 472 293 l 372 293 l 372 0 l 97 0 l 97 293 l 0 293 l 0 501 l 97 501 l 97 742 l 372 742 l 372 501 l 472 501 l 472 293 z \\\"},\\\"ĩ\\\":{\\\"ha\\\":392,\\\"x_min\\\":-83,\\\"x_max\\\":475,\\\"o\\\":\\\"m 333 0 l 58 0 l 58 742 l 333 742 l 333 0 m 276 864 q 227 871 247 864 q 185 893 207 878 q 147 917 158 911 q 119 924 135 924 q 79 910 94 924 q 46 864 64 896 l -83 926 q -3 1062 -54 1008 q 113 1115 47 1115 q 165 1108 143 1115 q 210 1085 186 1101 q 247 1062 233 1068 q 274 1056 260 1056 q 313 1069 297 1056 q 346 1115 328 1083 l 475 1053 q 394 917 446 969 q 276 864 343 864 z \\\"},\\\"j\\\":{\\\"ha\\\":392,\\\"x_min\\\":-97,\\\"x_max\\\":350,\\\"o\\\":\\\"m 333 107 q 244 -169 333 -74 q -3 -315 156 -264 l -97 -115 q -11 -67 -43 -90 q 40 -6 21 -43 q 58 90 58 32 l 58 742 l 333 742 l 333 107 m 196 1151 q 306 1109 263 1151 q 350 1004 350 1067 q 306 899 350 942 q 196 857 263 857 q 85 899 129 857 q 42 1004 42 942 q 85 1109 42 1067 q 196 1151 129 1151 z \\\"},\\\"ȷ\\\":{\\\"ha\\\":392,\\\"x_min\\\":-97,\\\"x_max\\\":333,\\\"o\\\":\\\"m 333 107 q 244 -169 333 -74 q -3 -315 156 -264 l -97 -115 q -11 -67 -43 -90 q 40 -6 21 -43 q 58 90 58 32 l 58 742 l 333 742 l 333 107 z \\\"},\\\"ǰ\\\":{\\\"ha\\\":392,\\\"x_min\\\":-97,\\\"x_max\\\":479,\\\"o\\\":\\\"m 333 107 q 244 -169 333 -74 q -3 -315 156 -264 l -97 -115 q -11 -67 -43 -90 q 40 -6 21 -43 q 58 90 58 32 l 58 742 l 333 742 l 333 107 m 479 1046 l 278 836 l 114 836 l -87 1046 l 6 1153 l 196 1019 l 386 1153 l 479 1046 z \\\"},\\\"ĵ\\\":{\\\"ha\\\":392,\\\"x_min\\\":-97,\\\"x_max\\\":479,\\\"o\\\":\\\"m 333 107 q 244 -169 333 -74 q -3 -315 156 -264 l -97 -115 q -11 -67 -43 -90 q 40 -6 21 -43 q 58 90 58 32 l 58 742 l 333 742 l 333 107 m -87 957 l 114 1167 l 278 1167 l 479 957 l 386 850 l 196 983 l 6 850 l -87 957 z \\\"},\\\"ʝ\\\":{\\\"ha\\\":501,\\\"x_min\\\":-104,\\\"x_max\\\":571,\\\"o\\\":\\\"m 525 -162 q 417 -121 485 -144 q 311 -267 385 -219 q 117 -315 238 -315 q -47 -270 10 -315 q -104 -143 -104 -225 q -44 -4 -104 -53 q 121 44 17 44 q 167 43 151 44 l 167 742 l 442 742 l 442 79 q 439 0 442 50 q 571 -57 506 -22 l 525 -162 m 94 -185 q 146 -160 129 -185 q 165 -78 163 -136 q 119 -76 151 -76 q 43 -135 43 -76 q 56 -172 43 -158 q 94 -185 69 -185 m 304 1151 q 415 1109 371 1151 q 458 1004 458 1067 q 415 899 458 942 q 304 857 371 857 q 194 899 238 857 q 150 1004 150 942 q 194 1109 150 1067 q 304 1151 238 1151 z \\\"},\\\"ɟ\\\":{\\\"ha\\\":472,\\\"x_min\\\":-57,\\\"x_max\\\":472,\\\"o\\\":\\\"m 472 238 l 374 238 l 374 107 q 285 -169 374 -74 q 38 -315 196 -264 l -57 -115 q 29 -67 -3 -90 q 80 -6 61 -43 q 99 90 99 32 l 99 238 l 0 238 l 0 446 l 99 446 l 99 742 l 374 742 l 374 446 l 472 446 l 472 238 z \\\"},\\\"ʄ\\\":{\\\"ha\\\":475,\\\"x_min\\\":-47,\\\"x_max\\\":601,\\\"o\\\":\\\"m 469 188 l 469 0 l 369 0 q 260 -199 344 -126 q 43 -315 176 -271 l -47 -133 q 51 -77 15 -108 q 99 0 88 -46 l -3 0 l -3 188 l 104 188 l 104 785 q 179 983 104 906 q 397 1061 254 1061 q 601 1010 511 1061 l 529 840 q 440 864 479 864 q 394 846 408 864 q 379 789 379 828 l 379 188 l 469 188 z \\\"},\\\"ɉ\\\":{\\\"ha\\\":472,\\\"x_min\\\":-57,\\\"x_max\\\":472,\\\"o\\\":\\\"m 472 238 l 374 238 l 374 107 q 285 -169 374 -74 q 38 -315 196 -264 l -57 -115 q 29 -67 -3 -90 q 80 -6 61 -43 q 99 90 99 32 l 99 238 l 0 238 l 0 446 l 99 446 l 99 742 l 374 742 l 374 446 l 472 446 l 472 238 m 236 1151 q 347 1109 303 1151 q 390 1004 390 1067 q 347 899 390 942 q 236 857 303 857 q 126 899 169 857 q 82 1004 82 942 q 126 1109 82 1067 q 236 1151 169 1151 z \\\"},\\\"k\\\":{\\\"ha\\\":800,\\\"x_min\\\":58,\\\"x_max\\\":821,\\\"o\\\":\\\"m 333 0 l 58 0 l 58 1033 l 333 1061 l 333 0 m 614 417 l 821 0 l 517 0 l 339 406 l 538 742 l 810 742 l 614 417 z \\\"},\\\"ǩ\\\":{\\\"ha\\\":800,\\\"x_min\\\":58,\\\"x_max\\\":821,\\\"o\\\":\\\"m 333 0 l 58 0 l 58 1033 l 333 1061 l 333 0 m 614 417 l 821 0 l 517 0 l 339 406 l 538 742 l 810 742 l 614 417 m 710 1300 l 508 1104 l 344 1104 l 143 1300 l 236 1407 l 426 1288 l 617 1407 l 710 1300 z \\\"},\\\"ķ\\\":{\\\"ha\\\":800,\\\"x_min\\\":58,\\\"x_max\\\":821,\\\"o\\\":\\\"m 333 0 l 58 0 l 58 1033 l 333 1061 l 333 0 m 614 417 l 821 0 l 517 0 l 339 406 l 538 742 l 810 742 l 614 417 m 400 -86 q 492 -122 456 -86 q 528 -212 528 -158 q 519 -267 528 -242 q 490 -335 511 -292 l 421 -475 l 290 -475 l 325 -317 q 272 -212 272 -276 q 308 -123 272 -160 q 400 -86 344 -86 z \\\"},\\\"ĸ\\\":{\\\"ha\\\":800,\\\"x_min\\\":58,\\\"x_max\\\":821,\\\"o\\\":\\\"m 333 0 l 58 0 l 58 742 l 333 742 l 333 0 m 614 403 l 821 0 l 517 0 l 339 392 l 538 742 l 810 742 l 614 403 z \\\"},\\\"ƙ\\\":{\\\"ha\\\":800,\\\"x_min\\\":58,\\\"x_max\\\":821,\\\"o\\\":\\\"m 410 864 q 351 843 369 864 q 333 771 333 822 l 333 0 l 58 0 l 58 785 q 139 983 58 906 q 372 1061 219 1061 q 490 1047 431 1061 q 590 1010 550 1032 l 518 839 q 410 864 464 864 m 821 0 l 517 0 l 339 406 l 538 742 l 810 742 l 614 417 l 821 0 z \\\"},\\\"ʞ\\\":{\\\"ha\\\":800,\\\"x_min\\\":-21,\\\"x_max\\\":742,\\\"o\\\":\\\"m 186 325 l -21 742 l 283 742 l 461 336 l 263 0 l -10 0 l 186 325 m 467 742 l 742 742 l 742 -315 l 467 -287 l 467 742 z \\\"},\\\"l\\\":{\\\"ha\\\":421,\\\"x_min\\\":49,\\\"x_max\\\":435,\\\"o\\\":\\\"m 282 -28 q 109 35 169 -28 q 49 214 49 99 l 49 1033 l 324 1061 l 324 225 q 357 188 324 188 q 386 193 372 188 l 435 -3 q 282 -28 369 -28 z \\\"},\\\"ĺ\\\":{\\\"ha\\\":421,\\\"x_min\\\":-25,\\\"x_max\\\":435,\\\"o\\\":\\\"m 282 -28 q 109 35 169 -28 q 49 214 49 99 l 49 1033 l 324 1061 l 324 225 q 357 188 324 188 q 386 193 372 188 l 435 -3 q 282 -28 369 -28 m 397 1233 l 44 1107 l -25 1244 l 300 1433 l 397 1233 z \\\"},\\\"ƛ\\\":{\\\"ha\\\":768,\\\"x_min\\\":0,\\\"x_max\\\":796,\\\"o\\\":\\\"m 593 621 q 688 272 647 390 q 796 56 728 154 l 528 -28 q 436 191 468 79 q 374 486 404 303 l 274 -28 l 0 33 l 214 672 l 347 672 q 319 760 338 714 l 246 707 l 107 797 l 197 865 l 201 868 q 81 890 156 882 l 111 1058 q 260 1031 199 1047 q 369 989 321 1015 l 472 1065 l 571 939 l 489 881 q 593 621 556 786 z \\\"},\\\"ƚ\\\":{\\\"ha\\\":483,\\\"x_min\\\":0,\\\"x_max\\\":483,\\\"o\\\":\\\"m 483 -3 q 331 -28 418 -28 q 158 35 218 -28 q 97 214 97 99 l 97 422 l 0 422 l 0 610 l 97 610 l 97 1033 l 372 1061 l 372 610 l 472 610 l 472 422 l 372 422 l 372 225 q 406 188 372 188 q 435 193 421 188 l 483 -3 z \\\"},\\\"ɬ\\\":{\\\"ha\\\":646,\\\"x_min\\\":-14,\\\"x_max\\\":618,\\\"o\\\":\\\"m 536 188 q 565 193 551 188 l 614 -3 q 461 -28 549 -28 q 288 35 349 -28 q 228 214 228 99 l 228 324 q 46 377 106 328 q -14 511 -14 426 q 38 638 -14 593 q 175 683 89 683 q 228 678 197 683 l 228 1033 l 503 1061 l 503 468 l 506 468 q 600 482 550 472 l 618 349 q 506 329 563 333 l 503 329 l 503 225 q 536 188 503 188 m 157 514 q 228 463 157 465 l 228 549 q 196 551 206 551 q 167 541 178 551 q 157 514 157 531 z \\\"},\\\"ľ\\\":{\\\"ha\\\":576,\\\"x_min\\\":49,\\\"x_max\\\":604,\\\"o\\\":\\\"m 282 -28 q 109 35 169 -28 q 49 214 49 99 l 49 1033 l 324 1061 l 324 225 q 357 188 324 188 q 386 193 372 188 l 435 -3 q 282 -28 369 -28 m 604 1032 l 408 1061 l 374 729 l 524 707 l 604 1032 z \\\"},\\\"ḽ\\\":{\\\"ha\\\":421,\\\"x_min\\\":-28,\\\"x_max\\\":539,\\\"o\\\":\\\"m 282 -28 q 109 35 169 -28 q 49 214 49 99 l 49 1033 l 324 1061 l 324 225 q 357 188 324 188 q 386 193 372 188 l 435 -3 q 282 -28 369 -28 m -28 -293 l 174 -83 l 338 -83 l 539 -293 l 446 -400 l 256 -267 l 65 -400 l -28 -293 z \\\"},\\\"ļ\\\":{\\\"ha\\\":421,\\\"x_min\\\":49,\\\"x_max\\\":435,\\\"o\\\":\\\"m 282 -28 q 109 35 169 -28 q 49 214 49 99 l 49 1033 l 324 1061 l 324 225 q 357 188 324 188 q 386 193 372 188 l 435 -3 q 282 -28 369 -28 m 256 -86 q 347 -122 311 -86 q 383 -212 383 -158 q 375 -267 383 -242 q 346 -335 367 -292 l 276 -475 l 146 -475 l 181 -317 q 128 -212 128 -276 q 164 -123 128 -160 q 256 -86 200 -86 z \\\"},\\\"ȴ\\\":{\\\"ha\\\":688,\\\"x_min\\\":51,\\\"x_max\\\":688,\\\"o\\\":\\\"m 510 358 q 637 313 586 358 q 688 190 688 268 q 608 26 688 81 q 404 -28 529 -28 q 347 -25 383 -28 l 301 -125 l 178 -78 l 219 8 q 97 117 142 44 q 51 306 51 190 l 51 1033 l 326 1061 l 326 306 q 332 239 326 263 q 405 331 364 303 q 510 358 446 358 m 456 160 q 494 169 479 160 q 510 196 510 178 q 502 217 510 210 q 481 225 494 225 q 452 212 464 225 q 425 161 440 199 q 456 160 435 160 z \\\"},\\\"ŀ\\\":{\\\"ha\\\":706,\\\"x_min\\\":49,\\\"x_max\\\":697,\\\"o\\\":\\\"m 282 -28 q 109 35 169 -28 q 49 214 49 99 l 49 1033 l 324 1061 l 324 225 q 357 188 324 188 q 386 193 372 188 l 435 -3 q 282 -28 369 -28 m 543 669 q 653 627 610 669 q 697 522 697 585 q 653 417 697 460 q 543 375 610 375 q 433 417 476 375 q 389 522 389 460 q 433 627 389 585 q 543 669 476 669 z \\\"},\\\"ḷ\\\":{\\\"ha\\\":421,\\\"x_min\\\":49,\\\"x_max\\\":435,\\\"o\\\":\\\"m 282 -28 q 109 35 169 -28 q 49 214 49 99 l 49 1033 l 324 1061 l 324 225 q 357 188 324 188 q 386 193 372 188 l 435 -3 q 282 -28 369 -28 m 256 -367 q 145 -324 189 -367 q 101 -219 101 -282 q 145 -115 101 -157 q 256 -72 189 -72 q 366 -115 322 -72 q 410 -219 410 -157 q 366 -324 410 -282 q 256 -367 322 -367 z \\\"},\\\"ɮ\\\":{\\\"ha\\\":1014,\\\"x_min\\\":49,\\\"x_max\\\":1007,\\\"o\\\":\\\"m 725 299 q 933 215 860 285 q 1007 15 1007 144 q 960 -153 1007 -78 q 823 -272 913 -228 q 610 -315 733 -315 q 317 -218 432 -315 l 439 -56 q 513 -97 476 -83 q 590 -110 549 -110 q 688 -74 650 -110 q 726 35 726 -37 q 688 124 726 97 q 578 151 650 151 l 438 151 l 438 300 l 646 542 l 324 542 l 324 225 q 357 188 324 188 q 386 193 372 188 l 435 -3 q 282 -28 369 -28 q 109 35 169 -28 q 49 214 49 99 l 49 1033 l 324 1061 l 324 742 l 956 742 l 956 558 l 725 299 z \\\"},\\\"ɭ\\\":{\\\"ha\\\":392,\\\"x_min\\\":58,\\\"x_max\\\":589,\\\"o\\\":\\\"m 589 -253 q 369 -315 503 -315 q 142 -240 226 -315 q 58 -22 58 -165 l 58 1033 l 333 1061 l 333 -47 q 352 -102 333 -83 q 406 -121 371 -121 q 451 -115 432 -121 q 500 -96 471 -110 l 589 -253 z \\\"},\\\"ǉ\\\":{\\\"ha\\\":813,\\\"x_min\\\":49,\\\"x_max\\\":771,\\\"o\\\":\\\"m 282 -28 q 109 35 169 -28 q 49 214 49 99 l 49 1033 l 324 1061 l 324 225 q 357 188 324 188 q 386 193 372 188 l 435 -3 q 282 -28 369 -28 m 754 107 q 665 -169 754 -74 q 418 -315 576 -264 l 324 -115 q 410 -67 378 -90 q 460 -6 442 -43 q 479 90 479 32 l 479 742 l 754 742 l 754 107 m 617 1151 q 727 1109 683 1151 q 771 1004 771 1067 q 727 899 771 942 q 617 857 683 857 q 506 899 550 857 q 463 1004 463 942 q 506 1109 463 1067 q 617 1151 550 1151 z \\\"},\\\"ɫ\\\":{\\\"ha\\\":694,\\\"x_min\\\":-14,\\\"x_max\\\":708,\\\"o\\\":\\\"m 708 565 q 611 422 664 476 q 479 364 558 368 l 479 225 q 513 188 479 188 q 542 193 528 188 l 590 -3 q 438 -28 525 -28 q 265 35 325 -28 q 204 214 204 99 l 204 446 q 167 430 181 443 q 142 401 153 417 q 125 378 131 385 l -14 447 q 79 586 29 533 q 204 647 129 639 l 204 1033 l 479 1061 l 479 565 q 523 578 507 567 q 552 608 539 590 q 571 632 565 625 l 708 565 z \\\"},\\\"ʪ\\\":{\\\"ha\\\":972,\\\"x_min\\\":49,\\\"x_max\\\":965,\\\"o\\\":\\\"m 506 -28 q 226 15 326 -28 q 87 131 125 57 q 49 311 49 204 l 49 1033 l 324 1061 l 324 300 q 366 192 324 224 q 506 161 408 161 q 663 174 614 161 q 711 218 711 188 q 703 244 711 233 q 667 265 694 254 q 581 296 640 276 q 433 381 479 329 q 386 525 386 432 q 420 650 386 594 q 521 738 454 706 q 679 769 588 769 q 821 746 754 769 q 938 679 888 722 l 850 536 q 773 568 814 557 q 696 579 732 579 q 633 543 633 579 q 659 509 633 525 q 768 467 685 493 q 918 379 871 433 q 965 239 965 325 q 848 41 965 110 q 506 -28 731 -28 z \\\"},\\\"ł\\\":{\\\"ha\\\":536,\\\"x_min\\\":-28,\\\"x_max\\\":544,\\\"o\\\":\\\"m 415 188 q 444 193 431 188 l 493 -3 q 340 -28 428 -28 q 167 35 228 -28 q 107 214 107 99 l 107 344 l 60 315 l -28 457 l 107 542 l 107 1033 l 382 1061 l 382 707 l 457 753 l 544 611 l 382 513 l 382 225 q 415 188 382 188 z \\\"},\\\"ʫ\\\":{\\\"ha\\\":1026,\\\"x_min\\\":49,\\\"x_max\\\":1019,\\\"o\\\":\\\"m 996 0 l 436 0 q 282 -28 369 -28 q 109 35 169 -28 q 49 214 49 99 l 49 1033 l 324 1061 l 324 225 q 357 188 324 188 q 386 193 372 188 l 693 542 l 413 542 l 413 742 l 1010 742 l 1010 551 l 706 203 l 1019 203 l 996 0 z \\\"},\\\"m\\\":{\\\"ha\\\":1160,\\\"x_min\\\":58,\\\"x_max\\\":1111,\\\"o\\\":\\\"m 922 769 q 1059 710 1007 769 q 1111 547 1111 651 l 1111 0 l 836 0 l 836 497 q 826 553 836 538 q 799 569 817 569 q 758 551 778 569 q 722 496 739 532 l 722 0 l 447 0 l 447 497 q 438 553 447 538 q 410 569 428 569 q 369 551 389 569 q 333 496 350 532 l 333 0 l 58 0 l 58 742 l 299 742 l 318 667 q 415 745 363 721 q 533 769 467 769 q 635 742 592 769 q 700 663 678 714 q 800 744 747 718 q 922 769 853 769 z \\\"},\\\"ḿ\\\":{\\\"ha\\\":1160,\\\"x_min\\\":58,\\\"x_max\\\":1111,\\\"o\\\":\\\"m 922 769 q 1059 710 1007 769 q 1111 547 1111 651 l 1111 0 l 836 0 l 836 497 q 826 553 836 538 q 799 569 817 569 q 758 551 778 569 q 722 496 739 532 l 722 0 l 447 0 l 447 497 q 438 553 447 538 q 410 569 428 569 q 369 551 389 569 q 333 496 350 532 l 333 0 l 58 0 l 58 742 l 299 742 l 318 667 q 415 745 363 721 q 533 769 467 769 q 635 742 592 769 q 700 663 678 714 q 800 744 747 718 q 922 769 853 769 m 779 989 l 431 851 l 357 989 l 676 1189 l 779 989 z \\\"},\\\"ṁ\\\":{\\\"ha\\\":1160,\\\"x_min\\\":58,\\\"x_max\\\":1111,\\\"o\\\":\\\"m 922 769 q 1059 710 1007 769 q 1111 547 1111 651 l 1111 0 l 836 0 l 836 497 q 826 553 836 538 q 799 569 817 569 q 758 551 778 569 q 722 496 739 532 l 722 0 l 447 0 l 447 497 q 438 553 447 538 q 410 569 428 569 q 369 551 389 569 q 333 496 350 532 l 333 0 l 58 0 l 58 742 l 299 742 l 318 667 q 415 745 363 721 q 533 769 467 769 q 635 742 592 769 q 700 663 678 714 q 800 744 747 718 q 922 769 853 769 m 582 1151 q 692 1109 649 1151 q 736 1004 736 1067 q 692 899 736 942 q 582 857 649 857 q 472 899 515 857 q 428 1004 428 942 q 472 1109 428 1067 q 582 1151 515 1151 z \\\"},\\\"ɱ\\\":{\\\"ha\\\":1160,\\\"x_min\\\":58,\\\"x_max\\\":1111,\\\"o\\\":\\\"m 922 769 q 1059 710 1007 769 q 1111 547 1111 651 l 1111 -22 q 1026 -240 1111 -165 q 797 -315 942 -315 q 581 -253 667 -315 l 669 -93 q 719 -115 700 -108 q 764 -121 738 -121 q 817 -102 799 -121 q 836 -47 836 -83 l 836 497 q 826 553 836 538 q 799 569 817 569 q 758 551 778 569 q 722 496 739 532 l 722 0 l 447 0 l 447 497 q 438 553 447 538 q 410 569 428 569 q 369 551 389 569 q 333 496 350 532 l 333 0 l 58 0 l 58 742 l 299 742 l 318 667 q 415 745 363 721 q 533 769 467 769 q 635 742 592 769 q 700 663 678 714 q 800 744 747 718 q 922 769 853 769 z \\\"},\\\"ɰ\\\":{\\\"ha\\\":1163,\\\"x_min\\\":49,\\\"x_max\\\":1104,\\\"o\\\":\\\"m 1104 136 l 1104 -315 l 829 -287 l 829 60 q 738 -7 786 14 q 626 -28 689 -28 q 525 0 568 -28 q 460 79 482 28 q 360 -2 413 24 q 238 -28 307 -28 q 101 31 153 -28 q 49 194 49 90 l 49 742 l 324 742 l 324 244 q 333 188 324 204 q 361 172 343 172 q 401 191 382 172 q 438 246 421 210 l 438 742 l 713 742 l 713 244 q 722 188 713 204 q 750 172 732 172 q 790 191 771 172 q 826 246 810 210 l 826 742 l 1101 742 l 1101 136 l 1104 136 z \\\"},\\\"ɯ\\\":{\\\"ha\\\":1160,\\\"x_min\\\":49,\\\"x_max\\\":1101,\\\"o\\\":\\\"m 1101 742 l 1101 0 l 861 0 l 842 75 q 745 -3 797 21 q 626 -28 693 -28 q 525 0 568 -28 q 460 79 482 28 q 360 -2 413 24 q 238 -28 307 -28 q 101 31 153 -28 q 49 194 49 90 l 49 742 l 324 742 l 324 244 q 333 188 324 204 q 361 172 343 172 q 401 191 382 172 q 438 246 421 210 l 438 742 l 713 742 l 713 244 q 722 188 713 204 q 750 172 732 172 q 790 191 771 172 q 826 246 810 210 l 826 742 l 1101 742 z \\\"},\\\"n\\\":{\\\"ha\\\":792,\\\"x_min\\\":58,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 711 636 769 q 743 547 743 653 l 743 0 l 468 0 l 468 497 q 458 554 468 539 q 426 569 447 569 q 333 496 381 569 l 333 0 l 58 0 l 58 742 l 299 742 l 318 665 q 423 744 369 719 q 543 769 476 769 z \\\"},\\\"ń\\\":{\\\"ha\\\":792,\\\"x_min\\\":58,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 711 636 769 q 743 547 743 653 l 743 0 l 468 0 l 468 497 q 458 554 468 539 q 426 569 447 569 q 333 496 381 569 l 333 0 l 58 0 l 58 742 l 299 742 l 318 665 q 423 744 369 719 q 543 769 476 769 m 601 989 l 253 851 l 179 989 l 499 1189 l 601 989 z \\\"},\\\"ŉ\\\":{\\\"ha\\\":978,\\\"x_min\\\":35,\\\"x_max\\\":929,\\\"o\\\":\\\"m 142 1061 q 218 1031 188 1061 q 249 957 249 1001 q 241 910 249 932 q 217 854 233 888 l 160 743 l 50 743 l 79 869 q 35 957 35 904 q 66 1031 35 1000 q 142 1061 97 1061 m 729 769 q 876 711 822 769 q 929 547 929 653 l 929 0 l 654 0 l 654 497 q 644 554 654 539 q 613 569 633 569 q 519 496 567 569 l 519 0 l 244 0 l 244 742 l 485 742 l 504 665 q 609 744 556 719 q 729 769 663 769 z \\\"},\\\"ň\\\":{\\\"ha\\\":792,\\\"x_min\\\":58,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 711 636 769 q 743 547 743 653 l 743 0 l 468 0 l 468 497 q 458 554 468 539 q 426 569 447 569 q 333 496 381 569 l 333 0 l 58 0 l 58 742 l 299 742 l 318 665 q 423 744 369 719 q 543 769 476 769 m 688 1046 l 486 836 l 322 836 l 121 1046 l 214 1153 l 404 1019 l 594 1153 l 688 1046 z \\\"},\\\"ṋ\\\":{\\\"ha\\\":792,\\\"x_min\\\":58,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 711 636 769 q 743 547 743 653 l 743 0 l 468 0 l 468 497 q 458 554 468 539 q 426 569 447 569 q 333 496 381 569 l 333 0 l 58 0 l 58 742 l 299 742 l 318 665 q 423 744 369 719 q 543 769 476 769 m 114 -293 l 315 -83 l 479 -83 l 681 -293 l 588 -400 l 397 -267 l 207 -400 l 114 -293 z \\\"},\\\"ņ\\\":{\\\"ha\\\":792,\\\"x_min\\\":58,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 711 636 769 q 743 547 743 653 l 743 0 l 468 0 l 468 497 q 458 554 468 539 q 426 569 447 569 q 333 496 381 569 l 333 0 l 58 0 l 58 742 l 299 742 l 318 665 q 423 744 369 719 q 543 769 476 769 m 397 -86 q 489 -122 453 -86 q 525 -212 525 -158 q 517 -267 525 -242 q 488 -335 508 -292 l 418 -475 l 288 -475 l 322 -317 q 269 -212 269 -276 q 306 -123 269 -160 q 397 -86 342 -86 z \\\"},\\\"ȵ\\\":{\\\"ha\\\":1104,\\\"x_min\\\":58,\\\"x_max\\\":1104,\\\"o\\\":\\\"m 926 358 q 1053 313 1003 358 q 1104 190 1104 268 q 1025 26 1104 81 q 821 -28 946 -28 q 764 -25 800 -28 l 718 -125 l 594 -78 l 636 8 q 513 117 558 44 q 468 306 468 190 l 468 497 q 458 554 468 539 q 426 569 447 569 q 333 496 381 569 l 333 0 l 58 0 l 58 742 l 299 742 l 318 665 q 423 744 369 719 q 543 769 476 769 q 690 711 636 769 q 743 547 743 653 l 743 306 q 749 239 743 263 q 822 331 781 303 q 926 358 863 358 m 872 160 q 911 169 896 160 q 926 196 926 178 q 919 217 926 210 q 897 225 911 225 q 869 212 881 225 q 842 161 857 199 q 872 160 851 160 z \\\"},\\\"ṅ\\\":{\\\"ha\\\":792,\\\"x_min\\\":58,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 711 636 769 q 743 547 743 653 l 743 0 l 468 0 l 468 497 q 458 554 468 539 q 426 569 447 569 q 333 496 381 569 l 333 0 l 58 0 l 58 742 l 299 742 l 318 665 q 423 744 369 719 q 543 769 476 769 m 404 1151 q 515 1109 471 1151 q 558 1004 558 1067 q 515 899 558 942 q 404 857 471 857 q 294 899 338 857 q 250 1004 250 942 q 294 1109 250 1067 q 404 1151 338 1151 z \\\"},\\\"ṇ\\\":{\\\"ha\\\":792,\\\"x_min\\\":58,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 711 636 769 q 743 547 743 653 l 743 0 l 468 0 l 468 497 q 458 554 468 539 q 426 569 447 569 q 333 496 381 569 l 333 0 l 58 0 l 58 742 l 299 742 l 318 665 q 423 744 369 719 q 543 769 476 769 m 397 -367 q 287 -324 331 -367 q 243 -219 243 -282 q 287 -115 243 -157 q 397 -72 331 -72 q 508 -115 464 -72 q 551 -219 551 -157 q 508 -324 551 -282 q 397 -367 464 -367 z \\\"},\\\"ǹ\\\":{\\\"ha\\\":792,\\\"x_min\\\":58,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 711 636 769 q 743 547 743 653 l 743 0 l 468 0 l 468 497 q 458 554 468 539 q 426 569 447 569 q 333 496 381 569 l 333 0 l 58 0 l 58 742 l 299 742 l 318 665 q 423 744 369 719 q 543 769 476 769 m 629 989 l 556 851 l 207 989 l 310 1189 l 629 989 z \\\"},\\\"ŋ\\\":{\\\"ha\\\":792,\\\"x_min\\\":58,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 711 636 769 q 743 547 743 653 l 743 -22 q 659 -240 743 -165 q 432 -315 575 -315 q 213 -253 299 -315 l 301 -96 q 350 -115 331 -110 q 396 -121 369 -121 q 449 -102 431 -121 q 468 -47 468 -83 l 468 497 q 458 554 468 539 q 426 569 447 569 q 333 496 381 569 l 333 0 l 58 0 l 58 742 l 299 742 l 318 665 q 423 744 369 719 q 543 769 476 769 z \\\"},\\\"ɲ\\\":{\\\"ha\\\":792,\\\"x_min\\\":-197,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 711 636 769 q 743 547 743 653 l 743 0 l 468 0 l 468 497 q 458 554 468 539 q 426 569 447 569 q 333 496 381 569 l 333 -22 q 249 -240 333 -165 q 22 -315 165 -315 q -197 -253 -111 -315 l -108 -96 q -60 -115 -79 -110 q -14 -121 -40 -121 q 40 -102 21 -121 q 58 -47 58 -83 l 58 742 l 299 742 l 318 665 q 423 744 369 719 q 543 769 476 769 z \\\"},\\\"ɳ\\\":{\\\"ha\\\":794,\\\"x_min\\\":58,\\\"x_max\\\":999,\\\"o\\\":\\\"m 999 -253 q 779 -315 913 -315 q 552 -240 636 -315 q 468 -22 468 -165 l 468 497 q 458 554 468 539 q 426 569 447 569 q 333 496 381 569 l 333 0 l 58 0 l 58 742 l 299 742 l 318 665 q 423 744 369 719 q 543 769 476 769 q 690 711 636 769 q 743 547 743 653 l 743 -47 q 762 -102 743 -83 q 815 -121 781 -121 q 861 -115 842 -121 q 910 -96 881 -110 l 999 -253 z \\\"},\\\"ǌ\\\":{\\\"ha\\\":1183,\\\"x_min\\\":58,\\\"x_max\\\":1142,\\\"o\\\":\\\"m 543 769 q 690 711 636 769 q 743 547 743 653 l 743 0 l 468 0 l 468 497 q 458 554 468 539 q 426 569 447 569 q 333 496 381 569 l 333 0 l 58 0 l 58 742 l 299 742 l 318 665 q 423 744 369 719 q 543 769 476 769 m 1125 107 q 1036 -169 1125 -74 q 789 -315 947 -264 l 694 -115 q 781 -67 749 -90 q 831 -6 813 -43 q 850 90 850 32 l 850 742 l 1125 742 l 1125 107 m 988 1151 q 1098 1109 1054 1151 q 1142 1004 1142 1067 q 1098 899 1142 942 q 988 857 1054 857 q 877 899 921 857 q 833 1004 833 942 q 877 1109 833 1067 q 988 1151 921 1151 z \\\"},\\\"ƞ\\\":{\\\"ha\\\":792,\\\"x_min\\\":58,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 711 636 769 q 743 547 743 653 l 743 -315 l 468 -287 l 468 497 q 458 554 468 539 q 426 569 447 569 q 333 496 381 569 l 333 0 l 58 0 l 58 742 l 299 742 l 318 665 q 423 744 369 719 q 543 769 476 769 z \\\"},\\\"ñ\\\":{\\\"ha\\\":792,\\\"x_min\\\":58,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 711 636 769 q 743 547 743 653 l 743 0 l 468 0 l 468 497 q 458 554 468 539 q 426 569 447 569 q 333 496 381 569 l 333 0 l 58 0 l 58 742 l 299 742 l 318 665 q 423 744 369 719 q 543 769 476 769 m 485 864 q 435 871 456 864 q 393 893 415 878 q 355 917 367 911 q 328 924 343 924 q 288 910 303 924 q 254 864 272 896 l 125 926 q 205 1062 154 1008 q 321 1115 256 1115 q 373 1108 351 1115 q 418 1085 394 1101 q 455 1062 442 1068 q 482 1056 468 1056 q 521 1069 506 1056 q 554 1115 536 1083 l 683 1053 q 603 917 654 969 q 485 864 551 864 z \\\"},\\\"o\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 z \\\"},\\\"ó\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 m 603 989 l 254 851 l 181 989 l 500 1189 l 603 989 z \\\"},\\\"ɵ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 576 q 333 545 358 576 q 301 446 308 514 l 510 446 q 478 546 503 515 q 406 576 453 576 m 406 165 q 479 199 454 165 q 511 307 504 233 l 300 307 q 331 199 306 232 q 406 165 356 165 z \\\"},\\\"ŏ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 m 406 869 q 223 947 288 869 q 149 1142 158 1025 l 292 1165 q 333 1085 304 1114 q 406 1056 361 1056 q 478 1085 450 1056 q 519 1165 507 1114 l 663 1142 q 588 947 653 1025 q 406 869 524 869 z \\\"},\\\"ǒ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 m 689 1046 l 488 836 l 324 836 l 122 1046 l 215 1153 l 406 1019 l 596 1153 l 689 1046 z \\\"},\\\"ô\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 m 122 957 l 324 1167 l 488 1167 l 689 957 l 596 850 l 406 983 l 215 850 l 122 957 z \\\"},\\\"ố\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":896,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 z \\\"},\\\"ộ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 m 122 957 l 324 1167 l 488 1167 l 689 957 l 596 850 l 406 983 l 215 850 l 122 957 m 406 -367 q 295 -324 339 -367 q 251 -219 251 -282 q 295 -115 251 -157 q 406 -72 339 -72 q 516 -115 472 -72 q 560 -219 560 -157 q 516 -324 560 -282 q 406 -367 472 -367 z \\\"},\\\"ồ\\\":{\\\"ha\\\":811,\\\"x_min\\\":-82,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 z \\\"},\\\"ổ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":815,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 z \\\"},\\\"ỗ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 z \\\"},\\\"ȍ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 m 381 925 l 247 861 l 65 1133 l 236 1218 l 381 925 m 633 921 l 497 867 l 326 1140 l 500 1218 l 633 921 z \\\"},\\\"ö\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 m 235 1136 q 328 1099 290 1136 q 367 1008 367 1061 q 328 917 367 954 q 235 879 290 879 q 142 917 181 879 q 103 1008 103 954 q 142 1099 103 1061 q 235 1136 181 1136 m 575 1136 q 669 1099 631 1136 q 707 1008 707 1061 q 669 917 707 954 q 575 879 631 879 q 482 917 521 879 q 443 1008 443 954 q 482 1099 443 1061 q 575 1136 521 1136 z \\\"},\\\"ȫ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 z \\\"},\\\"ȯ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 m 406 1151 q 516 1109 472 1151 q 560 1004 560 1067 q 516 899 560 942 q 406 857 472 857 q 295 899 339 857 q 251 1004 251 942 q 295 1109 251 1067 q 406 1151 339 1151 z \\\"},\\\"ȱ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 z \\\"},\\\"ọ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 m 406 -367 q 295 -324 339 -367 q 251 -219 251 -282 q 295 -115 251 -157 q 406 -72 339 -72 q 516 -115 472 -72 q 560 -219 560 -157 q 516 -324 560 -282 q 406 -367 472 -367 z \\\"},\\\"ò\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 m 631 989 l 557 851 l 208 989 l 311 1189 l 631 989 z \\\"},\\\"ỏ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 m 329 978 q 405 990 382 979 q 428 1026 428 1001 q 414 1055 428 1044 q 376 1065 400 1065 q 334 1061 353 1065 q 290 1047 315 1057 l 250 1150 q 414 1189 315 1189 q 551 1147 503 1189 q 600 1039 600 1106 q 569 949 600 983 q 481 903 539 914 l 481 835 l 329 835 l 329 978 z \\\"},\\\"ơ\\\":{\\\"ha\\\":893,\\\"x_min\\\":24,\\\"x_max\\\":921,\\\"o\\\":\\\"m 921 721 q 880 597 921 643 q 763 535 839 550 q 788 369 788 464 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 q 693 656 592 769 q 733 681 721 661 q 744 738 744 700 q 728 828 744 781 l 894 849 q 921 721 921 793 m 406 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 z \\\"},\\\"ớ\\\":{\\\"ha\\\":893,\\\"x_min\\\":24,\\\"x_max\\\":921,\\\"o\\\":\\\"m 254 851 l 181 989 l 500 1189 l 603 989 l 254 851 m 921 721 q 880 597 921 643 q 763 535 839 550 q 788 369 788 464 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 q 693 656 592 769 q 733 681 721 661 q 744 738 744 700 q 728 828 744 781 l 894 849 q 921 721 921 793 m 406 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 z \\\"},\\\"ợ\\\":{\\\"ha\\\":893,\\\"x_min\\\":24,\\\"x_max\\\":921,\\\"o\\\":\\\"m 921 721 q 880 597 921 643 q 763 535 839 550 q 788 369 788 464 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 q 693 656 592 769 q 733 681 721 661 q 744 738 744 700 q 728 828 744 781 l 894 849 q 921 721 921 793 m 406 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 m 406 -72 q 516 -115 472 -72 q 560 -219 560 -157 q 516 -324 560 -282 q 406 -367 472 -367 q 295 -324 339 -367 q 251 -219 251 -282 q 295 -115 251 -157 q 406 -72 339 -72 z \\\"},\\\"ờ\\\":{\\\"ha\\\":893,\\\"x_min\\\":24,\\\"x_max\\\":921,\\\"o\\\":\\\"m 557 851 l 208 989 l 311 1189 l 631 989 l 557 851 m 921 721 q 880 597 921 643 q 763 535 839 550 q 788 369 788 464 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 q 693 656 592 769 q 733 681 721 661 q 744 738 744 700 q 728 828 744 781 l 894 849 q 921 721 921 793 m 406 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 z \\\"},\\\"ở\\\":{\\\"ha\\\":893,\\\"x_min\\\":24,\\\"x_max\\\":921,\\\"o\\\":\\\"m 376 1065 q 334 1061 353 1065 q 290 1047 315 1057 l 250 1150 q 414 1189 315 1189 q 551 1147 503 1189 q 600 1039 600 1106 q 569 949 600 983 q 481 903 539 914 l 481 835 l 329 835 l 329 978 q 405 990 382 979 q 428 1026 428 1001 q 414 1055 428 1044 q 376 1065 400 1065 m 921 721 q 880 597 921 643 q 763 535 839 550 q 788 369 788 464 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 q 693 656 592 769 q 733 681 721 661 q 744 738 744 700 q 728 828 744 781 l 894 849 q 921 721 921 793 m 406 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 z \\\"},\\\"ỡ\\\":{\\\"ha\\\":893,\\\"x_min\\\":24,\\\"x_max\\\":921,\\\"o\\\":\\\"m 329 924 q 289 910 304 924 q 256 864 274 896 l 126 926 q 206 1062 156 1008 q 322 1115 257 1115 q 374 1108 353 1115 q 419 1085 396 1101 q 456 1062 443 1068 q 483 1056 469 1056 q 522 1069 507 1056 q 556 1115 538 1083 l 685 1053 q 604 917 656 969 q 486 864 553 864 q 437 871 457 864 q 394 893 417 878 q 356 917 368 911 q 329 924 344 924 m 921 721 q 880 597 921 643 q 763 535 839 550 q 788 369 788 464 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 q 693 656 592 769 q 733 681 721 661 q 744 738 744 700 q 728 828 744 781 l 894 849 q 921 721 921 793 m 406 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 z \\\"},\\\"ő\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 m 522 1085 l 344 839 l 226 900 l 353 1174 l 522 1085 m 771 1063 l 581 826 l 467 894 l 607 1161 l 771 1063 z \\\"},\\\"ƣ\\\":{\\\"ha\\\":1183,\\\"x_min\\\":24,\\\"x_max\\\":1125,\\\"o\\\":\\\"m 826 769 q 1044 694 963 769 q 1125 476 1125 619 l 1125 -315 l 850 -287 l 850 501 q 833 558 850 540 q 783 575 817 575 q 746 571 767 575 q 788 369 788 483 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 q 613 718 522 769 q 712 758 663 746 q 826 769 761 769 m 406 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 z \\\"},\\\"ȏ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 m 406 1121 q 588 1043 524 1121 q 663 849 653 965 l 519 825 q 478 906 507 876 q 406 935 450 935 q 333 906 361 935 q 292 825 304 876 l 149 849 q 223 1043 158 965 q 406 1121 288 1121 z \\\"},\\\"ō\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 m 179 900 l 179 1086 l 631 1086 l 631 900 l 179 900 z \\\"},\\\"ṓ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 z \\\"},\\\"ṑ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 z \\\"},\\\"ꞷ\\\":{\\\"ha\\\":1072,\\\"x_min\\\":28,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 956 742 q 1044 339 1044 554 q 967 65 1044 157 q 760 -28 890 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 103 64 179 -28 q 28 339 28 156 q 117 742 28 554 l 360 742 q 311 535 328 624 q 294 356 294 447 q 311 213 294 257 q 361 169 328 169 q 398 188 386 169 q 410 264 410 207 l 410 493 l 663 526 l 663 264 q 676 188 663 207 q 715 169 689 169 q 763 213 747 169 q 778 356 778 256 q 761 536 778 447 q 713 742 744 625 l 956 742 z \\\"},\\\"ɷ\\\":{\\\"ha\\\":1064,\\\"x_min\\\":24,\\\"x_max\\\":1040,\\\"o\\\":\\\"m 533 769 q 906 664 771 769 q 1040 339 1040 558 q 963 65 1040 157 q 756 -28 886 -28 q 607 10 661 -28 q 531 138 553 49 q 454 10 506 49 q 311 -28 403 -28 q 99 64 175 -28 q 24 339 24 156 q 160 664 24 558 q 533 769 296 769 m 711 169 q 758 213 743 169 q 774 356 774 256 q 717 526 774 467 q 533 586 661 586 q 347 526 403 586 q 290 356 290 467 q 307 213 290 257 q 357 169 324 169 q 394 188 382 169 q 406 264 406 207 l 406 410 l 658 443 l 658 264 q 672 188 658 207 q 711 169 685 169 z \\\"},\\\"ǫ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 535 -10 q 432 -71 461 -39 q 403 -132 403 -103 q 474 -193 403 -193 q 558 -182 510 -193 l 542 -342 q 439 -353 493 -353 q 279 -306 342 -353 q 217 -178 217 -258 q 296 -17 217 -82 q 95 113 167 13 q 24 372 24 213 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 q 685 665 583 769 q 788 369 788 561 q 721 126 788 225 q 535 -10 654 26 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 z \\\"},\\\"ǭ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 631 900 l 179 900 l 179 1086 l 631 1086 l 631 900 m 535 -10 q 432 -71 461 -39 q 403 -132 403 -103 q 474 -193 403 -193 q 558 -182 510 -193 l 542 -342 q 439 -353 493 -353 q 279 -306 342 -353 q 217 -178 217 -258 q 296 -17 217 -82 q 95 113 167 13 q 24 372 24 213 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 q 685 665 583 769 q 788 369 788 561 q 721 126 788 225 q 535 -10 654 26 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 z \\\"},\\\"ɔ\\\":{\\\"ha\\\":654,\\\"x_min\\\":-14,\\\"x_max\\\":631,\\\"o\\\":\\\"m 249 -28 q 103 -6 167 -28 q -14 57 40 15 l 108 214 q 169 180 142 190 q 232 169 197 169 q 320 217 292 169 q 349 369 349 265 q 322 525 349 478 q 240 572 296 572 q 107 528 172 572 l -7 678 q 261 769 100 769 q 531 666 432 769 q 631 369 631 563 q 585 159 631 249 q 453 21 539 69 q 249 -28 367 -28 z \\\"},\\\"ø\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 629 711 q 747 576 706 663 q 788 369 788 489 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 375 -26 385 -28 l 324 -192 l 129 -135 l 182 31 q 65 167 106 81 q 24 372 24 253 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 q 436 768 426 769 l 490 935 l 685 878 l 629 711 m 406 572 q 310 524 342 572 q 278 372 278 475 q 296 225 278 269 l 411 572 l 406 572 m 406 169 q 501 218 469 169 q 533 369 533 267 q 515 517 533 472 l 400 169 l 406 169 z \\\"},\\\"ǿ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 629 711 q 747 576 706 663 q 788 369 788 489 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 375 -26 385 -28 l 324 -192 l 129 -135 l 182 31 q 65 167 106 81 q 24 372 24 253 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 q 436 768 426 769 l 490 935 l 685 878 l 629 711 m 406 572 q 310 524 342 572 q 278 372 278 475 q 296 225 278 269 l 411 572 l 406 572 m 406 169 q 501 218 469 169 q 533 369 533 267 q 515 517 533 472 l 400 169 l 406 169 m 603 989 l 254 851 l 181 989 l 500 1189 l 603 989 z \\\"},\\\"õ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 m 486 864 q 437 871 457 864 q 394 893 417 878 q 356 917 368 911 q 329 924 344 924 q 289 910 304 924 q 256 864 274 896 l 126 926 q 206 1062 156 1008 q 322 1115 257 1115 q 374 1108 353 1115 q 419 1085 396 1101 q 456 1062 443 1068 q 483 1056 469 1056 q 522 1069 507 1056 q 556 1115 538 1083 l 685 1053 q 604 917 656 969 q 486 864 553 864 z \\\"},\\\"ṍ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 z \\\"},\\\"ȭ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 z \\\"},\\\"ȣ\\\":{\\\"ha\\\":803,\\\"x_min\\\":24,\\\"x_max\\\":779,\\\"o\\\":\\\"m 621 588 q 779 321 779 519 q 735 143 779 222 q 606 18 692 64 q 401 -28 521 -28 q 197 17 282 -28 q 67 140 111 61 q 24 321 24 219 q 176 583 24 511 q 76 778 76 638 l 76 1033 l 346 1033 l 346 722 q 358 673 346 690 q 401 656 371 656 q 446 670 435 656 q 457 722 457 685 l 457 1033 l 726 1033 l 726 778 q 621 588 726 649 m 401 168 q 477 207 454 168 q 500 325 500 246 q 476 444 500 404 q 401 485 453 485 q 326 444 350 485 q 303 325 303 404 q 326 208 303 247 q 401 168 350 168 z \\\"},\\\"œ\\\":{\\\"ha\\\":1257,\\\"x_min\\\":24,\\\"x_max\\\":1236,\\\"o\\\":\\\"m 1236 381 q 1231 293 1236 346 l 781 293 q 827 192 792 218 q 929 167 863 167 q 1008 183 968 167 q 1097 232 1049 199 l 1208 82 q 903 -28 1074 -28 q 646 69 743 -28 q 404 -28 553 -28 q 125 76 226 -28 q 24 372 24 181 q 70 581 24 492 q 203 720 117 671 q 404 769 289 769 q 643 675 544 769 q 872 769 735 769 q 1064 724 982 769 q 1191 590 1146 678 q 1236 381 1236 503 m 965 458 q 945 560 964 524 q 878 596 926 596 q 809 564 832 596 q 779 449 786 532 l 965 449 l 965 458 m 404 169 q 479 217 456 169 q 503 372 503 264 q 479 524 503 476 q 404 572 456 572 q 329 524 353 572 q 306 372 306 476 q 329 217 306 264 q 404 169 353 169 z \\\"},\\\"p\\\":{\\\"ha\\\":825,\\\"x_min\\\":58,\\\"x_max\\\":801,\\\"o\\\":\\\"m 524 769 q 731 665 661 769 q 801 374 801 561 q 765 167 801 258 q 660 24 728 76 q 506 -28 593 -28 q 333 46 400 -28 l 333 -287 l 58 -315 l 58 742 l 303 742 l 314 669 q 413 746 358 722 q 524 769 468 769 m 415 168 q 519 369 519 168 q 508 499 519 454 q 478 558 497 543 q 431 572 460 572 q 333 503 372 572 l 333 219 q 371 180 351 192 q 415 168 390 168 z \\\"},\\\"ṕ\\\":{\\\"ha\\\":825,\\\"x_min\\\":58,\\\"x_max\\\":801,\\\"o\\\":\\\"m 524 769 q 731 665 661 769 q 801 374 801 561 q 765 167 801 258 q 660 24 728 76 q 506 -28 593 -28 q 333 46 400 -28 l 333 -287 l 58 -315 l 58 742 l 303 742 l 314 669 q 413 746 358 722 q 524 769 468 769 m 415 168 q 519 369 519 168 q 508 499 519 454 q 478 558 497 543 q 431 572 460 572 q 333 503 372 572 l 333 219 q 371 180 351 192 q 415 168 390 168 m 614 989 l 265 851 l 192 989 l 511 1189 l 614 989 z \\\"},\\\"ṗ\\\":{\\\"ha\\\":825,\\\"x_min\\\":58,\\\"x_max\\\":801,\\\"o\\\":\\\"m 524 769 q 731 665 661 769 q 801 374 801 561 q 765 167 801 258 q 660 24 728 76 q 506 -28 593 -28 q 333 46 400 -28 l 333 -287 l 58 -315 l 58 742 l 303 742 l 314 669 q 413 746 358 722 q 524 769 468 769 m 415 168 q 519 369 519 168 q 508 499 519 454 q 478 558 497 543 q 431 572 460 572 q 333 503 372 572 l 333 219 q 371 180 351 192 q 415 168 390 168 m 417 1151 q 527 1109 483 1151 q 571 1004 571 1067 q 527 899 571 942 q 417 857 483 857 q 306 899 350 857 q 263 1004 263 942 q 306 1109 263 1067 q 417 1151 350 1151 z \\\"},\\\"ɸ\\\":{\\\"ha\\\":950,\\\"x_min\\\":19,\\\"x_max\\\":931,\\\"o\\\":\\\"m 931 375 q 841 115 931 204 q 611 8 751 25 l 610 -287 l 335 -315 l 336 8 q 109 110 199 25 q 19 367 19 196 q 108 626 19 536 q 335 732 196 715 l 335 1033 l 610 1061 l 610 733 q 840 633 750 718 q 931 375 931 547 m 582 174 q 648 228 626 181 q 669 375 669 275 q 647 519 669 476 q 582 569 625 561 l 582 174 m 281 367 q 364 174 281 197 l 364 567 q 301 513 322 560 q 281 367 281 467 z \\\"},\\\"ƥ\\\":{\\\"ha\\\":825,\\\"x_min\\\":58,\\\"x_max\\\":801,\\\"o\\\":\\\"m 518 769 q 731 666 660 769 q 801 374 801 563 q 765 167 801 258 q 660 24 728 76 q 506 -28 593 -28 q 333 46 400 -28 l 333 -287 l 58 -315 l 58 785 q 139 983 58 906 q 372 1061 219 1061 q 490 1047 431 1061 q 590 1010 550 1032 l 518 839 q 410 864 464 864 q 351 843 369 864 q 333 771 333 822 l 333 683 q 424 749 375 729 q 518 769 472 769 m 415 168 q 519 369 519 168 q 508 499 519 456 q 476 558 496 543 q 425 572 457 572 q 333 503 372 572 l 333 219 q 371 180 351 192 q 415 168 390 168 z \\\"},\\\"þ\\\":{\\\"ha\\\":825,\\\"x_min\\\":58,\\\"x_max\\\":801,\\\"o\\\":\\\"m 518 769 q 731 666 660 769 q 801 374 801 563 q 765 167 801 258 q 660 24 728 76 q 506 -28 593 -28 q 333 46 400 -28 l 333 -287 l 58 -315 l 58 1033 l 333 1061 l 333 683 q 424 749 375 729 q 518 769 472 769 m 415 168 q 519 369 519 168 q 508 499 519 456 q 476 558 496 543 q 425 572 457 572 q 333 503 372 572 l 333 219 q 371 180 351 192 q 415 168 390 168 z \\\"},\\\"q\\\":{\\\"ha\\\":828,\\\"x_min\\\":24,\\\"x_max\\\":769,\\\"o\\\":\\\"m 769 742 l 769 -315 l 494 -287 l 494 57 q 306 -28 422 -28 q 94 79 165 -28 q 24 375 24 186 q 63 579 24 489 q 172 719 101 669 q 335 769 243 769 q 517 690 442 769 l 529 742 l 769 742 m 399 169 q 494 235 457 169 l 494 532 q 456 563 474 553 q 414 574 438 574 q 335 526 364 574 q 306 372 306 478 q 330 210 306 250 q 399 169 354 169 z \\\"},\\\"ʠ\\\":{\\\"ha\\\":828,\\\"x_min\\\":24,\\\"x_max\\\":992,\\\"o\\\":\\\"m 788 1061 q 992 1010 901 1061 l 919 840 q 831 864 869 864 q 784 846 799 864 q 769 789 769 828 l 769 -315 l 494 -287 l 494 56 q 306 -28 421 -28 q 94 79 165 -28 q 24 375 24 186 q 61 580 24 490 q 167 719 99 669 q 326 769 236 769 q 494 697 435 769 l 494 785 q 569 983 494 906 q 788 1061 644 1061 m 401 169 q 494 235 457 169 l 494 532 q 456 563 474 553 q 414 574 438 574 q 335 526 364 574 q 306 372 306 478 q 318 243 306 288 q 351 184 331 199 q 401 169 371 169 z \\\"},\\\"ɋ\\\":{\\\"ha\\\":828,\\\"x_min\\\":24,\\\"x_max\\\":881,\\\"o\\\":\\\"m 881 -290 q 815 -308 856 -301 q 728 -315 774 -315 q 555 -253 615 -315 q 494 -74 494 -190 l 494 56 q 306 -28 421 -28 q 94 79 165 -28 q 24 375 24 186 q 62 580 24 490 q 172 719 100 669 q 340 769 243 769 q 433 750 388 769 q 517 690 478 731 l 529 742 l 769 742 l 769 -62 q 803 -100 769 -100 q 832 -94 818 -100 l 881 -290 m 401 169 q 494 235 457 169 l 494 532 q 456 563 474 553 q 414 574 438 574 q 335 526 364 574 q 306 372 306 478 q 318 243 306 288 q 351 184 331 199 q 401 169 371 169 z \\\"},\\\"ȹ\\\":{\\\"ha\\\":1206,\\\"x_min\\\":24,\\\"x_max\\\":1182,\\\"o\\\":\\\"m 919 769 q 1115 665 1047 769 q 1182 374 1182 560 q 1146 168 1182 260 q 1047 24 1110 76 q 908 -28 985 -28 q 815 -6 860 -28 q 742 58 769 17 l 742 -287 l 467 -315 l 467 50 q 288 -28 399 -28 q 91 80 158 -28 q 24 375 24 188 q 60 578 24 489 q 164 719 97 668 q 315 769 231 769 q 488 667 417 769 l 499 742 l 711 742 l 724 661 q 812 746 767 722 q 919 769 857 769 m 383 169 q 426 185 404 169 q 467 235 447 201 l 467 517 q 431 560 449 547 q 392 574 414 574 q 329 526 353 574 q 306 372 306 478 q 328 211 306 253 q 383 169 350 169 m 819 168 q 876 217 851 168 q 900 369 900 267 q 891 499 900 454 q 867 558 882 543 q 828 572 851 572 q 785 557 808 572 q 742 511 761 542 l 742 228 q 778 182 760 196 q 819 168 797 168 z \\\"},\\\"r\\\":{\\\"ha\\\":569,\\\"x_min\\\":58,\\\"x_max\\\":583,\\\"o\\\":\\\"m 508 765 q 583 753 544 765 l 540 488 q 472 499 503 499 q 381 458 411 499 q 333 338 351 418 l 333 0 l 58 0 l 58 742 l 299 742 l 321 603 q 396 721 344 676 q 508 765 447 765 z \\\"},\\\"ŕ\\\":{\\\"ha\\\":569,\\\"x_min\\\":58,\\\"x_max\\\":583,\\\"o\\\":\\\"m 508 765 q 583 753 544 765 l 540 488 q 472 499 503 499 q 381 458 411 499 q 333 338 351 418 l 333 0 l 58 0 l 58 742 l 299 742 l 321 603 q 396 721 344 676 q 508 765 447 765 m 518 989 l 169 851 l 96 989 l 415 1189 l 518 989 z \\\"},\\\"ɤ\\\":{\\\"ha\\\":808,\\\"x_min\\\":-21,\\\"x_max\\\":829,\\\"o\\\":\\\"m 667 769 q 753 758 715 769 q 829 725 790 747 l 754 567 q 728 576 742 572 q 696 579 714 579 q 658 568 674 579 q 628 531 642 557 l 532 349 q 594 240 575 285 q 614 143 614 194 q 562 19 614 67 q 404 -28 510 -28 q 249 20 303 -28 q 194 143 194 68 q 213 234 194 189 q 275 350 232 279 l 181 531 q 151 569 167 558 q 113 579 136 579 q 81 576 94 579 q 54 567 67 572 l -21 725 q 56 758 18 747 q 142 769 93 769 q 282 724 232 769 q 374 575 332 679 l 404 499 l 435 575 q 526 724 476 679 q 667 769 576 769 m 435 156 q 428 187 435 172 q 404 232 421 201 q 391 208 400 224 q 378 179 382 192 q 374 156 374 167 q 404 125 374 125 q 435 156 435 125 z \\\"},\\\"ř\\\":{\\\"ha\\\":569,\\\"x_min\\\":38,\\\"x_max\\\":604,\\\"o\\\":\\\"m 508 765 q 583 753 544 765 l 540 488 q 472 499 503 499 q 381 458 411 499 q 333 338 351 418 l 333 0 l 58 0 l 58 742 l 299 742 l 321 603 q 396 721 344 676 q 508 765 447 765 m 604 1046 l 403 836 l 239 836 l 38 1046 l 131 1153 l 321 1019 l 511 1153 l 604 1046 z \\\"},\\\"ŗ\\\":{\\\"ha\\\":569,\\\"x_min\\\":58,\\\"x_max\\\":583,\\\"o\\\":\\\"m 508 765 q 583 753 544 765 l 540 488 q 472 499 503 499 q 381 458 411 499 q 333 338 351 418 l 333 0 l 58 0 l 58 742 l 299 742 l 321 603 q 396 721 344 676 q 508 765 447 765 m 196 -86 q 288 -122 251 -86 q 324 -212 324 -158 q 315 -267 324 -242 q 286 -335 307 -292 l 217 -475 l 86 -475 l 121 -317 q 68 -212 68 -276 q 104 -123 68 -160 q 196 -86 140 -86 z \\\"},\\\"ȑ\\\":{\\\"ha\\\":569,\\\"x_min\\\":-19,\\\"x_max\\\":583,\\\"o\\\":\\\"m 508 765 q 583 753 544 765 l 540 488 q 472 499 503 499 q 381 458 411 499 q 333 338 351 418 l 333 0 l 58 0 l 58 742 l 299 742 l 321 603 q 396 721 344 676 q 508 765 447 765 m 296 925 l 163 861 l -19 1133 l 151 1218 l 296 925 m 549 921 l 413 867 l 242 1140 l 415 1218 l 549 921 z \\\"},\\\"ṛ\\\":{\\\"ha\\\":569,\\\"x_min\\\":42,\\\"x_max\\\":583,\\\"o\\\":\\\"m 508 765 q 583 753 544 765 l 540 488 q 472 499 503 499 q 381 458 411 499 q 333 338 351 418 l 333 0 l 58 0 l 58 742 l 299 742 l 321 603 q 396 721 344 676 q 508 765 447 765 m 196 -367 q 85 -324 129 -367 q 42 -219 42 -282 q 85 -115 42 -157 q 196 -72 129 -72 q 306 -115 263 -72 q 350 -219 350 -157 q 306 -324 350 -282 q 196 -367 263 -367 z \\\"},\\\"ɾ\\\":{\\\"ha\\\":563,\\\"x_min\\\":49,\\\"x_max\\\":579,\\\"o\\\":\\\"m 360 769 q 579 707 493 769 l 490 550 q 442 569 461 564 q 396 575 422 575 q 342 556 361 575 q 324 501 324 538 l 324 0 l 49 0 l 49 476 q 133 694 49 619 q 360 769 217 769 z \\\"},\\\"ɿ\\\":{\\\"ha\\\":563,\\\"x_min\\\":-17,\\\"x_max\\\":514,\\\"o\\\":\\\"m 203 769 q 430 694 346 769 q 514 476 514 619 l 514 0 l 239 0 l 239 501 q 220 556 239 538 q 167 575 201 575 q 121 569 140 575 q 72 550 101 564 l -17 707 q 203 769 69 769 z \\\"},\\\"ɽ\\\":{\\\"ha\\\":569,\\\"x_min\\\":58,\\\"x_max\\\":589,\\\"o\\\":\\\"m 589 -253 q 369 -315 503 -315 q 142 -240 226 -315 q 58 -22 58 -165 l 58 742 l 299 742 l 321 603 q 396 721 344 676 q 508 765 447 765 q 583 753 544 765 l 540 488 q 472 499 503 499 q 381 458 411 499 q 333 338 351 418 l 333 -47 q 352 -102 333 -83 q 406 -121 371 -121 q 451 -115 432 -121 q 500 -96 471 -110 l 589 -253 z \\\"},\\\"ɻ\\\":{\\\"ha\\\":569,\\\"x_min\\\":-14,\\\"x_max\\\":767,\\\"o\\\":\\\"m 767 -253 q 547 -315 681 -315 q 320 -240 404 -315 q 236 -22 236 -165 l 236 107 q 163 12 210 47 q 61 -24 115 -24 q -14 -11 25 -24 l 29 254 q 97 243 67 243 q 188 283 158 243 q 236 404 218 324 l 236 742 l 511 742 l 511 -47 q 530 -102 511 -83 q 583 -121 549 -121 q 629 -115 610 -121 q 678 -96 649 -110 l 767 -253 z \\\"},\\\"ȓ\\\":{\\\"ha\\\":569,\\\"x_min\\\":58,\\\"x_max\\\":583,\\\"o\\\":\\\"m 508 765 q 583 753 544 765 l 540 488 q 472 499 503 499 q 381 458 411 499 q 333 338 351 418 l 333 0 l 58 0 l 58 742 l 299 742 l 321 603 q 396 721 344 676 q 508 765 447 765 m 321 1121 q 503 1043 439 1121 q 578 849 568 965 l 435 825 q 394 906 422 876 q 321 935 365 935 q 248 906 276 935 q 207 825 219 876 l 64 849 q 138 1043 74 965 q 321 1121 203 1121 z \\\"},\\\"ɼ\\\":{\\\"ha\\\":569,\\\"x_min\\\":58,\\\"x_max\\\":583,\\\"o\\\":\\\"m 508 765 q 583 753 544 765 l 540 488 q 472 499 503 499 q 381 458 411 499 q 333 338 351 418 l 333 -287 l 58 -315 l 58 742 l 299 742 l 321 603 q 396 721 344 676 q 508 765 447 765 z \\\"},\\\"ɺ\\\":{\\\"ha\\\":569,\\\"x_min\\\":-14,\\\"x_max\\\":511,\\\"o\\\":\\\"m 511 1033 l 511 0 l 271 0 l 249 139 q 174 21 225 65 q 61 -24 122 -24 q -14 -11 25 -24 l 29 254 q 97 243 67 243 q 188 283 158 243 q 236 404 218 324 l 236 1061 l 511 1033 z \\\"},\\\"ɍ\\\":{\\\"ha\\\":608,\\\"x_min\\\":0,\\\"x_max\\\":622,\\\"o\\\":\\\"m 547 765 q 622 753 582 765 l 579 488 q 511 499 542 499 q 422 460 451 499 q 374 346 392 422 l 472 346 l 472 158 l 372 158 l 372 0 l 97 0 l 97 158 l 0 158 l 0 346 l 97 346 l 97 742 l 338 742 l 360 603 q 435 721 383 676 q 547 765 486 765 z \\\"},\\\"ɹ\\\":{\\\"ha\\\":569,\\\"x_min\\\":-14,\\\"x_max\\\":511,\\\"o\\\":\\\"m 511 742 l 511 0 l 271 0 l 249 139 q 174 21 225 65 q 61 -24 122 -24 q -14 -11 25 -24 l 29 254 q 97 243 67 243 q 188 283 158 243 q 236 404 218 324 l 236 742 l 511 742 z \\\"},\\\"s\\\":{\\\"ha\\\":678,\\\"x_min\\\":-7,\\\"x_max\\\":671,\\\"o\\\":\\\"m 356 769 q 513 744 438 769 q 640 674 589 718 l 543 525 q 457 565 503 550 q 367 579 411 579 q 304 546 304 579 q 313 523 304 532 q 352 501 321 514 q 453 467 383 488 q 617 378 564 432 q 671 228 671 325 q 626 94 671 153 q 501 4 581 36 q 319 -28 421 -28 q 137 3 222 -28 q -7 90 51 35 l 124 235 q 215 181 165 201 q 313 161 264 161 q 370 173 350 161 q 390 207 390 185 q 381 237 390 226 q 344 258 372 247 q 247 289 317 268 q 32 529 32 353 q 70 651 32 597 q 181 738 108 706 q 356 769 254 769 z \\\"},\\\"ś\\\":{\\\"ha\\\":678,\\\"x_min\\\":-7,\\\"x_max\\\":671,\\\"o\\\":\\\"m 356 769 q 513 744 438 769 q 640 674 589 718 l 543 525 q 457 565 503 550 q 367 579 411 579 q 304 546 304 579 q 313 523 304 532 q 352 501 321 514 q 453 467 383 488 q 617 378 564 432 q 671 228 671 325 q 626 94 671 153 q 501 4 581 36 q 319 -28 421 -28 q 137 3 222 -28 q -7 90 51 35 l 124 235 q 215 181 165 201 q 313 161 264 161 q 370 173 350 161 q 390 207 390 185 q 381 237 390 226 q 344 258 372 247 q 247 289 317 268 q 32 529 32 353 q 70 651 32 597 q 181 738 108 706 q 356 769 254 769 m 546 989 l 197 851 l 124 989 l 443 1189 l 546 989 z \\\"},\\\"ꞌ\\\":{\\\"ha\\\":347,\\\"x_min\\\":56,\\\"x_max\\\":292,\\\"o\\\":\\\"m 56 967 l 292 967 l 261 508 l 86 508 l 56 967 z \\\"},\\\"š\\\":{\\\"ha\\\":678,\\\"x_min\\\":-7,\\\"x_max\\\":671,\\\"o\\\":\\\"m 356 769 q 513 744 438 769 q 640 674 589 718 l 543 525 q 457 565 503 550 q 367 579 411 579 q 304 546 304 579 q 313 523 304 532 q 352 501 321 514 q 453 467 383 488 q 617 378 564 432 q 671 228 671 325 q 626 94 671 153 q 501 4 581 36 q 319 -28 421 -28 q 137 3 222 -28 q -7 90 51 35 l 124 235 q 215 181 165 201 q 313 161 264 161 q 370 173 350 161 q 390 207 390 185 q 381 237 390 226 q 344 258 372 247 q 247 289 317 268 q 32 529 32 353 q 70 651 32 597 q 181 738 108 706 q 356 769 254 769 m 632 1046 l 431 836 l 267 836 l 65 1046 l 158 1153 l 349 1019 l 539 1153 l 632 1046 z \\\"},\\\"ş\\\":{\\\"ha\\\":678,\\\"x_min\\\":-7,\\\"x_max\\\":671,\\\"o\\\":\\\"m 671 228 q 603 67 671 133 q 419 -19 535 1 l 419 -60 q 572 -210 572 -79 q 511 -333 572 -285 q 344 -382 450 -382 q 248 -369 293 -382 q 171 -335 203 -356 l 231 -215 q 319 -240 276 -240 q 382 -207 382 -240 q 351 -176 382 -185 q 251 -167 321 -167 l 269 -25 q 115 13 188 -18 q -7 90 43 43 l 124 235 q 215 181 165 201 q 313 161 264 161 q 370 173 350 161 q 390 207 390 185 q 381 237 390 226 q 344 258 372 247 q 247 289 317 268 q 32 529 32 353 q 70 651 32 597 q 181 738 108 706 q 356 769 254 769 q 513 744 438 769 q 640 674 589 718 l 543 525 q 457 565 503 550 q 367 579 411 579 q 304 546 304 579 q 313 523 304 532 q 352 501 321 514 q 453 467 383 488 q 617 378 564 432 q 671 228 671 325 z \\\"},\\\"ŝ\\\":{\\\"ha\\\":678,\\\"x_min\\\":-7,\\\"x_max\\\":671,\\\"o\\\":\\\"m 356 769 q 513 744 438 769 q 640 674 589 718 l 543 525 q 457 565 503 550 q 367 579 411 579 q 304 546 304 579 q 313 523 304 532 q 352 501 321 514 q 453 467 383 488 q 617 378 564 432 q 671 228 671 325 q 626 94 671 153 q 501 4 581 36 q 319 -28 421 -28 q 137 3 222 -28 q -7 90 51 35 l 124 235 q 215 181 165 201 q 313 161 264 161 q 370 173 350 161 q 390 207 390 185 q 381 237 390 226 q 344 258 372 247 q 247 289 317 268 q 32 529 32 353 q 70 651 32 597 q 181 738 108 706 q 356 769 254 769 m 65 957 l 267 1167 l 431 1167 l 632 957 l 539 850 l 349 983 l 158 850 l 65 957 z \\\"},\\\"ș\\\":{\\\"ha\\\":678,\\\"x_min\\\":-7,\\\"x_max\\\":671,\\\"o\\\":\\\"m 356 769 q 513 744 438 769 q 640 674 589 718 l 543 525 q 457 565 503 550 q 367 579 411 579 q 304 546 304 579 q 313 523 304 532 q 352 501 321 514 q 453 467 383 488 q 617 378 564 432 q 671 228 671 325 q 626 94 671 153 q 501 4 581 36 q 319 -28 421 -28 q 137 3 222 -28 q -7 90 51 35 l 124 235 q 215 181 165 201 q 313 161 264 161 q 370 173 350 161 q 390 207 390 185 q 381 237 390 226 q 344 258 372 247 q 247 289 317 268 q 32 529 32 353 q 70 651 32 597 q 181 738 108 706 q 356 769 254 769 m 342 -86 q 433 -122 397 -86 q 469 -212 469 -158 q 461 -267 469 -242 q 432 -335 453 -292 l 363 -475 l 232 -475 l 267 -317 q 214 -212 214 -276 q 250 -123 214 -160 q 342 -86 286 -86 z \\\"},\\\"ṡ\\\":{\\\"ha\\\":678,\\\"x_min\\\":-7,\\\"x_max\\\":671,\\\"o\\\":\\\"m 356 769 q 513 744 438 769 q 640 674 589 718 l 543 525 q 457 565 503 550 q 367 579 411 579 q 304 546 304 579 q 313 523 304 532 q 352 501 321 514 q 453 467 383 488 q 617 378 564 432 q 671 228 671 325 q 626 94 671 153 q 501 4 581 36 q 319 -28 421 -28 q 137 3 222 -28 q -7 90 51 35 l 124 235 q 215 181 165 201 q 313 161 264 161 q 370 173 350 161 q 390 207 390 185 q 381 237 390 226 q 344 258 372 247 q 247 289 317 268 q 32 529 32 353 q 70 651 32 597 q 181 738 108 706 q 356 769 254 769 m 349 1151 q 459 1109 415 1151 q 503 1004 503 1067 q 459 899 503 942 q 349 857 415 857 q 238 899 282 857 q 194 1004 194 942 q 238 1109 194 1067 q 349 1151 282 1151 z \\\"},\\\"ṣ\\\":{\\\"ha\\\":678,\\\"x_min\\\":-7,\\\"x_max\\\":671,\\\"o\\\":\\\"m 356 769 q 513 744 438 769 q 640 674 589 718 l 543 525 q 457 565 503 550 q 367 579 411 579 q 304 546 304 579 q 313 523 304 532 q 352 501 321 514 q 453 467 383 488 q 617 378 564 432 q 671 228 671 325 q 626 94 671 153 q 501 4 581 36 q 319 -28 421 -28 q 137 3 222 -28 q -7 90 51 35 l 124 235 q 215 181 165 201 q 313 161 264 161 q 370 173 350 161 q 390 207 390 185 q 381 237 390 226 q 344 258 372 247 q 247 289 317 268 q 32 529 32 353 q 70 651 32 597 q 181 738 108 706 q 356 769 254 769 m 342 -367 q 231 -324 275 -367 q 188 -219 188 -282 q 231 -115 188 -157 q 342 -72 275 -72 q 452 -115 408 -72 q 496 -219 496 -157 q 452 -324 496 -282 q 342 -367 408 -367 z \\\"},\\\"ß\\\":{\\\"ha\\\":853,\\\"x_min\\\":58,\\\"x_max\\\":846,\\\"o\\\":\\\"m 415 1061 q 584 1032 514 1061 q 690 954 654 1003 q 725 849 725 906 q 705 765 725 799 q 647 692 685 731 q 608 644 621 664 q 594 603 594 625 q 614 558 594 578 q 678 506 633 538 q 763 438 729 469 q 821 354 796 406 q 846 233 846 303 q 763 42 846 113 q 546 -28 679 -28 q 451 -17 499 -28 q 367 13 403 -6 l 449 197 q 508 182 478 182 q 561 239 561 182 q 540 306 561 279 q 475 364 518 332 q 392 443 421 404 q 363 550 363 482 q 377 637 363 606 q 421 703 392 668 q 456 752 444 731 q 467 808 467 774 q 451 856 467 838 q 408 874 436 874 q 351 842 369 874 q 333 746 333 810 l 333 0 l 58 0 l 58 736 q 151 975 58 889 q 415 1061 243 1061 z \\\"},\\\"ʂ\\\":{\\\"ha\\\":678,\\\"x_min\\\":-7,\\\"x_max\\\":671,\\\"o\\\":\\\"m 353 -28 q 226 -10 279 -28 l 226 -46 q 315 -119 226 -119 q 378 -112 351 -119 q 435 -92 404 -106 l 524 -251 q 426 -297 485 -281 q 297 -314 367 -314 q 72 -240 151 -314 q -7 -21 -7 -165 l -7 90 l 101 211 q 310 161 199 161 q 390 207 390 161 q 381 237 390 226 q 344 258 372 247 q 247 289 317 268 q 32 529 32 353 q 70 651 32 597 q 181 738 108 706 q 356 769 254 769 q 513 744 438 769 q 640 674 589 718 l 543 525 q 459 565 504 550 q 378 579 414 579 q 304 546 304 579 q 313 523 304 532 q 352 501 321 514 q 453 467 383 488 q 617 378 564 432 q 671 228 671 325 q 628 94 671 153 q 514 4 586 36 q 353 -28 442 -28 z \\\"},\\\"ȿ\\\":{\\\"ha\\\":678,\\\"x_min\\\":-7,\\\"x_max\\\":671,\\\"o\\\":\\\"m 550 -119 q 617 -108 581 -119 l 663 -272 q 511 -314 603 -314 q 381 -288 435 -314 q 288 -224 326 -262 q 196 -114 250 -185 q 122 -22 150 -56 q 54 44 93 11 q -7 90 18 67 l 110 235 q 313 161 217 161 q 370 173 350 161 q 390 207 390 185 q 381 237 390 226 q 344 258 372 247 q 247 289 317 268 q 32 529 32 353 q 70 651 32 597 q 181 738 108 706 q 356 769 254 769 q 513 744 438 769 q 640 674 589 718 l 543 525 q 457 565 503 550 q 367 579 411 579 q 304 546 304 579 q 313 523 304 532 q 352 501 321 514 q 453 467 383 488 q 617 378 564 432 q 671 228 671 325 q 587 53 671 122 q 365 -26 503 -15 q 446 -78 404 -44 q 497 -110 475 -100 q 550 -119 518 -119 z \\\"},\\\"ſ\\\":{\\\"ha\\\":513,\\\"x_min\\\":-3,\\\"x_max\\\":629,\\\"o\\\":\\\"m 411 1061 q 529 1047 469 1061 q 629 1010 589 1032 l 557 836 q 449 864 506 864 q 390 843 408 864 q 372 771 372 822 l 372 0 l 97 0 l 97 556 l -3 556 l -3 742 l 97 742 l 97 785 q 178 983 97 906 q 411 1061 258 1061 z \\\"},\\\"t\\\":{\\\"ha\\\":557,\\\"x_min\\\":-3,\\\"x_max\\\":578,\\\"o\\\":\\\"m 578 36 q 473 -11 535 6 q 356 -28 411 -28 q 152 49 218 -26 q 86 274 86 125 l 86 556 l -3 556 l -3 742 l 86 742 l 86 897 l 361 929 l 361 742 l 528 742 l 500 556 l 361 556 l 361 276 q 376 208 361 228 q 419 188 392 188 q 489 207 454 188 l 578 36 z \\\"},\\\"ŧ\\\":{\\\"ha\\\":557,\\\"x_min\\\":-3,\\\"x_max\\\":578,\\\"o\\\":\\\"m 578 36 q 473 -11 535 6 q 356 -28 411 -28 q 152 49 218 -26 q 86 274 86 125 l 86 333 l 7 333 l 7 506 l 86 506 l 86 556 l -3 556 l -3 742 l 86 742 l 86 897 l 361 929 l 361 742 l 528 742 l 500 556 l 361 556 l 361 506 l 500 506 l 500 333 l 361 333 l 361 276 q 376 208 361 228 q 419 188 392 188 q 489 207 454 188 l 578 36 z \\\"},\\\"ť\\\":{\\\"ha\\\":557,\\\"x_min\\\":-3,\\\"x_max\\\":615,\\\"o\\\":\\\"m 578 36 q 473 -11 535 6 q 356 -28 411 -28 q 152 49 218 -26 q 86 274 86 125 l 86 556 l -3 556 l -3 742 l 86 742 l 86 897 l 361 929 l 361 742 l 528 742 l 500 556 l 361 556 l 361 276 q 376 208 361 228 q 419 188 392 188 q 489 207 454 188 l 578 36 m 615 1108 l 419 1138 l 385 806 l 535 783 l 615 1108 z \\\"},\\\"ʨ\\\":{\\\"ha\\\":1182,\\\"x_min\\\":-3,\\\"x_max\\\":1189,\\\"o\\\":\\\"m 1004 371 q 1136 324 1083 371 q 1189 194 1189 278 q 1110 28 1189 83 q 913 -28 1032 -28 q 636 58 749 -28 q 356 -28 475 -28 q 152 49 218 -26 q 86 274 86 125 l 86 556 l -3 556 l -3 742 l 86 742 l 86 897 l 361 929 l 361 742 l 528 742 l 500 556 l 361 556 l 361 276 q 378 207 361 226 q 433 188 396 188 q 529 200 478 188 q 499 365 499 276 q 547 574 499 482 q 682 717 594 665 q 885 769 769 769 q 1154 671 1043 769 l 1040 511 q 910 563 976 563 q 815 518 846 563 q 785 365 785 474 q 789 300 785 329 q 892 356 840 340 q 1004 371 943 371 m 947 160 q 1011 204 1011 160 q 976 238 1011 238 q 850 182 926 238 q 947 160 885 160 z \\\"},\\\"ţ\\\":{\\\"ha\\\":557,\\\"x_min\\\":-3,\\\"x_max\\\":578,\\\"o\\\":\\\"m 403 -60 q 556 -210 556 -79 q 494 -333 556 -285 q 328 -382 433 -382 q 231 -369 276 -382 q 154 -335 186 -356 l 214 -215 q 303 -240 260 -240 q 365 -207 365 -240 q 335 -176 365 -185 q 235 -167 304 -167 l 254 -14 q 86 274 86 36 l 86 556 l -3 556 l -3 742 l 86 742 l 86 897 l 361 929 l 361 742 l 528 742 l 500 556 l 361 556 l 361 276 q 376 208 361 228 q 419 188 392 188 q 489 207 454 188 l 578 36 q 497 -3 543 13 q 403 -25 450 -19 l 403 -60 z \\\"},\\\"ṱ\\\":{\\\"ha\\\":557,\\\"x_min\\\":-3,\\\"x_max\\\":608,\\\"o\\\":\\\"m 578 36 q 473 -11 535 6 q 356 -28 411 -28 q 152 49 218 -26 q 86 274 86 125 l 86 556 l -3 556 l -3 742 l 86 742 l 86 897 l 361 929 l 361 742 l 528 742 l 500 556 l 361 556 l 361 276 q 376 208 361 228 q 419 188 392 188 q 489 207 454 188 l 578 36 m 42 -293 l 243 -83 l 407 -83 l 608 -293 l 515 -400 l 325 -267 l 135 -400 l 42 -293 z \\\"},\\\"ț\\\":{\\\"ha\\\":557,\\\"x_min\\\":-3,\\\"x_max\\\":578,\\\"o\\\":\\\"m 578 36 q 473 -11 535 6 q 356 -28 411 -28 q 152 49 218 -26 q 86 274 86 125 l 86 556 l -3 556 l -3 742 l 86 742 l 86 897 l 361 929 l 361 742 l 528 742 l 500 556 l 361 556 l 361 276 q 376 208 361 228 q 419 188 392 188 q 489 207 454 188 l 578 36 m 325 -86 q 417 -122 381 -86 q 453 -212 453 -158 q 444 -267 453 -242 q 415 -335 436 -292 l 346 -475 l 215 -475 l 250 -317 q 197 -212 197 -276 q 233 -123 197 -160 q 325 -86 269 -86 z \\\"},\\\"ȶ\\\":{\\\"ha\\\":722,\\\"x_min\\\":-3,\\\"x_max\\\":722,\\\"o\\\":\\\"m 544 358 q 672 313 621 358 q 722 190 722 268 q 643 26 722 81 q 439 -28 564 -28 q 382 -25 418 -28 l 336 -125 l 213 -78 l 254 8 q 131 117 176 44 q 86 306 86 190 l 86 556 l -3 556 l -3 742 l 86 742 l 86 897 l 361 929 l 361 742 l 528 742 l 500 556 l 361 556 l 361 306 q 367 239 361 263 q 440 331 399 303 q 544 358 481 358 m 490 160 q 529 169 514 160 q 544 196 544 178 q 537 217 544 210 q 515 225 529 225 q 487 212 499 225 q 460 161 475 199 q 490 160 469 160 z \\\"},\\\"ⱦ\\\":{\\\"ha\\\":557,\\\"x_min\\\":-3,\\\"x_max\\\":578,\\\"o\\\":\\\"m 578 36 q 473 -11 535 6 q 356 -28 411 -28 q 183 19 250 -28 l 143 -107 l 65 -82 l 122 93 q 86 274 86 161 l 86 556 l -3 556 l -3 742 l 86 742 l 86 897 l 333 926 l 333 744 l 406 967 l 482 942 l 417 742 l 528 742 l 500 556 l 357 556 l 333 482 l 333 276 q 351 208 333 228 q 403 188 369 188 q 489 207 446 188 l 578 36 z \\\"},\\\"ṫ\\\":{\\\"ha\\\":557,\\\"x_min\\\":-3,\\\"x_max\\\":578,\\\"o\\\":\\\"m 578 36 q 473 -11 535 6 q 356 -28 411 -28 q 152 49 218 -26 q 86 274 86 125 l 86 556 l -3 556 l -3 742 l 86 742 l 86 897 l 361 929 l 361 742 l 528 742 l 500 556 l 361 556 l 361 276 q 376 208 361 228 q 419 188 392 188 q 489 207 454 188 l 578 36 z \\\"},\\\"ṭ\\\":{\\\"ha\\\":557,\\\"x_min\\\":-3,\\\"x_max\\\":578,\\\"o\\\":\\\"m 578 36 q 473 -11 535 6 q 356 -28 411 -28 q 152 49 218 -26 q 86 274 86 125 l 86 556 l -3 556 l -3 742 l 86 742 l 86 897 l 361 929 l 361 742 l 528 742 l 500 556 l 361 556 l 361 276 q 376 208 361 228 q 419 188 392 188 q 489 207 454 188 l 578 36 m 325 -367 q 215 -324 258 -367 q 171 -219 171 -282 q 215 -115 171 -157 q 325 -72 258 -72 q 435 -115 392 -72 q 479 -219 479 -157 q 435 -324 479 -282 q 325 -367 392 -367 z \\\"},\\\"ʧ\\\":{\\\"ha\\\":836,\\\"x_min\\\":-3,\\\"x_max\\\":1000,\\\"o\\\":\\\"m 796 1061 q 1000 1010 910 1061 l 928 840 q 839 864 878 864 q 792 846 807 864 q 778 789 778 828 l 778 -22 q 694 -240 778 -165 q 467 -315 610 -315 q 247 -253 333 -315 l 336 -96 q 385 -115 365 -110 q 431 -121 404 -121 q 484 -102 465 -121 q 503 -47 503 -83 l 503 -4 q 369 -28 436 -28 q 157 50 228 -26 q 86 274 86 126 l 86 556 l -3 556 l -3 742 l 86 742 l 86 897 l 361 929 l 361 742 l 503 742 l 503 785 q 578 983 503 906 q 796 1061 653 1061 m 361 271 q 382 206 361 225 q 446 188 403 188 q 503 192 476 188 l 503 556 l 361 556 l 361 271 z \\\"},\\\"ƭ\\\":{\\\"ha\\\":557,\\\"x_min\\\":-3,\\\"x_max\\\":578,\\\"o\\\":\\\"m 578 36 q 473 -11 535 6 q 356 -28 411 -28 q 152 49 218 -26 q 86 274 86 125 l 86 556 l -3 556 l -3 742 l 86 742 l 86 785 q 160 983 86 906 q 375 1061 235 1061 q 575 1010 485 1061 l 503 854 q 418 878 453 878 q 375 860 389 878 q 361 803 361 842 l 361 742 l 528 742 l 500 556 l 361 556 l 361 276 q 376 208 361 228 q 419 188 392 188 q 489 207 454 188 l 578 36 z \\\"},\\\"ṯ\\\":{\\\"ha\\\":557,\\\"x_min\\\":-3,\\\"x_max\\\":578,\\\"o\\\":\\\"m 578 36 q 473 -11 535 6 q 356 -28 411 -28 q 152 49 218 -26 q 86 274 86 125 l 86 556 l -3 556 l -3 742 l 86 742 l 86 897 l 361 929 l 361 742 l 528 742 l 500 556 l 361 556 l 361 276 q 376 208 361 228 q 419 188 392 188 q 489 207 454 188 l 578 36 z \\\"},\\\"ƽ\\\":{\\\"ha\\\":689,\\\"x_min\\\":14,\\\"x_max\\\":661,\\\"o\\\":\\\"m 578 549 l 314 549 l 314 469 q 419 485 357 485 q 540 457 485 485 q 628 374 596 429 q 661 243 661 319 q 617 101 661 163 q 496 6 574 39 q 317 -28 418 -28 q 145 3 217 -28 q 14 93 74 35 l 150 236 q 233 184 200 199 q 307 169 265 169 q 370 189 349 169 q 392 244 392 208 q 374 296 392 279 q 328 313 357 313 q 254 297 297 313 l 78 297 l 78 742 l 614 742 l 578 549 z \\\"},\\\"ƅ\\\":{\\\"ha\\\":768,\\\"x_min\\\":-14,\\\"x_max\\\":761,\\\"o\\\":\\\"m 396 515 q 672 451 583 515 q 761 256 761 388 q 673 67 761 133 q 433 0 585 0 l 96 0 l 96 443 l -14 522 q 144 742 82 619 l 371 742 l 371 515 l 396 515 m 403 171 q 465 195 444 171 q 485 261 485 219 q 463 327 485 306 q 392 349 442 349 l 371 349 l 371 171 l 403 171 z \\\"},\\\"ƨ\\\":{\\\"ha\\\":665,\\\"x_min\\\":7,\\\"x_max\\\":672,\\\"o\\\":\\\"m 342 769 q 505 738 436 769 q 610 650 574 706 q 646 526 646 594 q 591 383 646 435 q 424 297 536 332 q 335 266 364 279 q 297 240 306 253 q 288 210 288 228 q 307 174 288 186 q 358 161 326 161 q 451 181 403 161 q 542 235 500 201 l 672 90 q 528 3 614 35 q 346 -28 443 -28 q 169 4 246 -28 q 49 92 92 36 q 7 222 7 149 q 62 371 7 318 q 231 458 117 424 q 326 491 296 478 q 365 515 356 504 q 374 543 374 526 q 313 579 374 579 q 222 565 268 579 q 135 525 175 550 l 38 674 q 342 769 169 769 z \\\"},\\\"ƫ\\\":{\\\"ha\\\":557,\\\"x_min\\\":-3,\\\"x_max\\\":578,\\\"o\\\":\\\"m 578 36 l 578 -21 q 499 -240 578 -165 q 274 -314 419 -314 q 145 -297 204 -314 q 47 -251 86 -281 l 136 -92 q 193 -112 167 -106 q 256 -119 219 -119 q 344 -46 344 -119 l 344 -28 q 149 52 213 -24 q 86 274 86 128 l 86 556 l -3 556 l -3 742 l 86 742 l 86 897 l 361 929 l 361 742 l 528 742 l 500 556 l 361 556 l 361 254 q 378 192 361 210 q 431 174 396 174 q 501 183 461 174 l 578 36 z \\\"},\\\"ʈ\\\":{\\\"ha\\\":557,\\\"x_min\\\":-3,\\\"x_max\\\":617,\\\"o\\\":\\\"m 617 -253 q 397 -315 531 -315 q 170 -240 254 -315 q 86 -22 86 -165 l 86 556 l -3 556 l -3 742 l 86 742 l 86 897 l 361 929 l 361 742 l 528 742 l 500 556 l 361 556 l 361 -47 q 380 -102 361 -83 q 433 -121 399 -121 q 479 -115 460 -121 q 528 -96 499 -110 l 617 -253 z \\\"},\\\"ʦ\\\":{\\\"ha\\\":1072,\\\"x_min\\\":-3,\\\"x_max\\\":1065,\\\"o\\\":\\\"m 868 467 q 1018 379 971 433 q 1065 239 1065 325 q 945 40 1065 108 q 592 -28 825 -28 q 205 62 324 -28 q 86 343 86 151 l 86 556 l -3 556 l -3 742 l 86 742 l 86 897 l 361 929 l 361 742 l 486 742 l 458 556 l 361 556 l 361 346 q 417 203 361 244 q 592 161 472 161 q 741 174 699 161 q 783 218 783 188 q 764 259 783 243 q 681 296 744 275 q 533 381 579 329 q 486 525 486 432 q 520 650 486 594 q 621 738 554 706 q 779 769 688 769 q 921 746 854 769 q 1038 679 988 722 l 950 536 q 873 568 914 557 q 796 579 832 579 q 733 543 733 579 q 759 509 733 525 q 868 467 785 493 z \\\"},\\\"ʇ\\\":{\\\"ha\\\":557,\\\"x_min\\\":-21,\\\"x_max\\\":560,\\\"o\\\":\\\"m 560 0 l 471 0 l 471 -156 l 196 -187 l 196 0 l 29 0 l 57 186 l 196 186 l 196 465 q 181 534 196 514 q 138 554 165 554 q 68 535 103 554 l -21 706 q 84 753 22 736 q 201 769 146 769 q 405 692 339 768 q 471 468 471 617 l 471 186 l 560 186 l 560 0 z \\\"},\\\"u\\\":{\\\"ha\\\":783,\\\"x_min\\\":49,\\\"x_max\\\":725,\\\"o\\\":\\\"m 725 0 l 485 0 l 475 81 q 256 -28 399 -28 q 100 35 151 -28 q 49 208 49 97 l 49 742 l 324 742 l 324 244 q 335 188 324 204 q 369 172 347 172 q 410 188 389 172 q 450 233 432 203 l 450 742 l 725 742 l 725 0 z \\\"},\\\"ú\\\":{\\\"ha\\\":783,\\\"x_min\\\":49,\\\"x_max\\\":725,\\\"o\\\":\\\"m 725 0 l 485 0 l 475 81 q 256 -28 399 -28 q 100 35 151 -28 q 49 208 49 97 l 49 742 l 324 742 l 324 244 q 335 188 324 204 q 369 172 347 172 q 410 188 389 172 q 450 233 432 203 l 450 742 l 725 742 l 725 0 m 585 989 l 236 851 l 163 989 l 482 1189 l 585 989 z \\\"},\\\"ʉ\\\":{\\\"ha\\\":864,\\\"x_min\\\":-7,\\\"x_max\\\":864,\\\"o\\\":\\\"m 864 394 l 764 394 l 764 0 l 524 0 l 514 81 q 294 -28 438 -28 q 139 35 190 -28 q 88 208 88 97 l 88 394 l -7 394 l -7 554 l 88 554 l 88 742 l 363 742 l 363 554 l 489 554 l 489 742 l 764 742 l 764 554 l 864 554 l 864 394 m 489 394 l 363 394 l 363 244 q 374 188 363 204 q 408 172 386 172 q 449 188 428 172 q 489 233 471 203 l 489 394 z \\\"},\\\"ŭ\\\":{\\\"ha\\\":783,\\\"x_min\\\":49,\\\"x_max\\\":725,\\\"o\\\":\\\"m 725 0 l 485 0 l 475 81 q 256 -28 399 -28 q 100 35 151 -28 q 49 208 49 97 l 49 742 l 324 742 l 324 244 q 335 188 324 204 q 369 172 347 172 q 410 188 389 172 q 450 233 432 203 l 450 742 l 725 742 l 725 0 m 388 869 q 205 947 269 869 q 131 1142 140 1025 l 274 1165 q 315 1085 286 1114 q 388 1056 343 1056 q 460 1085 432 1056 q 501 1165 489 1114 l 644 1142 q 570 947 635 1025 q 388 869 506 869 z \\\"},\\\"ǔ\\\":{\\\"ha\\\":783,\\\"x_min\\\":49,\\\"x_max\\\":725,\\\"o\\\":\\\"m 725 0 l 485 0 l 475 81 q 256 -28 399 -28 q 100 35 151 -28 q 49 208 49 97 l 49 742 l 324 742 l 324 244 q 335 188 324 204 q 369 172 347 172 q 410 188 389 172 q 450 233 432 203 l 450 742 l 725 742 l 725 0 m 671 1046 l 469 836 l 306 836 l 104 1046 l 197 1153 l 388 1019 l 578 1153 l 671 1046 z \\\"},\\\"û\\\":{\\\"ha\\\":783,\\\"x_min\\\":49,\\\"x_max\\\":725,\\\"o\\\":\\\"m 725 0 l 485 0 l 475 81 q 256 -28 399 -28 q 100 35 151 -28 q 49 208 49 97 l 49 742 l 324 742 l 324 244 q 335 188 324 204 q 369 172 347 172 q 410 188 389 172 q 450 233 432 203 l 450 742 l 725 742 l 725 0 m 104 957 l 306 1167 l 469 1167 l 671 957 l 578 850 l 388 983 l 197 850 l 104 957 z \\\"},\\\"ȕ\\\":{\\\"ha\\\":783,\\\"x_min\\\":47,\\\"x_max\\\":725,\\\"o\\\":\\\"m 725 0 l 485 0 l 475 81 q 256 -28 399 -28 q 100 35 151 -28 q 49 208 49 97 l 49 742 l 324 742 l 324 244 q 335 188 324 204 q 369 172 347 172 q 410 188 389 172 q 450 233 432 203 l 450 742 l 725 742 l 725 0 m 363 925 l 229 861 l 47 1133 l 218 1218 l 363 925 m 615 921 l 479 867 l 308 1140 l 482 1218 l 615 921 z \\\"},\\\"ü\\\":{\\\"ha\\\":783,\\\"x_min\\\":49,\\\"x_max\\\":725,\\\"o\\\":\\\"m 725 0 l 485 0 l 475 81 q 256 -28 399 -28 q 100 35 151 -28 q 49 208 49 97 l 49 742 l 324 742 l 324 244 q 335 188 324 204 q 369 172 347 172 q 410 188 389 172 q 450 233 432 203 l 450 742 l 725 742 l 725 0 m 217 1136 q 310 1099 272 1136 q 349 1008 349 1061 q 310 917 349 954 q 217 879 272 879 q 124 917 163 879 q 85 1008 85 954 q 124 1099 85 1061 q 217 1136 163 1136 m 557 1136 q 651 1099 613 1136 q 689 1008 689 1061 q 651 917 689 954 q 557 879 613 879 q 464 917 503 879 q 425 1008 425 954 q 464 1099 425 1061 q 557 1136 503 1136 z \\\"},\\\"ǘ\\\":{\\\"ha\\\":783,\\\"x_min\\\":49,\\\"x_max\\\":725,\\\"o\\\":\\\"m 725 0 l 485 0 l 475 81 q 256 -28 399 -28 q 100 35 151 -28 q 49 208 49 97 l 49 742 l 324 742 l 324 244 q 335 188 324 204 q 369 172 347 172 q 410 188 389 172 q 450 233 432 203 l 450 742 l 725 742 l 725 0 m 621 1225 l 383 1018 l 282 1108 l 476 1367 l 621 1225 m 203 1072 q 296 1035 257 1072 q 335 944 335 997 q 296 853 335 890 q 203 815 257 815 q 109 853 147 815 q 71 944 71 890 q 109 1035 71 997 q 203 1072 147 1072 m 571 1072 q 664 1035 625 1072 q 703 944 703 997 q 664 853 703 890 q 571 815 625 815 q 477 853 515 815 q 439 944 439 890 q 477 1035 439 997 q 571 1072 515 1072 z \\\"},\\\"ǚ\\\":{\\\"ha\\\":783,\\\"x_min\\\":49,\\\"x_max\\\":725,\\\"o\\\":\\\"m 725 0 l 485 0 l 475 81 q 256 -28 399 -28 q 100 35 151 -28 q 49 208 49 97 l 49 742 l 324 742 l 324 244 q 335 188 324 204 q 369 172 347 172 q 410 188 389 172 q 450 233 432 203 l 450 742 l 725 742 l 725 0 m 671 1261 l 469 1065 l 306 1065 l 104 1261 l 197 1368 l 388 1249 l 578 1368 l 671 1261 m 203 1072 q 297 1035 258 1072 q 335 944 335 997 q 297 853 335 890 q 203 815 258 815 q 110 853 149 815 q 71 944 71 890 q 110 1035 71 997 q 203 1072 149 1072 m 571 1072 q 665 1035 626 1072 q 703 944 703 997 q 665 853 703 890 q 571 815 626 815 q 478 853 517 815 q 439 944 439 890 q 478 1035 439 997 q 571 1072 517 1072 z \\\"},\\\"ǜ\\\":{\\\"ha\\\":783,\\\"x_min\\\":49,\\\"x_max\\\":725,\\\"o\\\":\\\"m 725 0 l 485 0 l 475 81 q 256 -28 399 -28 q 100 35 151 -28 q 49 208 49 97 l 49 742 l 324 742 l 324 244 q 335 188 324 204 q 369 172 347 172 q 410 188 389 172 q 450 233 432 203 l 450 742 l 725 742 l 725 0 m 494 1108 l 393 1018 l 156 1225 l 300 1367 l 494 1108 m 203 1072 q 297 1035 258 1072 q 335 944 335 997 q 297 853 335 890 q 203 815 258 815 q 110 853 149 815 q 71 944 71 890 q 110 1035 71 997 q 203 1072 149 1072 m 571 1072 q 665 1035 626 1072 q 703 944 703 997 q 665 853 703 890 q 571 815 626 815 q 478 853 517 815 q 439 944 439 890 q 478 1035 439 997 q 571 1072 517 1072 z \\\"},\\\"ǖ\\\":{\\\"ha\\\":783,\\\"x_min\\\":49,\\\"x_max\\\":725,\\\"o\\\":\\\"m 725 0 l 485 0 l 475 81 q 256 -28 399 -28 q 100 35 151 -28 q 49 208 49 97 l 49 742 l 324 742 l 324 244 q 335 188 324 204 q 369 172 347 172 q 410 188 389 172 q 450 233 432 203 l 450 742 l 725 742 l 725 0 z \\\"},\\\"ụ\\\":{\\\"ha\\\":783,\\\"x_min\\\":49,\\\"x_max\\\":725,\\\"o\\\":\\\"m 725 0 l 485 0 l 475 81 q 256 -28 399 -28 q 100 35 151 -28 q 49 208 49 97 l 49 742 l 324 742 l 324 244 q 335 188 324 204 q 369 172 347 172 q 410 188 389 172 q 450 233 432 203 l 450 742 l 725 742 l 725 0 m 388 -367 q 277 -324 321 -367 q 233 -219 233 -282 q 277 -115 233 -157 q 388 -72 321 -72 q 498 -115 454 -72 q 542 -219 542 -157 q 498 -324 542 -282 q 388 -367 454 -367 z \\\"},\\\"ù\\\":{\\\"ha\\\":783,\\\"x_min\\\":49,\\\"x_max\\\":725,\\\"o\\\":\\\"m 725 0 l 485 0 l 475 81 q 256 -28 399 -28 q 100 35 151 -28 q 49 208 49 97 l 49 742 l 324 742 l 324 244 q 335 188 324 204 q 369 172 347 172 q 410 188 389 172 q 450 233 432 203 l 450 742 l 725 742 l 725 0 m 613 989 l 539 851 l 190 989 l 293 1189 l 613 989 z \\\"},\\\"ủ\\\":{\\\"ha\\\":783,\\\"x_min\\\":49,\\\"x_max\\\":725,\\\"o\\\":\\\"m 725 0 l 485 0 l 475 81 q 256 -28 399 -28 q 100 35 151 -28 q 49 208 49 97 l 49 742 l 324 742 l 324 244 q 335 188 324 204 q 369 172 347 172 q 410 188 389 172 q 450 233 432 203 l 450 742 l 725 742 l 725 0 m 311 978 q 387 990 364 979 q 410 1026 410 1001 q 396 1055 410 1044 q 358 1065 382 1065 q 316 1061 335 1065 q 272 1047 297 1057 l 232 1150 q 396 1189 297 1189 q 533 1147 485 1189 q 582 1039 582 1106 q 551 949 582 983 q 463 903 521 914 l 463 835 l 311 835 l 311 978 z \\\"},\\\"ư\\\":{\\\"ha\\\":928,\\\"x_min\\\":49,\\\"x_max\\\":956,\\\"o\\\":\\\"m 929 849 q 956 721 956 793 q 895 578 956 626 q 728 529 835 529 l 725 554 l 725 0 l 485 0 l 475 81 q 256 -28 399 -28 q 100 35 151 -28 q 49 208 49 97 l 49 742 l 324 742 l 324 244 q 335 188 324 204 q 369 172 347 172 q 410 188 389 172 q 450 233 432 203 l 450 742 l 725 742 l 725 656 q 767 680 754 661 q 779 738 779 699 q 763 828 779 781 l 929 849 z \\\"},\\\"ứ\\\":{\\\"ha\\\":928,\\\"x_min\\\":49,\\\"x_max\\\":956,\\\"o\\\":\\\"m 239 851 l 165 989 l 485 1189 l 588 989 l 239 851 m 929 849 q 956 721 956 793 q 895 578 956 626 q 728 529 835 529 l 725 554 l 725 0 l 485 0 l 475 81 q 256 -28 399 -28 q 100 35 151 -28 q 49 208 49 97 l 49 742 l 324 742 l 324 244 q 335 188 324 204 q 369 172 347 172 q 410 188 389 172 q 450 233 432 203 l 450 742 l 725 742 l 725 656 q 767 680 754 661 q 779 738 779 699 q 763 828 779 781 l 929 849 z \\\"},\\\"ự\\\":{\\\"ha\\\":928,\\\"x_min\\\":49,\\\"x_max\\\":956,\\\"o\\\":\\\"m 929 849 q 956 721 956 793 q 895 578 956 626 q 728 529 835 529 l 725 554 l 725 0 l 485 0 l 475 81 q 256 -28 399 -28 q 100 35 151 -28 q 49 208 49 97 l 49 742 l 324 742 l 324 244 q 335 188 324 204 q 369 172 347 172 q 410 188 389 172 q 450 233 432 203 l 450 742 l 725 742 l 725 656 q 767 680 754 661 q 779 738 779 699 q 763 828 779 781 l 929 849 m 390 -72 q 501 -115 457 -72 q 544 -219 544 -157 q 501 -324 544 -282 q 390 -367 457 -367 q 280 -324 324 -367 q 236 -219 236 -282 q 280 -115 236 -157 q 390 -72 324 -72 z \\\"},\\\"ừ\\\":{\\\"ha\\\":928,\\\"x_min\\\":49,\\\"x_max\\\":956,\\\"o\\\":\\\"m 542 851 l 193 989 l 296 1189 l 615 989 l 542 851 m 929 849 q 956 721 956 793 q 895 578 956 626 q 728 529 835 529 l 725 554 l 725 0 l 485 0 l 475 81 q 256 -28 399 -28 q 100 35 151 -28 q 49 208 49 97 l 49 742 l 324 742 l 324 244 q 335 188 324 204 q 369 172 347 172 q 410 188 389 172 q 450 233 432 203 l 450 742 l 725 742 l 725 656 q 767 680 754 661 q 779 738 779 699 q 763 828 779 781 l 929 849 z \\\"},\\\"ử\\\":{\\\"ha\\\":928,\\\"x_min\\\":49,\\\"x_max\\\":956,\\\"o\\\":\\\"m 361 1065 q 319 1061 338 1065 q 275 1047 300 1057 l 235 1150 q 399 1189 300 1189 q 536 1147 488 1189 q 585 1039 585 1106 q 554 949 585 983 q 465 903 524 914 l 465 835 l 314 835 l 314 978 q 390 990 367 979 q 413 1026 413 1001 q 399 1055 413 1044 q 361 1065 385 1065 m 929 849 q 956 721 956 793 q 895 578 956 626 q 728 529 835 529 l 725 554 l 725 0 l 485 0 l 475 81 q 256 -28 399 -28 q 100 35 151 -28 q 49 208 49 97 l 49 742 l 324 742 l 324 244 q 335 188 324 204 q 369 172 347 172 q 410 188 389 172 q 450 233 432 203 l 450 742 l 725 742 l 725 656 q 767 680 754 661 q 779 738 779 699 q 763 828 779 781 l 929 849 z \\\"},\\\"ữ\\\":{\\\"ha\\\":928,\\\"x_min\\\":49,\\\"x_max\\\":956,\\\"o\\\":\\\"m 314 924 q 274 910 289 924 q 240 864 258 896 l 111 926 q 191 1062 140 1008 q 307 1115 242 1115 q 359 1108 338 1115 q 404 1085 381 1101 q 441 1062 428 1068 q 468 1056 454 1056 q 507 1069 492 1056 q 540 1115 522 1083 l 669 1053 q 589 917 640 969 q 471 864 538 864 q 422 871 442 864 q 379 893 401 878 q 341 917 353 911 q 314 924 329 924 m 929 849 q 956 721 956 793 q 895 578 956 626 q 728 529 835 529 l 725 554 l 725 0 l 485 0 l 475 81 q 256 -28 399 -28 q 100 35 151 -28 q 49 208 49 97 l 49 742 l 324 742 l 324 244 q 335 188 324 204 q 369 172 347 172 q 410 188 389 172 q 450 233 432 203 l 450 742 l 725 742 l 725 656 q 767 680 754 661 q 779 738 779 699 q 763 828 779 781 l 929 849 z \\\"},\\\"ű\\\":{\\\"ha\\\":783,\\\"x_min\\\":49,\\\"x_max\\\":753,\\\"o\\\":\\\"m 725 0 l 485 0 l 475 81 q 256 -28 399 -28 q 100 35 151 -28 q 49 208 49 97 l 49 742 l 324 742 l 324 244 q 335 188 324 204 q 369 172 347 172 q 410 188 389 172 q 450 233 432 203 l 450 742 l 725 742 l 725 0 m 504 1085 l 326 839 l 208 900 l 335 1174 l 504 1085 m 753 1063 l 563 826 l 449 894 l 589 1161 l 753 1063 z \\\"},\\\"ȗ\\\":{\\\"ha\\\":783,\\\"x_min\\\":49,\\\"x_max\\\":725,\\\"o\\\":\\\"m 725 0 l 485 0 l 475 81 q 256 -28 399 -28 q 100 35 151 -28 q 49 208 49 97 l 49 742 l 324 742 l 324 244 q 335 188 324 204 q 369 172 347 172 q 410 188 389 172 q 450 233 432 203 l 450 742 l 725 742 l 725 0 m 388 1121 q 570 1043 506 1121 q 644 849 635 965 l 501 825 q 460 906 489 876 q 388 935 432 935 q 315 906 343 935 q 274 825 286 876 l 131 849 q 205 1043 140 965 q 388 1121 269 1121 z \\\"},\\\"ū\\\":{\\\"ha\\\":783,\\\"x_min\\\":49,\\\"x_max\\\":725,\\\"o\\\":\\\"m 725 0 l 485 0 l 475 81 q 256 -28 399 -28 q 100 35 151 -28 q 49 208 49 97 l 49 742 l 324 742 l 324 244 q 335 188 324 204 q 369 172 347 172 q 410 188 389 172 q 450 233 432 203 l 450 742 l 725 742 l 725 0 m 161 900 l 161 1086 l 613 1086 l 613 900 l 161 900 z \\\"},\\\"ᵬ\\\":{\\\"ha\\\":943,\\\"x_min\\\":0,\\\"x_max\\\":919,\\\"o\\\":\\\"m 646 769 q 850 665 781 769 q 919 369 919 560 q 884 165 919 256 q 781 24 849 75 q 622 -28 714 -28 q 513 -3 563 -28 q 431 64 464 21 l 421 0 l 176 0 l 176 844 q 110 792 131 829 l 0 831 q 62 947 18 903 q 176 990 106 990 l 176 1033 l 451 1061 l 451 939 q 517 990 497 954 l 626 951 q 565 837 608 881 q 451 792 522 793 l 451 676 q 535 744 482 718 q 646 769 588 769 m 539 168 q 612 214 586 168 q 638 369 638 260 q 615 531 638 489 q 549 572 592 572 q 451 503 492 572 l 451 222 q 539 168 483 168 z \\\"},\\\"ᵭ\\\":{\\\"ha\\\":953,\\\"x_min\\\":24,\\\"x_max\\\":953,\\\"o\\\":\\\"m 953 951 q 891 835 935 879 q 775 792 847 792 l 769 793 l 769 0 l 525 0 l 515 76 q 306 -28 436 -28 q 94 79 165 -28 q 24 375 24 186 q 63 578 24 489 q 172 719 101 668 q 333 769 242 769 q 494 711 429 769 l 494 842 q 458 819 469 832 q 436 792 446 807 l 326 831 q 385 944 343 900 q 494 990 426 988 l 494 1061 l 769 1033 l 769 939 l 775 938 q 843 990 822 953 l 953 951 m 399 169 q 494 235 457 169 l 494 532 q 456 563 475 553 q 413 574 436 574 q 335 526 364 574 q 306 372 306 478 q 330 210 306 250 q 399 169 354 169 z \\\"},\\\"ᵮ\\\":{\\\"ha\\\":624,\\\"x_min\\\":-14,\\\"x_max\\\":740,\\\"o\\\":\\\"m 483 413 q 524 427 508 415 q 552 456 539 439 q 571 479 565 472 l 708 413 q 613 272 665 325 q 483 213 561 218 l 483 0 l 208 0 l 208 294 q 169 278 183 292 q 142 249 154 265 q 125 225 131 232 l -14 294 q 81 435 29 382 q 208 494 132 488 l 208 556 l 108 556 l 108 742 l 208 742 l 208 785 q 289 983 208 906 q 522 1061 369 1061 q 640 1047 581 1061 q 740 1010 700 1032 l 668 836 q 560 864 617 864 q 501 843 519 864 q 483 771 483 822 l 483 742 l 656 742 l 625 556 l 483 556 l 483 413 z \\\"},\\\"ᵯ\\\":{\\\"ha\\\":1432,\\\"x_min\\\":0,\\\"x_max\\\":1432,\\\"o\\\":\\\"m 1432 356 q 1358 228 1403 272 q 1243 182 1314 183 l 1243 0 l 968 0 l 968 213 q 854 224 926 215 l 854 0 l 579 0 l 579 251 l 465 264 l 465 0 l 190 0 l 190 286 q 151 273 165 285 q 126 246 138 261 q 110 224 115 231 l 0 272 q 74 401 29 356 q 190 446 119 446 l 190 742 l 431 742 l 450 667 q 547 745 494 721 q 665 769 599 769 q 767 742 724 769 q 832 663 810 714 q 932 744 879 718 q 1054 769 985 769 q 1191 710 1139 769 q 1243 547 1243 651 l 1243 342 q 1281 355 1267 343 q 1306 382 1294 367 q 1322 404 1317 397 l 1432 356 m 579 408 l 579 497 q 569 553 579 538 q 542 569 560 569 q 501 551 521 569 q 465 496 482 532 l 465 421 l 579 408 m 854 381 q 968 369 926 372 l 968 497 q 958 553 968 538 q 931 569 949 569 q 890 551 910 569 q 854 496 871 532 l 854 381 z \\\"},\\\"ᵰ\\\":{\\\"ha\\\":1063,\\\"x_min\\\":0,\\\"x_max\\\":1063,\\\"o\\\":\\\"m 1063 356 q 989 228 1033 272 q 875 182 944 183 l 875 0 l 600 0 l 600 238 q 465 268 500 260 l 465 0 l 190 0 l 190 286 q 151 273 165 285 q 126 246 138 261 q 110 224 115 231 l 0 272 q 74 401 29 356 q 190 446 119 446 l 190 742 l 431 742 l 450 665 q 555 744 501 719 q 675 769 608 769 q 822 711 768 769 q 875 547 875 653 l 875 342 q 913 356 899 343 q 938 383 926 368 q 953 404 949 397 l 1063 356 m 465 425 q 600 394 500 417 l 600 497 q 590 554 600 539 q 558 569 579 569 q 465 496 513 569 l 465 425 z \\\"},\\\"ᵱ\\\":{\\\"ha\\\":825,\\\"x_min\\\":-117,\\\"x_max\\\":801,\\\"o\\\":\\\"m 506 -28 q 333 46 400 -28 l 333 -90 q 400 -37 379 -75 l 510 -76 q 448 -192 492 -149 q 333 -236 404 -236 l 333 -287 l 58 -315 l 58 -185 q -7 -236 13 -200 l -117 -197 q -56 -83 -99 -126 q 58 -37 -12 -39 l 58 742 l 303 742 l 314 669 q 413 746 358 722 q 524 769 468 769 q 731 665 661 769 q 801 374 801 561 q 765 167 801 258 q 660 24 728 76 q 506 -28 593 -28 m 431 572 q 333 503 372 572 l 333 219 q 371 180 351 192 q 415 168 390 168 q 519 369 519 168 q 508 499 519 454 q 478 558 497 543 q 431 572 460 572 z \\\"},\\\"ᵲ\\\":{\\\"ha\\\":731,\\\"x_min\\\":0,\\\"x_max\\\":744,\\\"o\\\":\\\"m 494 339 q 537 353 521 340 q 566 382 553 365 q 585 406 579 399 l 722 339 q 626 197 678 250 q 494 138 574 143 l 494 0 l 219 0 l 219 219 q 178 201 193 215 q 139 151 164 188 l 0 221 q 94 360 43 307 q 219 421 144 414 l 219 742 l 460 742 l 482 603 q 557 721 506 676 q 669 765 608 765 q 744 753 706 765 l 701 488 q 633 499 664 499 q 542 458 572 499 q 494 339 513 418 z \\\"},\\\"ᵳ\\\":{\\\"ha\\\":740,\\\"x_min\\\":0,\\\"x_max\\\":757,\\\"o\\\":\\\"m 501 410 q 540 424 525 413 q 567 452 554 436 q 585 475 579 468 l 722 408 q 628 269 679 322 q 501 208 578 215 l 501 0 l 226 0 l 226 290 q 183 275 199 289 q 155 244 167 261 q 139 221 143 226 l 0 290 q 95 432 42 378 q 226 492 149 486 q 315 699 232 628 q 538 769 399 769 q 757 707 671 769 l 668 550 q 619 569 639 564 q 574 575 600 575 q 520 556 539 575 q 501 501 501 538 l 501 410 z \\\"},\\\"ᵴ\\\":{\\\"ha\\\":685,\\\"x_min\\\":-7,\\\"x_max\\\":672,\\\"o\\\":\\\"m 672 458 q 629 364 658 401 q 671 228 671 313 q 626 94 671 153 q 501 4 581 36 q 319 -28 421 -28 q 137 3 222 -28 q -7 90 51 35 l 124 235 q 215 181 165 201 q 313 161 264 161 q 370 173 350 161 q 390 207 390 185 q 381 237 390 226 q 344 258 372 247 q 247 289 317 268 q 196 307 217 299 q 128 254 149 292 l 18 293 q 71 400 33 358 q 32 529 32 456 q 70 651 32 597 q 181 738 108 706 q 356 769 254 769 q 513 744 438 769 q 640 674 589 718 l 543 525 q 457 565 503 550 q 367 579 411 579 q 304 546 304 579 q 313 523 304 532 q 352 501 321 514 q 453 467 383 488 l 506 449 q 563 497 546 464 l 672 458 z \\\"},\\\"ᵵ\\\":{\\\"ha\\\":688,\\\"x_min\\\":-14,\\\"x_max\\\":708,\\\"o\\\":\\\"m 543 188 q 613 207 578 188 l 701 36 q 597 -11 658 6 q 479 -28 535 -28 q 276 49 342 -26 q 210 274 210 125 l 210 315 q 169 300 185 313 q 142 270 154 288 q 125 246 131 253 l -14 315 q 81 455 28 401 q 210 515 133 508 l 210 556 l 121 556 l 121 742 l 210 742 l 210 897 l 485 929 l 485 742 l 651 742 l 624 556 l 485 556 l 485 433 q 523 447 508 436 q 551 475 538 458 q 571 500 564 492 l 708 433 q 615 294 665 347 q 489 233 564 240 q 543 188 500 188 z \\\"},\\\"ᵶ\\\":{\\\"ha\\\":729,\\\"x_min\\\":0,\\\"x_max\\\":729,\\\"o\\\":\\\"m 333 189 l 689 189 l 665 0 l 54 0 l 54 178 l 217 353 q 192 356 200 356 q 152 344 167 356 q 126 316 138 332 q 110 293 115 300 l 0 342 q 77 471 29 426 q 206 515 125 515 q 266 505 236 515 q 331 475 296 494 l 404 556 l 82 556 l 82 742 l 679 742 l 679 565 l 515 388 q 538 386 524 386 q 577 398 563 386 q 603 426 592 410 q 619 449 614 442 l 729 400 q 652 271 700 315 q 524 226 604 226 q 399 260 468 226 l 333 189 z \\\"},\\\"ᶑ\\\":{\\\"ha\\\":861,\\\"x_min\\\":24,\\\"x_max\\\":1025,\\\"o\\\":\\\"m 1025 -253 q 806 -315 939 -315 q 578 -240 663 -315 q 494 -22 494 -165 l 494 56 q 306 -28 421 -28 q 94 79 165 -28 q 24 375 24 186 q 61 580 24 490 q 167 719 99 669 q 326 769 236 769 q 494 697 435 769 l 494 785 q 569 983 494 906 q 788 1061 644 1061 q 992 1010 901 1061 l 919 840 q 831 864 869 864 q 784 846 799 864 q 769 789 769 828 l 769 -47 q 788 -102 769 -83 q 842 -121 807 -121 q 888 -115 868 -121 q 936 -96 907 -110 l 1025 -253 m 401 169 q 494 235 457 169 l 494 532 q 456 563 474 553 q 414 574 438 574 q 335 526 364 574 q 306 372 306 478 q 318 243 306 288 q 351 184 331 199 q 401 169 371 169 z \\\"},\\\"ų\\\":{\\\"ha\\\":783,\\\"x_min\\\":49,\\\"x_max\\\":725,\\\"o\\\":\\\"m 725 0 q 600 -65 635 -31 q 565 -132 565 -100 q 636 -193 565 -193 q 721 -182 672 -193 l 704 -342 q 601 -353 656 -353 q 442 -306 504 -353 q 379 -178 379 -258 q 485 3 379 -67 l 475 81 q 256 -28 399 -28 q 100 35 151 -28 q 49 208 49 97 l 49 742 l 324 742 l 324 244 q 335 188 324 204 q 369 172 347 172 q 410 188 389 172 q 450 233 432 203 l 450 742 l 725 742 l 725 0 z \\\"},\\\"ʊ\\\":{\\\"ha\\\":810,\\\"x_min\\\":24,\\\"x_max\\\":786,\\\"o\\\":\\\"m 406 -28 q 201 17 288 -28 q 69 135 114 61 q 24 300 24 210 q 64 453 24 392 q 176 558 104 515 l 46 558 l 46 742 l 364 742 l 364 574 q 304 336 304 496 q 329 206 304 249 q 406 163 354 163 q 483 206 458 163 q 507 336 507 249 q 446 574 507 496 l 446 742 l 764 742 l 764 558 l 635 558 q 747 453 707 515 q 786 300 786 392 q 742 135 786 210 q 611 16 697 60 q 406 -28 525 -28 z \\\"},\\\"ů\\\":{\\\"ha\\\":783,\\\"x_min\\\":49,\\\"x_max\\\":725,\\\"o\\\":\\\"m 725 0 l 485 0 l 475 81 q 256 -28 399 -28 q 100 35 151 -28 q 49 208 49 97 l 49 742 l 324 742 l 324 244 q 335 188 324 204 q 369 172 347 172 q 410 188 389 172 q 450 233 432 203 l 450 742 l 725 742 l 725 0 m 388 1231 q 501 1203 453 1231 q 576 1129 550 1175 q 601 1028 601 1083 q 576 926 601 972 q 501 851 550 879 q 388 824 453 824 q 274 851 322 824 q 199 926 225 879 q 174 1028 174 972 q 199 1129 174 1083 q 274 1203 225 1175 q 388 1231 322 1231 m 388 1092 q 347 1076 363 1092 q 332 1028 332 1060 q 347 980 332 996 q 388 964 363 964 q 428 980 413 964 q 443 1028 443 996 q 428 1076 443 1060 q 388 1092 413 1092 z \\\"},\\\"ũ\\\":{\\\"ha\\\":783,\\\"x_min\\\":49,\\\"x_max\\\":725,\\\"o\\\":\\\"m 725 0 l 485 0 l 475 81 q 256 -28 399 -28 q 100 35 151 -28 q 49 208 49 97 l 49 742 l 324 742 l 324 244 q 335 188 324 204 q 369 172 347 172 q 410 188 389 172 q 450 233 432 203 l 450 742 l 725 742 l 725 0 m 468 864 q 419 871 439 864 q 376 893 399 878 q 338 917 350 911 q 311 924 326 924 q 271 910 286 924 q 238 864 256 896 l 108 926 q 188 1062 138 1008 q 304 1115 239 1115 q 356 1108 335 1115 q 401 1085 378 1101 q 438 1062 425 1068 q 465 1056 451 1056 q 504 1069 489 1056 q 538 1115 519 1083 l 667 1053 q 586 917 638 969 q 468 864 535 864 z \\\"},\\\"ṹ\\\":{\\\"ha\\\":783,\\\"x_min\\\":49,\\\"x_max\\\":725,\\\"o\\\":\\\"m 725 0 l 485 0 l 475 81 q 256 -28 399 -28 q 100 35 151 -28 q 49 208 49 97 l 49 742 l 324 742 l 324 244 q 335 188 324 204 q 369 172 347 172 q 410 188 389 172 q 450 233 432 203 l 450 742 l 725 742 l 725 0 z \\\"},\\\"v\\\":{\\\"ha\\\":731,\\\"x_min\\\":-21,\\\"x_max\\\":751,\\\"o\\\":\\\"m 531 0 l 206 0 l -21 742 l 278 742 l 371 199 l 474 742 l 751 742 l 531 0 z \\\"},\\\"ʋ\\\":{\\\"ha\\\":775,\\\"x_min\\\":49,\\\"x_max\\\":747,\\\"o\\\":\\\"m 364 -28 q 138 42 226 -28 q 49 251 49 113 l 49 742 l 324 742 l 324 264 q 339 190 324 211 q 385 169 354 169 q 472 328 472 169 l 472 531 q 439 568 472 568 q 417 565 428 568 l 382 751 q 514 769 443 769 q 686 707 625 769 q 747 519 747 644 l 747 339 q 640 63 747 153 q 364 -28 532 -28 z \\\"},\\\"ⱱ\\\":{\\\"ha\\\":761,\\\"x_min\\\":-21,\\\"x_max\\\":803,\\\"o\\\":\\\"m 531 0 l 206 0 l -21 742 l 278 742 l 371 199 l 447 597 q 522 767 469 714 q 676 819 575 819 q 803 801 742 819 l 763 619 q 726 625 746 625 q 693 614 706 625 q 672 571 681 603 l 531 0 z \\\"},\\\"ʌ\\\":{\\\"ha\\\":731,\\\"x_min\\\":-21,\\\"x_max\\\":751,\\\"o\\\":\\\"m 200 742 l 525 742 l 751 0 l 453 0 l 360 543 l 257 0 l -21 0 l 200 742 z \\\"},\\\"w\\\":{\\\"ha\\\":1067,\\\"x_min\\\":-7,\\\"x_max\\\":1074,\\\"o\\\":\\\"m 928 0 l 613 0 l 532 497 l 456 0 l 142 0 l -7 742 l 271 742 l 315 210 l 413 742 l 669 742 l 747 210 l 810 742 l 1074 742 l 928 0 z \\\"},\\\"ẃ\\\":{\\\"ha\\\":1067,\\\"x_min\\\":-7,\\\"x_max\\\":1074,\\\"o\\\":\\\"m 928 0 l 613 0 l 532 497 l 456 0 l 142 0 l -7 742 l 271 742 l 315 210 l 413 742 l 669 742 l 747 210 l 810 742 l 1074 742 l 928 0 m 731 989 l 382 851 l 308 989 l 628 1189 l 731 989 z \\\"},\\\"ŵ\\\":{\\\"ha\\\":1067,\\\"x_min\\\":-7,\\\"x_max\\\":1074,\\\"o\\\":\\\"m 928 0 l 613 0 l 532 497 l 456 0 l 142 0 l -7 742 l 271 742 l 315 210 l 413 742 l 669 742 l 747 210 l 810 742 l 1074 742 l 928 0 m 250 957 l 451 1167 l 615 1167 l 817 957 l 724 850 l 533 983 l 343 850 l 250 957 z \\\"},\\\"ẅ\\\":{\\\"ha\\\":1067,\\\"x_min\\\":-7,\\\"x_max\\\":1074,\\\"o\\\":\\\"m 928 0 l 613 0 l 532 497 l 456 0 l 142 0 l -7 742 l 271 742 l 315 210 l 413 742 l 669 742 l 747 210 l 810 742 l 1074 742 l 928 0 m 363 1136 q 456 1099 418 1136 q 494 1008 494 1061 q 456 917 494 954 q 363 879 418 879 q 269 917 308 879 q 231 1008 231 954 q 269 1099 231 1061 q 363 1136 308 1136 m 703 1136 q 797 1099 758 1136 q 835 1008 835 1061 q 797 917 835 954 q 703 879 758 879 q 610 917 649 879 q 571 1008 571 954 q 610 1099 571 1061 q 703 1136 649 1136 z \\\"},\\\"ẁ\\\":{\\\"ha\\\":1067,\\\"x_min\\\":-7,\\\"x_max\\\":1074,\\\"o\\\":\\\"m 928 0 l 613 0 l 532 497 l 456 0 l 142 0 l -7 742 l 271 742 l 315 210 l 413 742 l 669 742 l 747 210 l 810 742 l 1074 742 l 928 0 m 758 989 l 685 851 l 336 989 l 439 1189 l 758 989 z \\\"},\\\"ⱳ\\\":{\\\"ha\\\":1111,\\\"x_min\\\":-7,\\\"x_max\\\":1153,\\\"o\\\":\\\"m -7 742 l 271 742 l 315 210 l 413 742 l 669 742 l 747 210 l 794 583 q 863 762 810 704 q 1026 819 917 819 q 1153 801 1092 819 l 1113 619 q 1076 625 1096 625 q 1040 614 1053 625 q 1022 571 1028 603 l 928 0 l 613 0 l 532 497 l 456 0 l 142 0 l -7 742 z \\\"},\\\"ʍ\\\":{\\\"ha\\\":1067,\\\"x_min\\\":-7,\\\"x_max\\\":1074,\\\"o\\\":\\\"m 139 742 l 454 742 l 535 244 l 611 742 l 925 742 l 1074 0 l 796 0 l 751 532 l 654 0 l 397 0 l 319 532 l 257 0 l -7 0 l 139 742 z \\\"},\\\"ƿ\\\":{\\\"ha\\\":825,\\\"x_min\\\":58,\\\"x_max\\\":801,\\\"o\\\":\\\"m 543 769 q 676 735 617 769 q 768 636 735 700 q 801 488 801 572 q 753 277 801 363 q 624 134 704 192 q 418 17 544 76 l 333 -24 l 333 -287 l 58 -315 l 58 742 l 303 742 l 315 660 q 415 741 357 713 q 543 769 474 769 m 368 194 q 479 322 439 249 q 519 483 519 394 q 444 578 519 578 q 333 529 385 578 l 333 167 l 368 194 z \\\"},\\\"x\\\":{\\\"ha\\\":733,\\\"x_min\\\":-28,\\\"x_max\\\":761,\\\"o\\\":\\\"m 761 0 l 454 0 l 357 256 l 268 0 l -28 0 l 199 389 l -8 742 l 296 742 l 368 524 l 433 742 l 721 742 l 532 397 l 761 0 z \\\"},\\\"y\\\":{\\\"ha\\\":742,\\\"x_min\\\":-21,\\\"x_max\\\":763,\\\"o\\\":\\\"m 535 1 q 374 -232 488 -153 q 74 -317 260 -311 l 44 -129 q 203 -90 151 -118 q 285 0 256 -62 l 190 0 l -21 742 l 271 742 l 364 168 l 479 742 l 763 742 l 535 1 z \\\"},\\\"ý\\\":{\\\"ha\\\":742,\\\"x_min\\\":-21,\\\"x_max\\\":763,\\\"o\\\":\\\"m 535 1 q 374 -232 488 -153 q 74 -317 260 -311 l 44 -129 q 203 -90 151 -118 q 285 0 256 -62 l 190 0 l -21 742 l 271 742 l 364 168 l 479 742 l 763 742 l 535 1 m 568 989 l 219 851 l 146 989 l 465 1189 l 568 989 z \\\"},\\\"ŷ\\\":{\\\"ha\\\":742,\\\"x_min\\\":-21,\\\"x_max\\\":763,\\\"o\\\":\\\"m 535 1 q 374 -232 488 -153 q 74 -317 260 -311 l 44 -129 q 203 -90 151 -118 q 285 0 256 -62 l 190 0 l -21 742 l 271 742 l 364 168 l 479 742 l 763 742 l 535 1 m 88 957 l 289 1167 l 453 1167 l 654 957 l 561 850 l 371 983 l 181 850 l 88 957 z \\\"},\\\"ÿ\\\":{\\\"ha\\\":742,\\\"x_min\\\":-21,\\\"x_max\\\":763,\\\"o\\\":\\\"m 535 1 q 374 -232 488 -153 q 74 -317 260 -311 l 44 -129 q 203 -90 151 -118 q 285 0 256 -62 l 190 0 l -21 742 l 271 742 l 364 168 l 479 742 l 763 742 l 535 1 m 200 1136 q 294 1099 256 1136 q 332 1008 332 1061 q 294 917 332 954 q 200 879 256 879 q 107 917 146 879 q 68 1008 68 954 q 107 1099 68 1061 q 200 1136 146 1136 m 540 1136 q 634 1099 596 1136 q 672 1008 672 1061 q 634 917 672 954 q 540 879 596 879 q 447 917 486 879 q 408 1008 408 954 q 447 1099 408 1061 q 540 1136 486 1136 z \\\"},\\\"ỵ\\\":{\\\"ha\\\":742,\\\"x_min\\\":-21,\\\"x_max\\\":800,\\\"o\\\":\\\"m 535 1 q 374 -232 488 -153 q 74 -317 260 -311 l 44 -129 q 203 -90 151 -118 q 285 0 256 -62 l 190 0 l -21 742 l 271 742 l 364 168 l 479 742 l 763 742 l 535 1 m 646 -367 q 535 -324 579 -367 q 492 -219 492 -282 q 535 -115 492 -157 q 646 -72 579 -72 q 756 -115 713 -72 q 800 -219 800 -157 q 756 -324 800 -282 q 646 -367 713 -367 z \\\"},\\\"ỳ\\\":{\\\"ha\\\":742,\\\"x_min\\\":-21,\\\"x_max\\\":763,\\\"o\\\":\\\"m 535 1 q 374 -232 488 -153 q 74 -317 260 -311 l 44 -129 q 203 -90 151 -118 q 285 0 256 -62 l 190 0 l -21 742 l 271 742 l 364 168 l 479 742 l 763 742 l 535 1 m 596 989 l 522 851 l 174 989 l 276 1189 l 596 989 z \\\"},\\\"ƴ\\\":{\\\"ha\\\":754,\\\"x_min\\\":-21,\\\"x_max\\\":796,\\\"o\\\":\\\"m 44 -129 q 203 -90 151 -118 q 285 0 256 -62 l 190 0 l -21 742 l 271 742 l 364 168 l 436 583 q 510 763 458 706 q 669 819 563 819 q 796 801 735 819 l 756 619 q 724 625 739 625 q 686 613 700 625 q 665 571 672 601 l 556 53 q 393 -225 515 -139 q 74 -317 271 -311 l 44 -129 z \\\"},\\\"ỷ\\\":{\\\"ha\\\":742,\\\"x_min\\\":-21,\\\"x_max\\\":763,\\\"o\\\":\\\"m 535 1 q 374 -232 488 -153 q 74 -317 260 -311 l 44 -129 q 203 -90 151 -118 q 285 0 256 -62 l 190 0 l -21 742 l 271 742 l 364 168 l 479 742 l 763 742 l 535 1 m 294 978 q 370 990 347 979 q 393 1026 393 1001 q 379 1055 393 1044 q 342 1065 365 1065 q 299 1061 318 1065 q 256 1047 281 1057 l 215 1150 q 379 1189 281 1189 q 517 1147 468 1189 q 565 1039 565 1106 q 535 949 565 983 q 446 903 504 914 l 446 835 l 294 835 l 294 978 z \\\"},\\\"ȳ\\\":{\\\"ha\\\":742,\\\"x_min\\\":-21,\\\"x_max\\\":763,\\\"o\\\":\\\"m 535 1 q 374 -232 488 -153 q 74 -317 260 -311 l 44 -129 q 203 -90 151 -118 q 285 0 256 -62 l 190 0 l -21 742 l 271 742 l 364 168 l 479 742 l 763 742 l 535 1 m 144 900 l 144 1086 l 596 1086 l 596 900 l 144 900 z \\\"},\\\"ɏ\\\":{\\\"ha\\\":783,\\\"x_min\\\":0,\\\"x_max\\\":783,\\\"o\\\":\\\"m 725 554 l 781 554 l 781 408 l 681 408 l 556 1 q 394 -232 508 -153 q 94 -317 281 -311 l 65 -129 q 224 -90 172 -118 q 306 0 276 -62 l 211 0 l 94 408 l 0 408 l 0 554 l 53 554 l 0 742 l 292 742 l 322 554 l 463 554 l 500 742 l 783 742 l 725 554 m 433 408 l 346 408 l 385 168 l 433 408 z \\\"},\\\"ỹ\\\":{\\\"ha\\\":742,\\\"x_min\\\":-21,\\\"x_max\\\":763,\\\"o\\\":\\\"m 535 1 q 374 -232 488 -153 q 74 -317 260 -311 l 44 -129 q 203 -90 151 -118 q 285 0 256 -62 l 190 0 l -21 742 l 271 742 l 364 168 l 479 742 l 763 742 l 535 1 m 451 864 q 402 871 422 864 q 360 893 382 878 q 322 917 333 911 q 294 924 310 924 q 254 910 269 924 q 221 864 239 896 l 92 926 q 172 1062 121 1008 q 288 1115 222 1115 q 340 1108 318 1115 q 385 1085 361 1101 q 422 1062 408 1068 q 449 1056 435 1056 q 488 1069 472 1056 q 521 1115 503 1083 l 650 1053 q 569 917 621 969 q 451 864 518 864 z \\\"},\\\"ʎ\\\":{\\\"ha\\\":742,\\\"x_min\\\":-21,\\\"x_max\\\":763,\\\"o\\\":\\\"m 207 740 q 369 974 254 896 q 668 1058 483 1053 l 692 879 q 529 838 582 869 q 450 742 476 806 l 551 742 l 763 0 l 471 0 l 378 574 l 263 0 l -21 0 l 207 740 z \\\"},\\\"z\\\":{\\\"ha\\\":649,\\\"x_min\\\":7,\\\"x_max\\\":642,\\\"o\\\":\\\"m 632 551 l 328 203 l 642 203 l 618 0 l 7 0 l 7 192 l 315 542 l 35 542 l 35 742 l 632 742 l 632 551 z \\\"},\\\"ź\\\":{\\\"ha\\\":649,\\\"x_min\\\":7,\\\"x_max\\\":642,\\\"o\\\":\\\"m 632 551 l 328 203 l 642 203 l 618 0 l 7 0 l 7 192 l 315 542 l 35 542 l 35 742 l 632 742 l 632 551 m 532 989 l 183 851 l 110 989 l 429 1189 l 532 989 z \\\"},\\\"ž\\\":{\\\"ha\\\":649,\\\"x_min\\\":7,\\\"x_max\\\":642,\\\"o\\\":\\\"m 632 551 l 328 203 l 642 203 l 618 0 l 7 0 l 7 192 l 315 542 l 35 542 l 35 742 l 632 742 l 632 551 m 618 1046 l 417 836 l 253 836 l 51 1046 l 144 1153 l 335 1019 l 525 1153 l 618 1046 z \\\"},\\\"ʑ\\\":{\\\"ha\\\":832,\\\"x_min\\\":7,\\\"x_max\\\":853,\\\"o\\\":\\\"m 663 413 q 799 363 746 413 q 853 229 853 314 q 776 59 853 119 q 539 0 700 -1 q 531 -137 531 -42 l 531 -183 l 385 -183 q 393 0 385 -75 l 7 0 l 7 192 l 315 542 l 35 542 l 35 742 l 632 742 l 632 565 l 314 203 l 421 203 q 515 364 454 315 q 663 413 576 413 m 603 203 q 675 247 675 203 q 666 270 675 261 q 640 279 657 279 q 565 203 588 279 l 603 203 z \\\"},\\\"ż\\\":{\\\"ha\\\":649,\\\"x_min\\\":7,\\\"x_max\\\":642,\\\"o\\\":\\\"m 632 551 l 328 203 l 642 203 l 618 0 l 7 0 l 7 192 l 315 542 l 35 542 l 35 742 l 632 742 l 632 551 m 335 1151 q 445 1109 401 1151 q 489 1004 489 1067 q 445 899 489 942 q 335 857 401 857 q 224 899 268 857 q 181 1004 181 942 q 224 1109 181 1067 q 335 1151 268 1151 z \\\"},\\\"ẓ\\\":{\\\"ha\\\":649,\\\"x_min\\\":7,\\\"x_max\\\":642,\\\"o\\\":\\\"m 632 551 l 328 203 l 642 203 l 618 0 l 7 0 l 7 192 l 315 542 l 35 542 l 35 742 l 632 742 l 632 551 m 315 -367 q 205 -324 249 -367 q 161 -219 161 -282 q 205 -115 161 -157 q 315 -72 249 -72 q 426 -115 382 -72 q 469 -219 469 -157 q 426 -324 469 -282 q 315 -367 382 -367 z \\\"},\\\"ȥ\\\":{\\\"ha\\\":639,\\\"x_min\\\":7,\\\"x_max\\\":632,\\\"o\\\":\\\"m 632 551 l 328 203 l 632 203 l 632 -22 q 547 -240 632 -165 q 318 -315 463 -315 q 101 -253 188 -315 l 190 -93 q 241 -115 221 -108 q 294 -121 261 -121 q 350 -102 329 -121 q 371 -47 371 -83 l 371 0 l 7 0 l 7 192 l 315 542 l 35 542 l 35 742 l 632 742 l 632 551 z \\\"},\\\"ʐ\\\":{\\\"ha\\\":656,\\\"x_min\\\":7,\\\"x_max\\\":897,\\\"o\\\":\\\"m 897 -253 q 681 -315 811 -315 q 461 -240 542 -315 q 381 -22 381 -165 l 381 0 l 7 0 l 7 192 l 315 542 l 35 542 l 35 742 l 632 742 l 632 551 l 328 203 l 642 203 l 642 -47 q 660 -102 642 -83 q 714 -121 679 -121 q 759 -115 740 -121 q 808 -93 778 -108 l 897 -253 z \\\"},\\\"ƶ\\\":{\\\"ha\\\":649,\\\"x_min\\\":7,\\\"x_max\\\":642,\\\"o\\\":\\\"m 642 189 l 618 0 l 7 0 l 7 178 l 124 314 l 39 314 l 39 460 l 247 460 l 329 556 l 35 556 l 35 742 l 632 742 l 632 565 l 543 460 l 606 460 l 606 314 l 419 314 l 314 189 l 642 189 z \\\"},\\\"ɀ\\\":{\\\"ha\\\":635,\\\"x_min\\\":7,\\\"x_max\\\":704,\\\"o\\\":\\\"m 553 -314 q 437 -294 485 -314 q 359 -244 389 -274 q 288 -165 329 -215 q 213 -82 244 -112 q 130 -28 181 -51 q 7 0 79 -4 l 7 192 l 315 542 l 35 542 l 35 742 l 632 742 l 632 551 l 263 143 q 375 75 333 115 q 461 -26 417 35 q 524 -98 499 -76 q 588 -119 549 -119 q 637 -115 618 -119 q 658 -108 656 -110 l 704 -272 q 553 -314 644 -314 z \\\"},\\\"ﬁ\\\":{\\\"ha\\\":851,\\\"x_min\\\":-3,\\\"x_max\\\":793,\\\"o\\\":\\\"m 447 1061 q 596 1044 526 1061 q 718 1003 665 1028 l 646 831 q 485 864 560 864 q 405 844 426 864 q 383 771 383 825 l 383 742 l 793 742 l 793 0 l 518 0 l 518 556 l 383 556 l 383 0 l 108 0 l 108 556 l -3 556 l -3 742 l 108 742 l 108 785 q 192 985 108 908 q 447 1061 275 1061 z \\\"},\\\"ﬂ\\\":{\\\"ha\\\":917,\\\"x_min\\\":-3,\\\"x_max\\\":931,\\\"o\\\":\\\"m 931 -3 q 856 -21 900 -14 q 769 -28 813 -28 q 603 33 663 -28 q 544 210 544 94 l 544 860 q 467 869 506 869 q 401 849 418 869 q 383 776 383 829 l 383 742 l 500 742 l 469 556 l 383 556 l 383 0 l 108 0 l 108 556 l -3 556 l -3 742 l 108 742 l 108 785 q 189 983 108 906 q 422 1061 269 1061 q 581 1038 492 1061 l 819 1061 l 819 243 q 851 188 819 188 q 882 193 865 188 l 931 -3 z \\\"},\\\"ª\\\":{\\\"ha\\\":694,\\\"x_min\\\":50,\\\"x_max\\\":649,\\\"o\\\":\\\"m 375 736 l 375 740 q 360 789 375 778 q 296 800 344 800 q 229 792 271 800 q 144 771 188 785 l 92 921 q 213 954 146 942 q 332 967 279 967 q 544 915 478 967 q 610 754 610 864 l 610 581 q 617 539 610 553 q 643 519 624 525 l 594 367 q 497 387 538 369 q 428 440 457 404 q 350 380 397 399 q 247 361 303 361 q 104 412 158 361 q 50 542 50 463 q 125 686 50 636 q 342 736 200 736 l 375 736 m 292 563 q 329 529 292 529 q 375 546 356 529 l 375 614 l 364 614 q 309 601 326 614 q 292 563 292 589 m 649 208 l 649 0 l 56 0 l 56 208 l 649 208 z \\\"},\\\"º\\\":{\\\"ha\\\":694,\\\"x_min\\\":35,\\\"x_max\\\":661,\\\"o\\\":\\\"m 347 967 q 577 888 493 967 q 661 663 661 810 q 577 442 661 524 q 349 361 493 361 q 119 440 203 361 q 35 665 35 518 q 119 885 35 804 q 347 967 204 967 m 347 797 q 297 766 313 797 q 281 665 281 735 q 296 561 281 592 q 349 531 311 531 q 399 562 383 531 q 415 663 415 593 q 400 767 415 736 q 347 797 385 797 m 35 208 l 660 208 l 660 0 l 35 0 l 35 208 z \\\"},\\\"ǂ\\\":{\\\"ha\\\":472,\\\"x_min\\\":0,\\\"x_max\\\":472,\\\"o\\\":\\\"m 353 543 l 353 482 l 472 482 l 472 336 l 353 336 l 353 0 l 119 0 l 119 336 l 0 336 l 0 482 l 119 482 l 119 543 l 0 543 l 0 689 l 119 689 l 119 1033 l 353 1057 l 353 689 l 472 689 l 472 543 l 353 543 z \\\"},\\\"ǀ\\\":{\\\"ha\\\":353,\\\"x_min\\\":60,\\\"x_max\\\":293,\\\"o\\\":\\\"m 293 0 l 60 0 l 60 1033 l 293 1057 l 293 0 z \\\"},\\\"ǁ\\\":{\\\"ha\\\":661,\\\"x_min\\\":60,\\\"x_max\\\":601,\\\"o\\\":\\\"m 293 0 l 60 0 l 60 1033 l 293 1057 l 293 0 m 601 0 l 368 0 l 368 1033 l 601 1057 l 601 0 z \\\"},\\\"ǃ\\\":{\\\"ha\\\":406,\\\"x_min\\\":60,\\\"x_max\\\":346,\\\"o\\\":\\\"m 319 347 l 86 347 l 86 1033 l 319 1057 l 319 347 m 203 258 q 304 216 263 258 q 346 115 346 174 q 304 15 346 57 q 203 -28 263 -28 q 101 15 143 -28 q 60 115 60 57 q 101 216 60 174 q 203 258 143 258 z \\\"},\\\"ʱ\\\":{\\\"ha\\\":436,\\\"x_min\\\":42,\\\"x_max\\\":394,\\\"o\\\":\\\"m 274 935 q 363 906 332 935 q 394 824 394 878 l 394 556 l 274 556 l 274 797 q 263 835 274 825 q 233 846 253 846 q 200 838 217 846 q 163 813 183 829 l 163 556 l 42 556 l 42 963 q 81 1049 42 1015 q 192 1082 121 1082 q 249 1076 218 1082 q 304 1060 281 1069 l 272 982 q 201 993 235 993 q 163 957 163 993 l 163 893 q 274 935 208 935 z \\\"},\\\"ʰ\\\":{\\\"ha\\\":436,\\\"x_min\\\":42,\\\"x_max\\\":394,\\\"o\\\":\\\"m 274 935 q 363 906 332 935 q 394 824 394 878 l 394 556 l 274 556 l 274 797 q 263 835 274 825 q 233 846 253 846 q 200 838 217 846 q 163 813 183 829 l 163 556 l 42 556 l 42 1072 l 163 1085 l 163 893 q 274 935 208 935 z \\\"},\\\"ʲ\\\":{\\\"ha\\\":300,\\\"x_min\\\":42,\\\"x_max\\\":258,\\\"o\\\":\\\"m 183 1126 q 238 1106 218 1126 q 258 1056 258 1086 q 238 1005 258 1025 q 183 985 218 985 q 128 1006 150 985 q 107 1056 107 1026 q 128 1106 107 1085 q 183 1126 150 1126 m 243 593 q 203 468 243 507 q 74 404 163 429 l 42 482 q 104 522 86 501 q 122 590 122 543 l 122 924 l 243 924 l 243 593 z \\\"},\\\"ˡ\\\":{\\\"ha\\\":258,\\\"x_min\\\":42,\\\"x_max\\\":217,\\\"o\\\":\\\"m 150 543 q 71 569 100 543 q 42 647 42 594 l 42 1072 l 163 1083 l 163 651 q 175 638 163 638 q 186 640 181 638 q 194 642 192 642 l 217 556 q 150 543 182 543 z \\\"},\\\"ⁿ\\\":{\\\"ha\\\":436,\\\"x_min\\\":42,\\\"x_max\\\":394,\\\"o\\\":\\\"m 274 935 q 363 906 332 935 q 394 824 394 878 l 394 556 l 274 556 l 274 797 q 263 835 274 825 q 233 846 253 846 q 200 838 217 846 q 163 813 183 829 l 163 556 l 42 556 l 42 924 l 135 924 l 150 881 q 274 935 200 935 z \\\"},\\\"ʴ\\\":{\\\"ha\\\":350,\\\"x_min\\\":42,\\\"x_max\\\":308,\\\"o\\\":\\\"m 308 925 l 308 556 l 218 556 l 194 633 q 153 569 181 592 q 88 546 126 546 q 42 553 58 546 l 60 661 q 97 656 75 656 q 153 682 133 656 q 188 761 174 708 l 188 925 l 308 925 z \\\"},\\\"ˢ\\\":{\\\"ha\\\":431,\\\"x_min\\\":49,\\\"x_max\\\":403,\\\"o\\\":\\\"m 239 935 q 385 888 319 935 l 339 821 q 288 843 311 836 q 239 850 265 850 q 182 826 182 850 q 199 808 182 815 q 269 788 215 800 q 372 743 342 771 q 403 664 403 715 q 354 578 403 613 q 224 543 306 543 q 49 597 122 543 l 103 661 q 160 635 133 643 q 224 628 188 628 q 288 658 288 628 q 272 683 288 674 q 197 704 256 692 q 100 747 131 719 q 69 822 69 774 q 115 903 69 871 q 239 935 161 935 z \\\"},\\\"ƻ\\\":{\\\"ha\\\":736,\\\"x_min\\\":-7,\\\"x_max\\\":708,\\\"o\\\":\\\"m 708 206 l 681 0 l 32 0 l 32 189 l 172 324 l 75 324 l 75 490 l 329 490 q 391 582 374 543 q 408 660 408 621 q 382 734 408 707 q 308 761 356 761 q 226 738 263 761 q 150 667 189 715 l -7 792 q 140 919 53 872 q 339 967 228 967 q 531 929 451 967 q 649 828 610 892 q 689 690 689 765 q 675 590 689 636 q 625 490 661 543 l 689 490 l 689 324 l 475 324 q 343 206 415 265 l 708 206 z \\\"},\\\"ʷ\\\":{\\\"ha\\\":653,\\\"x_min\\\":43,\\\"x_max\\\":611,\\\"o\\\":\\\"m 532 556 l 374 556 l 333 825 l 286 556 l 132 556 l 43 929 l 156 929 l 214 636 l 263 929 l 407 929 l 454 635 l 504 929 l 611 929 l 532 556 z \\\"},\\\"ˣ\\\":{\\\"ha\\\":483,\\\"x_min\\\":42,\\\"x_max\\\":442,\\\"o\\\":\\\"m 442 556 l 314 556 l 239 690 l 164 556 l 42 556 l 172 750 l 56 924 l 182 924 l 243 810 l 303 924 l 422 924 l 311 753 l 442 556 z \\\"},\\\"ʸ\\\":{\\\"ha\\\":507,\\\"x_min\\\":42,\\\"x_max\\\":465,\\\"o\\\":\\\"m 315 547 q 237 436 288 475 q 94 389 186 397 l 79 468 q 165 497 138 479 q 210 556 192 515 l 178 556 l 42 929 l 160 929 l 250 631 l 349 929 l 465 929 l 315 547 z \\\"},\\\"А\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 z \\\"},\\\"Б\\\":{\\\"ha\\\":842,\\\"x_min\\\":60,\\\"x_max\\\":828,\\\"o\\\":\\\"m 435 633 q 726 556 625 633 q 828 326 828 478 q 722 85 828 169 q 446 0 617 0 l 60 0 l 60 967 l 710 967 l 682 754 l 346 754 l 346 633 l 435 633 m 408 201 q 500 234 469 201 q 531 324 531 267 q 403 442 531 442 l 346 442 l 346 201 l 408 201 z \\\"},\\\"В\\\":{\\\"ha\\\":864,\\\"x_min\\\":60,\\\"x_max\\\":843,\\\"o\\\":\\\"m 628 513 q 783 441 724 493 q 843 286 843 389 q 727 63 843 126 q 399 0 611 0 l 60 0 l 60 967 l 361 967 q 690 909 576 967 q 803 717 803 851 q 753 581 803 631 q 628 513 703 532 m 346 771 l 346 593 l 394 593 q 486 615 460 593 q 513 688 513 636 q 484 751 513 731 q 388 771 456 771 l 346 771 m 401 201 q 511 224 474 201 q 549 306 549 246 q 515 387 549 361 q 413 413 481 413 l 346 413 l 346 201 l 401 201 z \\\"},\\\"Г\\\":{\\\"ha\\\":710,\\\"x_min\\\":60,\\\"x_max\\\":717,\\\"o\\\":\\\"m 689 747 l 346 747 l 346 0 l 60 0 l 60 967 l 717 967 l 689 747 z \\\"},\\\"Ѓ\\\":{\\\"ha\\\":710,\\\"x_min\\\":60,\\\"x_max\\\":717,\\\"o\\\":\\\"m 689 747 l 346 747 l 346 0 l 60 0 l 60 967 l 717 967 l 689 747 m 608 1167 l 256 1040 l 186 1178 l 511 1367 l 608 1167 z \\\"},\\\"Ґ\\\":{\\\"ha\\\":710,\\\"x_min\\\":60,\\\"x_max\\\":717,\\\"o\\\":\\\"m 717 1186 l 717 967 l 689 747 l 346 747 l 346 0 l 60 0 l 60 967 l 456 967 l 456 1186 l 717 1186 z \\\"},\\\"Д\\\":{\\\"ha\\\":892,\\\"x_min\\\":-21,\\\"x_max\\\":899,\\\"o\\\":\\\"m 899 214 l 899 -243 l 708 -243 l 681 0 l 197 0 l 169 -243 l -21 -243 l -21 214 l 53 214 q 114 356 89 261 q 164 649 139 451 l 203 967 l 810 967 l 810 214 l 899 214 m 535 763 l 442 763 l 435 683 q 378 375 415 482 q 275 214 340 268 l 535 214 l 535 763 z \\\"},\\\"Е\\\":{\\\"ha\\\":722,\\\"x_min\\\":60,\\\"x_max\\\":694,\\\"o\\\":\\\"m 665 768 l 346 768 l 346 588 l 626 588 l 626 394 l 346 394 l 346 200 l 688 200 l 688 0 l 60 0 l 60 967 l 694 967 l 665 768 z \\\"},\\\"Ѐ\\\":{\\\"ha\\\":722,\\\"x_min\\\":60,\\\"x_max\\\":694,\\\"o\\\":\\\"m 665 768 l 346 768 l 346 588 l 626 588 l 626 394 l 346 394 l 346 200 l 688 200 l 688 0 l 60 0 l 60 967 l 694 967 l 665 768 m 589 1178 l 519 1040 l 167 1167 l 265 1367 l 589 1178 z \\\"},\\\"Ё\\\":{\\\"ha\\\":722,\\\"x_min\\\":60,\\\"x_max\\\":694,\\\"o\\\":\\\"m 665 768 l 346 768 l 346 588 l 626 588 l 626 394 l 346 394 l 346 200 l 688 200 l 688 0 l 60 0 l 60 967 l 694 967 l 665 768 z \\\"},\\\"Ж\\\":{\\\"ha\\\":1328,\\\"x_min\\\":-21,\\\"x_max\\\":1349,\\\"o\\\":\\\"m 1092 538 l 1349 0 l 1042 0 l 861 404 l 793 404 l 793 0 l 535 0 l 535 404 l 464 404 l 281 0 l -21 0 l 236 538 l 4 967 l 279 967 l 472 597 l 535 597 l 535 967 l 793 967 l 793 597 l 856 597 l 1051 967 l 1324 967 l 1092 538 z \\\"},\\\"З\\\":{\\\"ha\\\":768,\\\"x_min\\\":-14,\\\"x_max\\\":747,\\\"o\\\":\\\"m 338 -28 q 135 8 219 -28 q -14 111 50 43 l 135 256 q 224 194 182 214 q 315 175 265 175 q 414 204 378 175 q 450 290 450 233 q 413 378 450 347 q 301 410 375 410 l 194 410 l 226 606 l 307 606 q 397 631 367 606 q 428 703 428 657 q 403 769 428 744 q 324 794 378 794 q 146 722 238 794 l 18 861 q 367 994 158 994 q 552 962 472 994 q 676 870 632 929 q 719 736 719 811 q 663 593 719 653 q 489 510 607 533 q 681 436 615 496 q 747 272 747 376 q 696 113 747 181 q 552 8 644 44 q 338 -28 460 -28 z \\\"},\\\"И\\\":{\\\"ha\\\":904,\\\"x_min\\\":60,\\\"x_max\\\":844,\\\"o\\\":\\\"m 844 0 l 565 0 l 565 296 q 607 696 565 504 l 399 0 l 60 0 l 60 967 l 339 967 l 339 660 q 328 465 339 543 q 297 278 318 386 l 513 967 l 844 967 l 844 0 z \\\"},\\\"Й\\\":{\\\"ha\\\":904,\\\"x_min\\\":60,\\\"x_max\\\":844,\\\"o\\\":\\\"m 844 0 l 565 0 l 565 296 q 607 696 565 504 l 399 0 l 60 0 l 60 967 l 339 967 l 339 660 q 328 465 339 543 q 297 278 318 386 l 513 967 l 844 967 l 844 0 z \\\"},\\\"Ѝ\\\":{\\\"ha\\\":904,\\\"x_min\\\":60,\\\"x_max\\\":844,\\\"o\\\":\\\"m 844 0 l 565 0 l 565 296 q 607 696 565 504 l 399 0 l 60 0 l 60 967 l 339 967 l 339 660 q 328 465 339 543 q 297 278 318 386 l 513 967 l 844 967 l 844 0 m 664 1178 l 594 1040 l 242 1167 l 340 1367 l 664 1178 z \\\"},\\\"Ҋ\\\":{\\\"ha\\\":983,\\\"x_min\\\":60,\\\"x_max\\\":1011,\\\"o\\\":\\\"m 453 1036 q 269 1103 333 1036 q 196 1281 204 1169 l 339 1304 q 378 1242 350 1261 q 453 1222 406 1222 q 528 1242 500 1222 q 567 1304 556 1261 l 710 1281 q 637 1103 701 1169 q 453 1036 572 1036 m 1011 214 l 872 -243 l 682 -243 l 738 0 l 565 0 l 565 296 q 607 696 565 504 l 399 0 l 60 0 l 60 967 l 339 967 l 339 660 q 328 465 339 543 q 297 278 318 386 l 513 967 l 844 967 l 844 214 l 1011 214 z \\\"},\\\"К\\\":{\\\"ha\\\":894,\\\"x_min\\\":60,\\\"x_max\\\":915,\\\"o\\\":\\\"m 669 538 l 915 0 l 608 0 l 429 400 l 346 400 l 346 0 l 60 0 l 60 967 l 346 967 l 346 601 l 436 601 l 615 967 l 890 967 l 669 538 z \\\"},\\\"Ќ\\\":{\\\"ha\\\":894,\\\"x_min\\\":60,\\\"x_max\\\":915,\\\"o\\\":\\\"m 669 538 l 915 0 l 608 0 l 429 400 l 346 400 l 346 0 l 60 0 l 60 967 l 346 967 l 346 601 l 436 601 l 615 967 l 890 967 l 669 538 m 658 1167 l 306 1040 l 236 1178 l 561 1367 l 658 1167 z \\\"},\\\"Л\\\":{\\\"ha\\\":907,\\\"x_min\\\":-7,\\\"x_max\\\":847,\\\"o\\\":\\\"m 847 967 l 847 0 l 561 0 l 561 756 l 424 756 l 392 483 q 340 219 372 321 q 241 56 307 118 q 60 -28 175 -7 l -7 167 q 66 224 42 188 q 102 319 90 261 q 129 506 114 378 l 185 967 l 847 967 z \\\"},\\\"М\\\":{\\\"ha\\\":1099,\\\"x_min\\\":21,\\\"x_max\\\":1078,\\\"o\\\":\\\"m 1078 0 l 796 0 l 789 343 q 788 464 788 383 q 799 738 788 606 l 685 97 l 414 97 l 292 738 q 310 407 310 544 l 310 344 l 303 0 l 21 0 l 90 967 l 443 967 l 554 340 l 654 967 l 1008 967 l 1078 0 z \\\"},\\\"Н\\\":{\\\"ha\\\":913,\\\"x_min\\\":60,\\\"x_max\\\":853,\\\"o\\\":\\\"m 567 390 l 346 390 l 346 0 l 60 0 l 60 967 l 346 967 l 346 610 l 567 610 l 567 967 l 853 967 l 853 0 l 567 0 l 567 390 z \\\"},\\\"О\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 z \\\"},\\\"П\\\":{\\\"ha\\\":913,\\\"x_min\\\":60,\\\"x_max\\\":853,\\\"o\\\":\\\"m 853 0 l 567 0 l 567 753 l 346 753 l 346 0 l 60 0 l 60 967 l 853 967 l 853 0 z \\\"},\\\"Р\\\":{\\\"ha\\\":849,\\\"x_min\\\":60,\\\"x_max\\\":828,\\\"o\\\":\\\"m 408 967 q 717 884 607 967 q 828 642 828 801 q 723 389 828 476 q 440 301 618 301 l 346 301 l 346 0 l 60 0 l 60 967 l 408 967 m 413 503 q 536 642 536 503 q 404 768 536 768 l 346 768 l 346 503 l 413 503 z \\\"},\\\"С\\\":{\\\"ha\\\":811,\\\"x_min\\\":28,\\\"x_max\\\":811,\\\"o\\\":\\\"m 489 994 q 800 881 668 994 l 668 725 q 587 772 626 756 q 503 789 547 789 q 372 713 418 789 q 325 486 325 636 q 372 262 325 336 q 507 188 419 188 q 595 207 554 188 q 686 265 636 226 l 811 107 q 670 10 753 49 q 493 -28 588 -28 q 246 31 350 -28 q 85 206 142 90 q 28 486 28 321 q 86 759 28 644 q 249 934 144 874 q 489 994 353 994 z \\\"},\\\"Т\\\":{\\\"ha\\\":769,\\\"x_min\\\":7,\\\"x_max\\\":776,\\\"o\\\":\\\"m 747 753 l 528 753 l 528 0 l 242 0 l 242 753 l 7 753 l 7 967 l 776 967 l 747 753 z \\\"},\\\"У\\\":{\\\"ha\\\":832,\\\"x_min\\\":-28,\\\"x_max\\\":867,\\\"o\\\":\\\"m 622 304 q 517 111 576 181 q 373 11 457 42 q 161 -28 289 -19 l 125 160 q 264 186 214 167 q 347 250 314 206 l 261 250 l -28 967 l 265 967 l 432 407 l 576 967 l 867 967 l 622 304 z \\\"},\\\"Ў\\\":{\\\"ha\\\":832,\\\"x_min\\\":-28,\\\"x_max\\\":867,\\\"o\\\":\\\"m 622 304 q 517 111 576 181 q 373 11 457 42 q 161 -28 289 -19 l 125 160 q 264 186 214 167 q 347 250 314 206 l 261 250 l -28 967 l 265 967 l 432 407 l 576 967 l 867 967 l 622 304 z \\\"},\\\"Ф\\\":{\\\"ha\\\":1213,\\\"x_min\\\":14,\\\"x_max\\\":1199,\\\"o\\\":\\\"m 1199 488 q 1077 173 1199 278 q 744 57 956 68 l 744 -61 l 467 -61 l 467 57 q 135 170 257 68 q 14 479 14 272 q 135 792 14 688 q 467 910 256 897 l 467 1022 l 744 1022 l 744 910 q 1076 797 954 899 q 1199 488 1199 694 m 731 224 q 869 297 828 233 q 910 488 910 361 q 867 672 910 610 q 731 744 825 735 l 731 224 m 303 479 q 345 296 303 358 q 481 222 388 233 l 481 743 q 344 669 385 733 q 303 479 303 604 z \\\"},\\\"Х\\\":{\\\"ha\\\":842,\\\"x_min\\\":-14,\\\"x_max\\\":856,\\\"o\\\":\\\"m 856 0 l 547 0 l 414 332 l 289 0 l -14 0 l 244 513 l 4 967 l 311 967 l 417 689 l 535 967 l 836 967 l 586 521 l 856 0 z \\\"},\\\"Ч\\\":{\\\"ha\\\":865,\\\"x_min\\\":14,\\\"x_max\\\":806,\\\"o\\\":\\\"m 806 967 l 806 0 l 519 0 l 519 339 q 322 271 439 271 q 94 365 175 271 q 14 626 14 460 l 14 967 l 294 967 l 294 626 q 320 510 294 546 q 407 474 346 474 q 471 483 444 474 q 519 511 497 492 l 519 967 l 806 967 z \\\"},\\\"Ц\\\":{\\\"ha\\\":971,\\\"x_min\\\":60,\\\"x_max\\\":957,\\\"o\\\":\\\"m 957 214 l 957 -243 l 767 -243 l 739 0 l 60 0 l 60 967 l 346 967 l 346 219 l 560 219 l 560 967 l 846 967 l 846 214 l 957 214 z \\\"},\\\"Ш\\\":{\\\"ha\\\":1250,\\\"x_min\\\":60,\\\"x_max\\\":1190,\\\"o\\\":\\\"m 1190 0 l 60 0 l 60 967 l 340 967 l 340 219 l 492 219 l 492 967 l 758 967 l 758 219 l 910 219 l 910 967 l 1190 967 l 1190 0 z \\\"},\\\"Щ\\\":{\\\"ha\\\":1315,\\\"x_min\\\":60,\\\"x_max\\\":1301,\\\"o\\\":\\\"m 1301 214 l 1301 -243 l 1111 -243 l 1083 0 l 60 0 l 60 967 l 340 967 l 340 219 l 492 219 l 492 967 l 758 967 l 758 219 l 910 219 l 910 967 l 1190 967 l 1190 214 l 1301 214 z \\\"},\\\"Џ\\\":{\\\"ha\\\":906,\\\"x_min\\\":60,\\\"x_max\\\":846,\\\"o\\\":\\\"m 846 0 l 563 0 l 563 -243 l 372 -243 l 344 0 l 60 0 l 60 967 l 346 967 l 346 219 l 560 219 l 560 967 l 846 967 l 846 0 z \\\"},\\\"Ь\\\":{\\\"ha\\\":842,\\\"x_min\\\":60,\\\"x_max\\\":828,\\\"o\\\":\\\"m 435 651 q 726 572 625 651 q 828 336 828 493 q 723 86 828 172 q 446 0 618 0 l 60 0 l 60 967 l 346 967 l 346 651 l 435 651 m 408 201 q 501 235 471 201 q 531 333 531 269 q 403 460 531 460 l 346 460 l 346 201 l 408 201 z \\\"},\\\"Ъ\\\":{\\\"ha\\\":1024,\\\"x_min\\\":7,\\\"x_max\\\":1010,\\\"o\\\":\\\"m 617 651 q 908 572 807 651 q 1010 336 1010 493 q 905 86 1010 172 q 628 0 800 0 l 242 0 l 242 758 l 7 758 l 7 967 l 528 967 l 528 651 l 617 651 m 590 201 q 683 235 653 201 q 713 333 713 269 q 585 460 713 460 l 528 460 l 528 201 l 590 201 z \\\"},\\\"Ы\\\":{\\\"ha\\\":1207,\\\"x_min\\\":60,\\\"x_max\\\":1147,\\\"o\\\":\\\"m 421 651 q 713 572 611 651 q 814 336 814 493 q 709 86 814 172 q 432 0 604 0 l 60 0 l 60 967 l 346 967 l 346 651 l 421 651 m 1147 967 l 1147 0 l 861 0 l 861 967 l 1147 967 m 394 201 q 487 235 457 201 q 517 333 517 269 q 389 460 517 460 l 346 460 l 346 201 l 394 201 z \\\"},\\\"Љ\\\":{\\\"ha\\\":1322,\\\"x_min\\\":-7,\\\"x_max\\\":1308,\\\"o\\\":\\\"m 915 651 q 1207 572 1106 651 q 1308 336 1308 493 q 1203 86 1308 172 q 926 0 1099 0 l 554 0 l 554 756 l 424 756 l 392 483 q 340 219 372 321 q 241 56 307 118 q 60 -28 175 -7 l -7 167 q 66 224 42 188 q 102 319 90 261 q 129 506 114 378 l 185 967 l 840 967 l 840 651 l 915 651 m 889 201 q 981 235 951 201 q 1011 333 1011 269 q 883 460 1011 460 l 840 460 l 840 201 l 889 201 z \\\"},\\\"Њ\\\":{\\\"ha\\\":1328,\\\"x_min\\\":60,\\\"x_max\\\":1314,\\\"o\\\":\\\"m 901 638 q 1206 559 1099 638 q 1314 328 1314 481 q 1208 83 1314 165 q 913 0 1101 0 l 560 0 l 560 439 l 346 439 l 346 0 l 60 0 l 60 967 l 346 967 l 346 638 l 560 638 l 560 967 l 846 967 l 846 638 l 901 638 m 894 203 q 1017 326 1017 203 q 986 412 1017 385 q 881 439 956 439 l 846 439 l 846 203 l 894 203 z \\\"},\\\"Ѕ\\\":{\\\"ha\\\":817,\\\"x_min\\\":0,\\\"x_max\\\":796,\\\"o\\\":\\\"m 415 994 q 772 863 636 994 l 646 714 q 439 792 549 792 q 361 774 388 792 q 335 722 335 756 q 349 681 335 697 q 398 651 364 665 q 508 613 432 638 q 728 490 661 564 q 796 289 796 417 q 747 124 796 196 q 606 13 697 53 q 389 -28 514 -28 q 164 13 261 -28 q 0 118 67 53 l 140 272 q 378 178 250 178 q 468 202 438 178 q 499 265 499 226 q 485 314 499 294 q 439 350 472 333 q 342 386 406 367 q 107 513 174 439 q 40 699 40 588 q 89 856 40 789 q 223 958 138 922 q 415 994 308 994 z \\\"},\\\"Є\\\":{\\\"ha\\\":811,\\\"x_min\\\":28,\\\"x_max\\\":811,\\\"o\\\":\\\"m 811 108 q 666 10 751 49 q 476 -28 581 -28 q 240 31 340 -28 q 83 206 139 90 q 28 486 28 322 q 85 759 28 644 q 247 934 143 874 q 483 994 350 994 q 800 879 667 994 l 667 724 q 584 776 625 758 q 496 793 543 793 q 375 740 424 793 q 317 589 326 686 l 626 589 l 626 397 l 317 397 q 374 237 324 294 q 499 179 425 179 q 598 201 553 179 q 692 263 643 222 l 811 108 z \\\"},\\\"Э\\\":{\\\"ha\\\":756,\\\"x_min\\\":0,\\\"x_max\\\":728,\\\"o\\\":\\\"m 325 994 q 623 867 518 994 q 728 500 728 740 q 616 108 728 243 q 307 -28 504 -28 q 133 1 207 -28 q 0 89 60 31 l 124 242 q 201 194 164 210 q 283 179 238 179 q 440 397 431 179 l 143 397 l 143 589 l 440 589 q 397 744 432 694 q 299 793 363 793 q 217 776 253 793 q 142 724 182 760 l 8 879 q 148 966 75 938 q 325 994 221 994 z \\\"},\\\"І\\\":{\\\"ha\\\":406,\\\"x_min\\\":60,\\\"x_max\\\":346,\\\"o\\\":\\\"m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 z \\\"},\\\"Ї\\\":{\\\"ha\\\":406,\\\"x_min\\\":-103,\\\"x_max\\\":501,\\\"o\\\":\\\"m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 z \\\"},\\\"Ј\\\":{\\\"ha\\\":451,\\\"x_min\\\":-28,\\\"x_max\\\":394,\\\"o\\\":\\\"m 394 154 q 346 -55 394 28 q 223 -183 297 -137 q 49 -262 149 -229 l -28 -61 q 61 -8 32 -39 q 99 63 90 24 q 108 164 108 103 l 108 967 l 394 967 l 394 154 z \\\"},\\\"Ћ\\\":{\\\"ha\\\":1069,\\\"x_min\\\":7,\\\"x_max\\\":1042,\\\"o\\\":\\\"m 726 668 q 960 574 879 668 q 1042 313 1042 479 l 1042 0 l 756 0 l 756 313 q 730 429 756 393 q 646 465 704 465 q 528 428 576 465 l 528 0 l 242 0 l 242 758 l 7 758 l 7 967 l 776 967 l 747 758 l 528 758 l 528 603 q 726 668 613 668 z \\\"},\\\"Ю\\\":{\\\"ha\\\":1321,\\\"x_min\\\":60,\\\"x_max\\\":1293,\\\"o\\\":\\\"m 856 994 q 1180 860 1067 994 q 1293 485 1293 726 q 1179 109 1293 246 q 856 -28 1065 -28 q 562 81 667 -28 q 436 390 457 190 l 346 390 l 346 0 l 60 0 l 60 967 l 346 967 l 346 610 l 442 610 q 576 896 474 797 q 856 994 678 994 m 856 175 q 964 246 932 175 q 996 485 996 317 q 963 722 996 651 q 856 792 931 792 q 748 722 781 792 q 715 485 715 651 q 748 247 715 318 q 856 175 781 175 z \\\"},\\\"Я\\\":{\\\"ha\\\":846,\\\"x_min\\\":-21,\\\"x_max\\\":786,\\\"o\\\":\\\"m 786 967 l 786 0 l 500 0 l 500 329 l 435 329 l 290 0 l -21 0 l 185 379 q 64 480 104 415 q 24 649 24 544 q 126 889 24 811 q 436 967 229 967 l 786 967 m 500 521 l 500 771 l 450 771 q 355 737 389 771 q 321 640 321 703 q 353 552 321 583 q 439 521 386 521 l 500 521 z \\\"},\\\"Ђ\\\":{\\\"ha\\\":1069,\\\"x_min\\\":7,\\\"x_max\\\":1042,\\\"o\\\":\\\"m 726 668 q 960 574 879 668 q 1042 313 1042 479 l 1042 154 q 993 -55 1042 28 q 870 -183 944 -137 q 696 -262 796 -229 l 619 -61 q 708 -8 679 -39 q 747 63 738 24 q 756 164 756 103 l 756 313 q 730 429 756 393 q 646 465 704 465 q 528 428 576 465 l 528 0 l 242 0 l 242 758 l 7 758 l 7 967 l 776 967 l 747 758 l 528 758 l 528 603 q 726 668 613 668 z \\\"},\\\"Ѡ\\\":{\\\"ha\\\":1272,\\\"x_min\\\":56,\\\"x_max\\\":1217,\\\"o\\\":\\\"m 1106 967 q 1188 722 1160 844 q 1217 422 1217 600 q 1135 83 1217 194 q 890 -28 1053 -28 q 638 151 690 -28 q 549 16 614 60 q 397 -28 483 -28 q 138 82 221 -28 q 56 422 56 192 q 84 721 56 599 q 165 967 113 843 l 428 967 l 418 929 q 361 688 381 793 q 342 439 342 583 q 362 235 342 296 q 431 175 382 175 q 499 278 499 175 l 499 554 l 781 554 l 781 278 q 795 197 781 219 q 847 175 810 175 q 912 235 893 175 q 931 439 931 294 q 917 640 931 549 q 883 799 903 731 q 831 967 864 867 l 1106 967 z \\\"},\\\"Ѣ\\\":{\\\"ha\\\":961,\\\"x_min\\\":0,\\\"x_max\\\":947,\\\"o\\\":\\\"m 554 633 q 844 556 742 633 q 947 326 947 478 q 842 85 947 169 q 565 0 736 0 l 179 0 l 179 717 l 0 717 l 0 876 l 179 876 l 179 967 l 465 967 l 465 876 l 669 876 l 669 717 l 465 717 l 465 633 l 554 633 m 528 201 q 619 234 589 201 q 650 324 650 267 q 522 442 650 442 l 465 442 l 465 201 l 528 201 z \\\"},\\\"Ѥ\\\":{\\\"ha\\\":1214,\\\"x_min\\\":60,\\\"x_max\\\":1214,\\\"o\\\":\\\"m 1214 108 q 1069 10 1154 49 q 879 -28 983 -28 q 577 80 694 -28 q 436 389 460 188 l 346 389 l 346 0 l 60 0 l 60 967 l 346 967 l 346 594 l 439 594 q 587 889 467 783 q 886 994 707 994 q 1203 879 1069 994 l 1069 724 q 987 776 1028 758 q 899 793 946 793 q 778 740 826 793 q 719 589 729 686 l 1029 589 l 1029 397 l 719 397 q 777 237 726 294 q 901 179 828 179 q 1001 201 956 179 q 1094 263 1046 222 l 1214 108 z \\\"},\\\"Ѧ\\\":{\\\"ha\\\":943,\\\"x_min\\\":-35,\\\"x_max\\\":978,\\\"o\\\":\\\"m 600 338 l 569 338 l 569 -1 l 374 -1 l 374 338 l 342 338 l 249 0 l -35 0 l 308 967 l 640 967 l 978 0 l 694 0 l 600 338 m 546 531 l 469 803 l 394 531 l 546 531 z \\\"},\\\"Ѩ\\\":{\\\"ha\\\":1339,\\\"x_min\\\":60,\\\"x_max\\\":1374,\\\"o\\\":\\\"m 996 338 l 965 338 l 965 -1 l 769 -1 l 769 338 l 738 338 l 644 0 l 361 0 l 479 332 l 346 332 l 346 -3 l 60 -3 l 60 964 l 346 964 l 346 531 l 550 531 l 704 967 l 1036 967 l 1374 0 l 1090 0 l 996 338 m 942 531 l 865 803 l 790 531 l 942 531 z \\\"},\\\"Ѫ\\\":{\\\"ha\\\":1169,\\\"x_min\\\":-21,\\\"x_max\\\":1190,\\\"o\\\":\\\"m 1190 0 l 900 0 l 760 344 l 717 344 l 717 0 l 458 0 l 458 344 l 415 344 l 269 0 l -21 0 l 217 538 l 325 538 l 135 800 l 135 967 l 1038 967 l 1038 800 l 840 538 l 956 538 l 1190 0 m 588 538 l 732 782 l 442 782 l 588 538 z \\\"},\\\"Ѭ\\\":{\\\"ha\\\":1432,\\\"x_min\\\":60,\\\"x_max\\\":1453,\\\"o\\\":\\\"m 1453 0 l 1165 0 l 1094 344 l 1046 344 l 1046 0 l 788 0 l 788 344 l 739 344 l 668 0 l 378 0 l 483 339 l 346 339 l 346 0 l 60 0 l 60 967 l 346 967 l 346 538 l 651 538 l 492 800 l 492 967 l 1339 967 l 1339 800 l 1172 538 l 1285 538 l 1453 0 m 778 782 l 917 538 l 1054 782 l 778 782 z \\\"},\\\"Ѯ\\\":{\\\"ha\\\":750,\\\"x_min\\\":28,\\\"x_max\\\":729,\\\"o\\\":\\\"m 451 551 q 657 472 585 544 q 729 269 729 399 q 652 55 729 124 q 438 -46 575 -14 q 335 -74 368 -62 q 292 -94 303 -85 q 282 -119 282 -104 q 295 -149 282 -137 q 335 -171 308 -161 l 279 -315 q 101 -228 167 -285 q 35 -86 35 -171 q 92 45 35 -1 q 269 121 149 92 q 372 156 338 138 q 421 200 407 174 q 435 271 435 226 q 401 368 435 339 q 289 397 367 397 l 142 397 l 142 546 l 361 767 l 28 767 l 28 967 l 671 967 l 671 774 l 451 551 m 633 1233 l 432 1038 l 268 1038 l 67 1233 l 160 1340 l 350 1221 l 540 1340 l 633 1233 z \\\"},\\\"Ѱ\\\":{\\\"ha\\\":1039,\\\"x_min\\\":14,\\\"x_max\\\":1025,\\\"o\\\":\\\"m 1025 967 l 1025 599 q 933 365 1025 458 q 663 246 842 272 l 663 0 l 376 0 l 376 244 q 105 361 196 271 q 14 599 14 451 l 14 967 l 286 967 l 286 586 q 310 488 286 525 q 390 433 333 450 l 390 967 l 649 967 l 649 435 q 728 489 704 451 q 753 586 753 526 l 753 967 l 1025 967 z \\\"},\\\"Ѳ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 368 738 407 792 q 321 561 329 683 l 638 561 q 590 738 629 683 q 479 792 551 792 m 479 175 q 592 231 554 175 q 639 414 631 288 l 319 414 q 367 231 328 288 q 479 175 406 175 z \\\"},\\\"Ѵ\\\":{\\\"ha\\\":917,\\\"x_min\\\":-35,\\\"x_max\\\":958,\\\"o\\\":\\\"m -35 967 l 265 967 l 414 199 l 490 718 q 585 928 511 863 q 771 994 658 994 q 875 981 832 994 q 958 943 918 968 l 886 781 q 856 793 868 789 q 829 797 844 797 q 788 782 803 797 q 763 729 772 767 l 594 0 l 225 0 l -35 967 z \\\"},\\\"Ѷ\\\":{\\\"ha\\\":917,\\\"x_min\\\":-35,\\\"x_max\\\":958,\\\"o\\\":\\\"m -35 967 l 265 967 l 414 199 l 490 718 q 585 928 511 863 q 771 994 658 994 q 875 981 832 994 q 958 943 918 968 l 886 781 q 856 793 868 789 q 829 797 844 797 q 788 782 803 797 q 763 729 772 767 l 594 0 l 225 0 l -35 967 z \\\"},\\\"Ѹ\\\":{\\\"ha\\\":1700,\\\"x_min\\\":28,\\\"x_max\\\":1721,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 m 1493 1 q 1332 -232 1446 -153 q 1032 -317 1218 -311 l 1003 -129 q 1162 -90 1110 -118 q 1243 0 1214 -62 l 1149 0 l 938 742 l 1229 742 l 1322 168 l 1438 742 l 1721 742 l 1493 1 z \\\"},\\\"Ғ\\\":{\\\"ha\\\":724,\\\"x_min\\\":-18,\\\"x_max\\\":731,\\\"o\\\":\\\"m 360 747 l 360 601 l 544 601 l 544 440 l 360 440 l 360 0 l 74 0 l 74 440 l -18 440 l -18 601 l 74 601 l 74 967 l 731 967 l 703 747 l 360 747 z \\\"},\\\"Ҕ\\\":{\\\"ha\\\":888,\\\"x_min\\\":60,\\\"x_max\\\":860,\\\"o\\\":\\\"m 544 640 q 778 546 697 640 q 860 285 860 451 l 860 -22 q 774 -240 860 -165 q 539 -315 688 -315 q 321 -253 407 -315 l 410 -86 q 459 -108 440 -101 q 504 -114 478 -114 q 556 -95 538 -114 q 574 -40 574 -76 l 574 285 q 548 401 574 365 q 464 438 522 438 q 346 400 394 438 l 346 0 l 60 0 l 60 967 l 710 967 l 682 754 l 346 754 l 346 575 q 544 640 431 640 z \\\"},\\\"Җ\\\":{\\\"ha\\\":1328,\\\"x_min\\\":-21,\\\"x_max\\\":1349,\\\"o\\\":\\\"m 1349 214 l 1349 -243 l 1158 -243 l 1131 0 l 1042 0 l 861 404 l 793 404 l 793 0 l 535 0 l 535 404 l 464 404 l 281 0 l -21 0 l 236 538 l 4 967 l 279 967 l 472 597 l 535 597 l 535 967 l 793 967 l 793 597 l 856 597 l 1051 967 l 1324 967 l 1092 538 l 1246 214 l 1349 214 z \\\"},\\\"Ҙ\\\":{\\\"ha\\\":768,\\\"x_min\\\":-14,\\\"x_max\\\":747,\\\"o\\\":\\\"m 747 272 q 669 82 747 158 q 457 -18 592 6 q 582 -187 582 -82 q 519 -322 582 -274 q 360 -371 457 -371 q 199 -335 268 -371 l 249 -206 q 329 -225 290 -225 q 386 -207 367 -225 q 406 -158 406 -189 q 387 -93 406 -125 q 321 -28 368 -61 q 128 10 208 -25 q -14 111 47 44 l 135 256 q 224 194 182 214 q 315 175 265 175 q 414 204 378 175 q 450 290 450 233 q 413 378 450 347 q 301 410 375 410 l 194 410 l 226 606 l 307 606 q 397 631 367 606 q 428 703 428 657 q 403 769 428 744 q 324 794 378 794 q 146 722 238 794 l 18 861 q 367 994 158 994 q 552 962 472 994 q 676 870 632 929 q 719 736 719 811 q 663 593 719 653 q 489 510 607 533 q 681 436 615 496 q 747 272 747 376 z \\\"},\\\"Қ\\\":{\\\"ha\\\":894,\\\"x_min\\\":60,\\\"x_max\\\":915,\\\"o\\\":\\\"m 915 214 l 915 -243 l 725 -243 l 697 0 l 608 0 l 429 400 l 346 400 l 346 0 l 60 0 l 60 967 l 346 967 l 346 601 l 436 601 l 615 967 l 890 967 l 669 538 l 818 214 l 915 214 z \\\"},\\\"Ҝ\\\":{\\\"ha\\\":913,\\\"x_min\\\":60,\\\"x_max\\\":926,\\\"o\\\":\\\"m 926 0 l 628 0 l 485 411 l 467 411 l 467 201 l 375 201 l 375 411 l 332 411 l 332 0 l 60 0 l 60 967 l 332 967 l 332 590 l 375 590 l 375 799 l 467 799 l 467 590 l 485 590 l 626 967 l 901 967 l 710 538 l 926 0 z \\\"},\\\"Ҟ\\\":{\\\"ha\\\":917,\\\"x_min\\\":14,\\\"x_max\\\":938,\\\"o\\\":\\\"m 938 0 l 631 0 l 451 400 l 368 400 l 368 0 l 82 0 l 82 714 l 14 714 l 14 875 l 82 875 l 82 967 l 368 967 l 368 875 l 465 875 l 465 714 l 368 714 l 368 601 l 458 601 l 638 967 l 913 967 l 692 538 l 938 0 z \\\"},\\\"Ҡ\\\":{\\\"ha\\\":1076,\\\"x_min\\\":7,\\\"x_max\\\":1097,\\\"o\\\":\\\"m 1097 0 l 790 0 l 611 400 l 528 400 l 528 0 l 242 0 l 242 758 l 7 758 l 7 967 l 528 967 l 528 601 l 618 601 l 797 967 l 1072 967 l 851 538 l 1097 0 z \\\"},\\\"Ң\\\":{\\\"ha\\\":978,\\\"x_min\\\":60,\\\"x_max\\\":964,\\\"o\\\":\\\"m 964 214 l 964 -243 l 774 -243 l 746 0 l 567 0 l 567 390 l 346 390 l 346 0 l 60 0 l 60 967 l 346 967 l 346 610 l 567 610 l 567 967 l 853 967 l 853 214 l 964 214 z \\\"},\\\"Ҥ\\\":{\\\"ha\\\":1094,\\\"x_min\\\":60,\\\"x_max\\\":1101,\\\"o\\\":\\\"m 1072 753 l 853 753 l 853 0 l 567 0 l 567 390 l 346 390 l 346 0 l 60 0 l 60 967 l 346 967 l 346 610 l 567 610 l 567 967 l 1101 967 l 1072 753 z \\\"},\\\"Ҧ\\\":{\\\"ha\\\":1394,\\\"x_min\\\":60,\\\"x_max\\\":1367,\\\"o\\\":\\\"m 1051 668 q 1285 574 1204 668 q 1367 313 1367 479 l 1367 -22 q 1281 -240 1367 -165 q 1046 -315 1194 -315 q 828 -253 914 -315 l 917 -86 q 966 -108 947 -101 q 1011 -114 985 -114 q 1063 -95 1044 -114 q 1081 -40 1081 -76 l 1081 313 q 1055 429 1081 393 q 971 465 1029 465 q 853 428 901 465 l 853 0 l 567 0 l 567 753 l 346 753 l 346 0 l 60 0 l 60 967 l 853 967 l 853 603 q 1051 668 938 668 z \\\"},\\\"Ԥ\\\":{\\\"ha\\\":978,\\\"x_min\\\":60,\\\"x_max\\\":964,\\\"o\\\":\\\"m 964 214 l 964 -243 l 774 -243 l 746 0 l 567 0 l 567 753 l 346 753 l 346 0 l 60 0 l 60 967 l 853 967 l 853 214 l 964 214 z \\\"},\\\"Ҩ\\\":{\\\"ha\\\":996,\\\"x_min\\\":28,\\\"x_max\\\":972,\\\"o\\\":\\\"m 972 381 q 921 198 972 289 q 774 47 869 107 q 900 -124 829 -36 l 772 -207 q 625 -14 667 -71 q 492 -28 556 -28 q 246 31 350 -28 q 85 206 142 90 q 28 486 28 321 q 86 759 28 644 q 249 934 144 874 q 489 994 353 994 q 800 881 668 994 l 668 725 q 587 772 626 756 q 503 789 547 789 q 372 713 418 789 q 325 486 325 636 q 369 266 325 340 q 499 188 414 192 q 447 383 447 293 q 518 561 447 494 q 704 628 589 628 q 836 601 775 628 q 935 519 897 575 q 972 381 972 464 m 704 464 q 643 379 643 464 q 674 228 643 306 q 740 297 718 256 q 761 390 761 339 q 747 444 761 425 q 704 464 732 464 z \\\"},\\\"Ҫ\\\":{\\\"ha\\\":811,\\\"x_min\\\":28,\\\"x_max\\\":811,\\\"o\\\":\\\"m 561 -22 q 678 -187 678 -86 q 615 -322 678 -274 q 456 -371 553 -371 q 294 -335 364 -371 l 344 -206 q 425 -225 386 -225 q 482 -207 463 -225 q 501 -158 501 -189 q 481 -90 501 -124 q 407 -22 460 -57 q 128 134 229 3 q 28 486 28 265 q 86 759 28 644 q 249 934 144 874 q 489 994 353 994 q 800 881 668 994 l 668 725 q 587 772 626 756 q 503 789 547 789 q 372 713 418 789 q 325 486 325 636 q 372 262 325 336 q 507 188 419 188 q 595 207 554 188 q 686 265 636 226 l 811 107 q 699 25 764 60 q 561 -22 635 -10 z \\\"},\\\"Ҭ\\\":{\\\"ha\\\":769,\\\"x_min\\\":7,\\\"x_max\\\":776,\\\"o\\\":\\\"m 528 753 l 528 214 l 639 214 l 639 -243 l 449 -243 l 421 0 l 242 0 l 242 753 l 7 753 l 7 967 l 776 967 l 747 753 l 528 753 z \\\"},\\\"Ҳ\\\":{\\\"ha\\\":842,\\\"x_min\\\":-14,\\\"x_max\\\":856,\\\"o\\\":\\\"m 856 214 l 856 -243 l 665 -243 l 638 0 l 547 0 l 414 332 l 289 0 l -14 0 l 244 513 l 4 967 l 311 967 l 417 689 l 535 967 l 836 967 l 586 521 l 744 214 l 856 214 z \\\"},\\\"Ҵ\\\":{\\\"ha\\\":1153,\\\"x_min\\\":7,\\\"x_max\\\":1139,\\\"o\\\":\\\"m 1139 214 l 1139 -243 l 949 -243 l 921 0 l 242 0 l 242 758 l 7 758 l 7 967 l 681 967 l 651 758 l 528 758 l 528 219 l 742 219 l 742 967 l 1028 967 l 1028 214 l 1139 214 z \\\"},\\\"Ҷ\\\":{\\\"ha\\\":931,\\\"x_min\\\":14,\\\"x_max\\\":917,\\\"o\\\":\\\"m 917 214 l 917 -243 l 726 -243 l 699 0 l 519 0 l 519 339 q 322 271 439 271 q 94 365 175 271 q 14 626 14 460 l 14 967 l 294 967 l 294 626 q 320 510 294 546 q 407 474 346 474 q 471 483 444 474 q 519 511 497 492 l 519 967 l 806 967 l 806 214 l 917 214 z \\\"},\\\"Ҹ\\\":{\\\"ha\\\":865,\\\"x_min\\\":14,\\\"x_max\\\":806,\\\"o\\\":\\\"m 806 967 l 806 0 l 519 0 l 519 339 q 464 301 492 315 l 464 174 l 372 174 l 372 274 q 322 271 342 271 q 94 365 175 271 q 14 626 14 460 l 14 967 l 294 967 l 294 626 q 313 522 294 558 q 372 476 331 486 l 372 771 l 464 771 l 464 481 q 519 511 497 492 l 519 967 l 806 967 z \\\"},\\\"Һ\\\":{\\\"ha\\\":888,\\\"x_min\\\":60,\\\"x_max\\\":860,\\\"o\\\":\\\"m 544 668 q 778 574 697 668 q 860 313 860 479 l 860 0 l 574 0 l 574 313 q 548 429 574 393 q 464 465 522 465 q 346 428 394 465 l 346 0 l 60 0 l 60 967 l 346 967 l 346 603 q 544 668 431 668 z \\\"},\\\"Ԧ\\\":{\\\"ha\\\":985,\\\"x_min\\\":60,\\\"x_max\\\":971,\\\"o\\\":\\\"m 971 214 l 971 -243 l 781 -243 l 753 0 l 574 0 l 574 313 q 548 429 574 393 q 464 465 522 465 q 346 428 394 465 l 346 0 l 60 0 l 60 967 l 346 967 l 346 603 q 544 668 431 668 q 778 574 697 668 q 860 313 860 479 l 860 214 l 971 214 z \\\"},\\\"Ԩ\\\":{\\\"ha\\\":913,\\\"x_min\\\":-193,\\\"x_max\\\":853,\\\"o\\\":\\\"m 853 967 l 853 0 l 567 0 l 567 390 l 346 390 l 346 -22 q 260 -240 346 -165 q 25 -315 174 -315 q -193 -253 -107 -315 l -104 -86 q -55 -108 -74 -101 q -10 -114 -36 -114 q 42 -95 24 -114 q 60 -40 60 -76 l 60 967 l 346 967 l 346 610 l 567 610 l 567 967 l 853 967 z \\\"},\\\"Ԫ\\\":{\\\"ha\\\":1540,\\\"x_min\\\":-21,\\\"x_max\\\":1561,\\\"o\\\":\\\"m 1561 0 l 1254 0 l 1107 400 l 1076 400 l 1076 0 l 808 0 l 808 -243 l 618 -243 l 590 0 l 197 0 l 169 -243 l -21 -243 l -21 214 l 33 214 q 95 358 69 263 q 144 649 121 453 l 183 967 l 693 967 l 693 601 l 800 601 l 800 967 l 1076 967 l 1076 601 l 1114 601 l 1261 967 l 1536 967 l 1329 538 l 1561 0 m 449 763 l 401 763 l 394 683 q 340 376 378 483 q 235 214 301 269 l 449 214 l 449 763 m 693 400 l 693 214 l 800 214 l 800 400 l 693 400 z \\\"},\\\"Ԭ\\\":{\\\"ha\\\":994,\\\"x_min\\\":14,\\\"x_max\\\":1001,\\\"o\\\":\\\"m 1001 214 l 1001 -243 l 811 -243 l 783 0 l 232 0 l 204 -243 l 14 -243 l 14 214 l 114 214 q 142 241 117 217 q 200 315 168 265 q 257 422 232 364 q 74 540 126 453 q 22 785 22 626 l 22 967 l 264 967 l 264 774 q 274 665 264 704 q 314 604 285 625 q 344 844 336 717 l 351 967 l 913 967 l 913 214 l 1001 214 m 582 683 q 563 579 576 632 l 660 579 l 660 763 l 590 763 l 582 683 m 660 214 l 660 401 l 493 403 q 419 283 458 335 q 356 214 379 231 l 660 214 z \\\"},\\\"Ԯ\\\":{\\\"ha\\\":972,\\\"x_min\\\":-7,\\\"x_max\\\":958,\\\"o\\\":\\\"m 958 214 l 958 -243 l 768 -243 l 740 0 l 561 0 l 561 756 l 424 756 l 392 483 q 340 219 372 321 q 241 56 307 118 q 60 -28 175 -7 l -7 167 q 66 224 42 188 q 102 319 90 261 q 129 506 114 378 l 185 967 l 847 967 l 847 214 l 958 214 z \\\"},\\\"Ҽ\\\":{\\\"ha\\\":1126,\\\"x_min\\\":-14,\\\"x_max\\\":1113,\\\"o\\\":\\\"m 1113 494 q 1103 389 1113 440 l 561 389 q 732 175 569 175 q 838 193 794 175 q 931 246 882 211 l 1058 99 q 898 3 983 35 q 703 -28 813 -28 q 408 78 518 -28 q 278 385 299 183 l 272 385 q 65 446 143 385 q -14 615 -14 507 q 3 703 -14 661 q 50 792 21 746 l 221 719 q 205 673 210 692 q 200 635 200 654 q 257 583 200 583 l 279 583 q 411 889 301 783 q 699 994 521 994 q 1012 861 911 994 q 1113 494 1113 728 m 839 576 q 701 792 839 792 q 598 742 633 792 q 561 576 563 693 l 839 576 z \\\"},\\\"Ҿ\\\":{\\\"ha\\\":1126,\\\"x_min\\\":-14,\\\"x_max\\\":1113,\\\"o\\\":\\\"m 1113 494 q 1103 389 1113 440 l 561 389 q 732 175 569 175 q 838 193 794 175 q 931 246 882 211 l 1058 99 q 854 -10 965 18 q 751 -71 781 -39 q 722 -132 722 -103 q 793 -193 722 -193 q 878 -182 829 -193 l 861 -342 q 758 -353 813 -353 q 599 -306 661 -353 q 536 -178 536 -258 q 611 -21 536 -85 q 381 106 467 3 q 278 385 296 210 l 272 385 q 65 446 143 385 q -14 615 -14 507 q 3 703 -14 661 q 50 792 21 746 l 221 719 q 205 673 210 692 q 200 635 200 654 q 257 583 200 583 l 279 583 q 411 889 301 783 q 699 994 521 994 q 1012 861 911 994 q 1113 494 1113 728 m 839 576 q 701 792 839 792 q 598 742 633 792 q 561 576 563 693 l 839 576 z \\\"},\\\"Ӏ\\\":{\\\"ha\\\":406,\\\"x_min\\\":60,\\\"x_max\\\":346,\\\"o\\\":\\\"m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 z \\\"},\\\"Ӂ\\\":{\\\"ha\\\":1328,\\\"x_min\\\":-21,\\\"x_max\\\":1349,\\\"o\\\":\\\"m 1092 538 l 1349 0 l 1042 0 l 861 404 l 793 404 l 793 0 l 535 0 l 535 404 l 464 404 l 281 0 l -21 0 l 236 538 l 4 967 l 279 967 l 472 597 l 535 597 l 535 967 l 793 967 l 793 597 l 856 597 l 1051 967 l 1324 967 l 1092 538 z \\\"},\\\"Ӄ\\\":{\\\"ha\\\":904,\\\"x_min\\\":60,\\\"x_max\\\":876,\\\"o\\\":\\\"m 671 579 q 813 476 765 553 q 860 268 860 400 l 860 -22 q 774 -240 860 -165 q 539 -315 688 -315 q 321 -253 407 -315 l 410 -86 q 459 -108 440 -101 q 504 -114 478 -114 q 556 -95 538 -114 q 574 -40 574 -76 l 574 268 q 548 363 574 332 q 464 393 522 393 l 346 393 l 346 0 l 60 0 l 60 967 l 346 967 l 346 594 l 422 594 l 601 967 l 876 967 l 671 579 z \\\"},\\\"Ӆ\\\":{\\\"ha\\\":986,\\\"x_min\\\":-7,\\\"x_max\\\":1014,\\\"o\\\":\\\"m 1014 214 l 875 -243 l 685 -243 l 740 0 l 561 0 l 561 756 l 424 756 l 392 483 q 340 219 372 321 q 241 56 307 118 q 60 -28 175 -7 l -7 167 q 66 224 42 188 q 102 319 90 261 q 129 506 114 378 l 185 967 l 847 967 l 847 214 l 1014 214 z \\\"},\\\"Ӈ\\\":{\\\"ha\\\":913,\\\"x_min\\\":60,\\\"x_max\\\":853,\\\"o\\\":\\\"m 853 967 l 853 -22 q 767 -240 853 -165 q 532 -315 681 -315 q 314 -253 400 -315 l 403 -86 q 452 -108 433 -101 q 497 -114 471 -114 q 549 -95 531 -114 q 567 -40 567 -76 l 567 390 l 346 390 l 346 0 l 60 0 l 60 967 l 346 967 l 346 610 l 567 610 l 567 967 l 853 967 z \\\"},\\\"Ӊ\\\":{\\\"ha\\\":992,\\\"x_min\\\":60,\\\"x_max\\\":1019,\\\"o\\\":\\\"m 1019 214 l 881 -243 l 690 -243 l 746 0 l 567 0 l 567 390 l 346 390 l 346 0 l 60 0 l 60 967 l 346 967 l 346 610 l 567 610 l 567 967 l 853 967 l 853 214 l 1019 214 z \\\"},\\\"Ӌ\\\":{\\\"ha\\\":865,\\\"x_min\\\":14,\\\"x_max\\\":806,\\\"o\\\":\\\"m 806 967 l 806 0 l 642 0 l 614 -243 l 424 -243 l 424 200 l 519 200 l 519 353 q 322 285 439 285 q 94 379 175 285 q 14 640 14 474 l 14 967 l 294 967 l 294 640 q 320 524 294 560 q 407 488 346 488 q 471 497 444 488 q 519 525 497 506 l 519 967 l 806 967 z \\\"},\\\"Ӎ\\\":{\\\"ha\\\":1217,\\\"x_min\\\":21,\\\"x_max\\\":1244,\\\"o\\\":\\\"m 1244 214 l 1106 -243 l 915 -243 l 971 0 l 796 0 l 789 343 q 788 464 788 383 q 799 738 788 606 l 685 97 l 414 97 l 292 738 q 310 407 310 544 l 310 344 l 303 0 l 21 0 l 90 967 l 443 967 l 554 340 l 654 967 l 1008 967 l 1063 214 l 1244 214 z \\\"},\\\"Ӑ\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 z \\\"},\\\"Ӓ\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 z \\\"},\\\"Ӕ\\\":{\\\"ha\\\":1199,\\\"x_min\\\":-42,\\\"x_max\\\":1171,\\\"o\\\":\\\"m 1171 200 l 1171 0 l 606 0 l 581 188 l 326 188 l 269 0 l -42 0 l 335 967 l 1122 967 l 1093 768 l 750 768 l 782 585 l 1110 585 l 1110 392 l 814 392 l 847 200 l 1171 200 m 553 388 l 503 763 l 388 388 l 553 388 z \\\"},\\\"Ӗ\\\":{\\\"ha\\\":722,\\\"x_min\\\":60,\\\"x_max\\\":694,\\\"o\\\":\\\"m 665 768 l 346 768 l 346 588 l 626 588 l 626 394 l 346 394 l 346 200 l 688 200 l 688 0 l 60 0 l 60 967 l 694 967 l 665 768 z \\\"},\\\"Ә\\\":{\\\"ha\\\":881,\\\"x_min\\\":14,\\\"x_max\\\":853,\\\"o\\\":\\\"m 424 994 q 742 865 631 994 q 853 486 853 735 q 742 105 853 238 q 429 -28 631 -28 q 115 106 217 -28 q 14 472 14 239 q 24 578 14 526 l 565 578 q 394 792 557 792 q 286 773 332 792 q 192 719 240 754 l 68 868 q 228 963 143 932 q 424 994 314 994 m 429 175 q 530 224 496 175 q 565 390 564 274 l 288 390 q 324 225 288 275 q 429 175 361 175 z \\\"},\\\"Ӛ\\\":{\\\"ha\\\":881,\\\"x_min\\\":14,\\\"x_max\\\":853,\\\"o\\\":\\\"m 424 994 q 742 865 631 994 q 853 486 853 735 q 742 105 853 238 q 429 -28 631 -28 q 115 106 217 -28 q 14 472 14 239 q 24 578 14 526 l 565 578 q 394 792 557 792 q 286 773 332 792 q 192 719 240 754 l 68 868 q 228 963 143 932 q 424 994 314 994 m 429 175 q 530 224 496 175 q 565 390 564 274 l 288 390 q 324 225 288 275 q 429 175 361 175 z \\\"},\\\"Ӝ\\\":{\\\"ha\\\":1328,\\\"x_min\\\":-21,\\\"x_max\\\":1349,\\\"o\\\":\\\"m 1092 538 l 1349 0 l 1042 0 l 861 404 l 793 404 l 793 0 l 535 0 l 535 404 l 464 404 l 281 0 l -21 0 l 236 538 l 4 967 l 279 967 l 472 597 l 535 597 l 535 967 l 793 967 l 793 597 l 856 597 l 1051 967 l 1324 967 l 1092 538 z \\\"},\\\"Ӟ\\\":{\\\"ha\\\":768,\\\"x_min\\\":-14,\\\"x_max\\\":747,\\\"o\\\":\\\"m 338 -28 q 135 8 219 -28 q -14 111 50 43 l 135 256 q 224 194 182 214 q 315 175 265 175 q 414 204 378 175 q 450 290 450 233 q 413 378 450 347 q 301 410 375 410 l 194 410 l 226 606 l 307 606 q 397 631 367 606 q 428 703 428 657 q 403 769 428 744 q 324 794 378 794 q 146 722 238 794 l 18 861 q 367 994 158 994 q 552 962 472 994 q 676 870 632 929 q 719 736 719 811 q 663 593 719 653 q 489 510 607 533 q 681 436 615 496 q 747 272 747 376 q 696 113 747 181 q 552 8 644 44 q 338 -28 460 -28 z \\\"},\\\"Ӡ\\\":{\\\"ha\\\":785,\\\"x_min\\\":0,\\\"x_max\\\":764,\\\"o\\\":\\\"m 489 564 q 692 483 619 554 q 764 292 764 411 q 715 130 764 203 q 574 15 667 57 q 353 -28 482 -28 q 148 12 233 -28 q 0 125 63 51 l 142 263 q 236 197 193 217 q 336 178 279 178 q 433 210 396 178 q 469 304 469 243 q 430 385 469 360 q 324 411 390 411 l 176 411 l 176 560 l 396 767 l 63 767 l 63 967 l 706 967 l 706 774 l 489 564 z \\\"},\\\"Ӣ\\\":{\\\"ha\\\":904,\\\"x_min\\\":60,\\\"x_max\\\":844,\\\"o\\\":\\\"m 844 0 l 565 0 l 565 296 q 607 696 565 504 l 399 0 l 60 0 l 60 967 l 339 967 l 339 660 q 328 465 339 543 q 297 278 318 386 l 513 967 l 844 967 l 844 0 z \\\"},\\\"Ӥ\\\":{\\\"ha\\\":904,\\\"x_min\\\":60,\\\"x_max\\\":844,\\\"o\\\":\\\"m 844 0 l 565 0 l 565 296 q 607 696 565 504 l 399 0 l 60 0 l 60 967 l 339 967 l 339 660 q 328 465 339 543 q 297 278 318 386 l 513 967 l 844 967 l 844 0 z \\\"},\\\"Ӧ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 z \\\"},\\\"Ө\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 368 738 407 792 q 321 561 329 683 l 638 561 q 590 738 629 683 q 479 792 551 792 m 479 175 q 592 231 554 175 q 639 414 631 288 l 319 414 q 367 231 328 288 q 479 175 406 175 z \\\"},\\\"Ӫ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 368 738 407 792 q 321 561 329 683 l 638 561 q 590 738 629 683 q 479 792 551 792 m 479 175 q 592 231 554 175 q 639 414 631 288 l 319 414 q 367 231 328 288 q 479 175 406 175 z \\\"},\\\"Ӭ\\\":{\\\"ha\\\":756,\\\"x_min\\\":0,\\\"x_max\\\":728,\\\"o\\\":\\\"m 325 994 q 623 867 518 994 q 728 500 728 740 q 616 108 728 243 q 307 -28 504 -28 q 133 1 207 -28 q 0 89 60 31 l 124 242 q 201 194 164 210 q 283 179 238 179 q 440 397 431 179 l 143 397 l 143 589 l 440 589 q 397 744 432 694 q 299 793 363 793 q 217 776 253 793 q 142 724 182 760 l 8 879 q 148 966 75 938 q 325 994 221 994 z \\\"},\\\"Ӯ\\\":{\\\"ha\\\":832,\\\"x_min\\\":-28,\\\"x_max\\\":867,\\\"o\\\":\\\"m 622 304 q 517 111 576 181 q 373 11 457 42 q 161 -28 289 -19 l 125 160 q 264 186 214 167 q 347 250 314 206 l 261 250 l -28 967 l 265 967 l 432 407 l 576 967 l 867 967 l 622 304 z \\\"},\\\"Ӱ\\\":{\\\"ha\\\":832,\\\"x_min\\\":-28,\\\"x_max\\\":867,\\\"o\\\":\\\"m 622 304 q 517 111 576 181 q 373 11 457 42 q 161 -28 289 -19 l 125 160 q 264 186 214 167 q 347 250 314 206 l 261 250 l -28 967 l 265 967 l 432 407 l 576 967 l 867 967 l 622 304 z \\\"},\\\"Ӳ\\\":{\\\"ha\\\":832,\\\"x_min\\\":-28,\\\"x_max\\\":867,\\\"o\\\":\\\"m 622 304 q 517 111 576 181 q 373 11 457 42 q 161 -28 289 -19 l 125 160 q 264 186 214 167 q 347 250 314 206 l 261 250 l -28 967 l 265 967 l 432 407 l 576 967 l 867 967 l 622 304 m 511 1267 l 333 1035 l 215 1096 l 342 1356 l 511 1267 m 760 1244 l 569 1022 l 456 1090 l 596 1343 l 760 1244 z \\\"},\\\"Ӵ\\\":{\\\"ha\\\":865,\\\"x_min\\\":14,\\\"x_max\\\":806,\\\"o\\\":\\\"m 806 967 l 806 0 l 519 0 l 519 339 q 322 271 439 271 q 94 365 175 271 q 14 626 14 460 l 14 967 l 294 967 l 294 626 q 320 510 294 546 q 407 474 346 474 q 471 483 444 474 q 519 511 497 492 l 519 967 l 806 967 z \\\"},\\\"Ӷ\\\":{\\\"ha\\\":710,\\\"x_min\\\":60,\\\"x_max\\\":717,\\\"o\\\":\\\"m 346 747 l 346 214 l 457 214 l 457 -243 l 267 -243 l 239 0 l 60 0 l 60 967 l 717 967 l 689 747 l 346 747 z \\\"},\\\"Ӹ\\\":{\\\"ha\\\":1207,\\\"x_min\\\":60,\\\"x_max\\\":1147,\\\"o\\\":\\\"m 421 651 q 713 572 611 651 q 814 336 814 493 q 709 86 814 172 q 432 0 604 0 l 60 0 l 60 967 l 346 967 l 346 651 l 421 651 m 1147 967 l 1147 0 l 861 0 l 861 967 l 1147 967 m 394 201 q 487 235 457 201 q 517 333 517 269 q 389 460 517 460 l 346 460 l 346 201 l 394 201 z \\\"},\\\"Ӻ\\\":{\\\"ha\\\":724,\\\"x_min\\\":-61,\\\"x_max\\\":731,\\\"o\\\":\\\"m 360 747 l 360 601 l 544 601 l 544 440 l 360 440 l 360 214 l 478 214 l 478 -22 q 392 -240 478 -165 q 157 -315 306 -315 q -61 -253 25 -315 l 28 -86 q 77 -108 58 -101 q 122 -114 96 -114 q 174 -95 156 -114 q 192 -40 192 -76 l 192 0 l 74 0 l 74 440 l -18 440 l -18 601 l 74 601 l 74 967 l 731 967 l 703 747 l 360 747 z \\\"},\\\"Ӽ\\\":{\\\"ha\\\":883,\\\"x_min\\\":-14,\\\"x_max\\\":883,\\\"o\\\":\\\"m 883 214 l 883 -22 q 797 -240 883 -165 q 563 -315 711 -315 q 344 -253 431 -315 l 433 -86 q 483 -108 464 -101 q 528 -114 501 -114 q 579 -95 561 -114 q 597 -40 597 -76 l 597 0 l 547 0 l 414 332 l 289 0 l -14 0 l 244 513 l 4 967 l 311 967 l 417 689 l 535 967 l 836 967 l 586 521 l 744 214 l 883 214 z \\\"},\\\"Ӿ\\\":{\\\"ha\\\":842,\\\"x_min\\\":-14,\\\"x_max\\\":856,\\\"o\\\":\\\"m 856 0 l 547 0 l 414 346 l 289 0 l -14 0 l 200 425 l 67 425 l 67 592 l 203 592 l 4 967 l 311 967 l 417 647 l 535 967 l 836 967 l 626 592 l 775 592 l 775 425 l 636 425 l 856 0 z \\\"},\\\"Ԁ\\\":{\\\"ha\\\":842,\\\"x_min\\\":14,\\\"x_max\\\":782,\\\"o\\\":\\\"m 782 967 l 782 0 l 392 0 q 117 81 219 0 q 14 319 14 161 q 117 551 14 469 q 407 633 219 633 l 496 633 l 496 967 l 782 967 m 496 201 l 496 442 l 439 442 q 311 319 311 442 q 342 233 311 264 q 433 201 372 201 l 496 201 z \\\"},\\\"Ԃ\\\":{\\\"ha\\\":1228,\\\"x_min\\\":14,\\\"x_max\\\":1200,\\\"o\\\":\\\"m 1190 526 q 1200 339 1200 425 q 1147 131 1200 214 q 1009 10 1093 49 q 831 -28 925 -28 q 677 -1 742 -28 q 569 83 613 26 q 469 0 528 28 q 329 -28 411 -28 q 176 8 247 -28 q 59 115 104 43 q 14 292 14 188 q 116 545 14 457 q 407 633 218 633 l 496 633 l 496 967 l 782 967 l 782 264 q 797 190 782 211 q 839 169 811 169 q 901 215 878 169 q 925 360 925 261 q 917 526 925 442 l 1190 526 m 400 174 q 457 196 433 174 q 496 267 481 218 l 496 442 l 439 442 q 311 306 311 442 q 334 208 311 242 q 400 174 357 174 z \\\"},\\\"Ԅ\\\":{\\\"ha\\\":1031,\\\"x_min\\\":14,\\\"x_max\\\":1003,\\\"o\\\":\\\"m 992 528 q 1003 339 1003 436 q 954 135 1003 218 q 822 13 906 53 q 635 -28 739 -28 q 413 24 494 -28 q 275 181 332 75 l 188 344 l 69 344 l 69 536 l 208 536 q 296 567 267 536 q 325 660 325 597 q 194 771 325 771 l 14 771 l 14 967 l 201 967 q 514 892 411 967 q 617 660 617 818 q 576 510 617 569 q 447 397 536 450 l 546 232 q 585 183 567 197 q 631 169 604 169 q 728 360 728 169 q 718 528 728 450 l 992 528 z \\\"},\\\"Ԇ\\\":{\\\"ha\\\":661,\\\"x_min\\\":14,\\\"x_max\\\":682,\\\"o\\\":\\\"m 682 214 l 682 -243 l 492 -243 l 464 0 l 365 0 l 186 344 l 69 344 l 69 536 l 208 536 q 296 567 267 536 q 325 660 325 597 q 194 771 325 771 l 14 771 l 14 967 l 201 967 q 514 892 411 967 q 617 660 617 818 q 576 510 617 569 q 446 397 536 450 l 556 214 l 682 214 z \\\"},\\\"Ԉ\\\":{\\\"ha\\\":1293,\\\"x_min\\\":-7,\\\"x_max\\\":1265,\\\"o\\\":\\\"m 1256 526 q 1265 339 1265 425 q 1211 131 1265 214 q 1070 10 1157 49 q 882 -28 983 -28 q 650 44 739 -28 q 561 265 561 115 l 561 756 l 424 756 l 392 483 q 340 219 372 321 q 241 56 307 118 q 60 -28 175 -7 l -7 167 q 66 224 42 188 q 102 319 90 261 q 129 506 114 378 l 185 967 l 847 967 l 847 264 q 862 190 847 211 q 904 169 876 169 q 967 215 943 169 q 990 360 990 261 q 982 526 990 442 l 1256 526 z \\\"},\\\"Ԋ\\\":{\\\"ha\\\":1299,\\\"x_min\\\":60,\\\"x_max\\\":1271,\\\"o\\\":\\\"m 1261 526 q 1271 339 1271 425 q 1217 131 1271 214 q 1076 10 1163 49 q 888 -28 989 -28 q 656 44 744 -28 q 567 265 567 115 l 567 390 l 346 390 l 346 0 l 60 0 l 60 967 l 346 967 l 346 610 l 567 610 l 567 967 l 853 967 l 853 264 q 867 190 853 211 q 910 169 882 169 q 972 215 949 169 q 996 360 996 261 q 988 526 996 442 l 1261 526 z \\\"},\\\"Ԍ\\\":{\\\"ha\\\":907,\\\"x_min\\\":28,\\\"x_max\\\":858,\\\"o\\\":\\\"m 515 994 q 706 960 619 994 q 858 868 793 925 l 719 724 q 626 778 668 761 q 532 794 585 794 q 376 717 431 794 q 322 483 322 640 q 339 298 322 365 q 391 203 356 231 q 485 175 426 175 q 583 199 536 175 l 583 375 l 486 375 l 460 568 l 858 568 l 858 83 q 683 1 782 31 q 493 -28 585 -28 q 142 102 256 -28 q 28 485 28 232 q 90 760 28 644 q 264 935 153 875 q 515 994 375 994 z \\\"},\\\"Ԏ\\\":{\\\"ha\\\":974,\\\"x_min\\\":7,\\\"x_max\\\":946,\\\"o\\\":\\\"m 936 526 q 946 339 946 425 q 892 131 946 214 q 751 10 838 49 q 563 -28 664 -28 q 331 44 419 -28 q 242 265 242 115 l 242 753 l 7 753 l 7 967 l 776 967 l 747 753 l 528 753 l 528 264 q 542 190 528 211 q 585 169 557 169 q 647 215 624 169 q 671 360 671 261 q 663 526 671 442 l 936 526 z \\\"},\\\"Ԑ\\\":{\\\"ha\\\":768,\\\"x_min\\\":21,\\\"x_max\\\":782,\\\"o\\\":\\\"m 415 994 q 599 961 518 994 q 750 861 679 928 l 618 722 q 451 794 538 794 q 340 703 340 794 q 371 631 340 656 q 461 606 401 606 l 574 606 l 542 410 l 467 410 q 356 378 393 410 q 318 290 318 347 q 354 204 318 233 q 453 175 390 175 q 544 194 503 175 q 633 256 586 214 l 782 111 q 422 -28 650 -28 q 213 8 304 -28 q 72 112 122 44 q 21 268 21 179 q 87 435 21 375 q 279 510 153 496 q 105 593 161 533 q 49 736 49 653 q 96 870 49 811 q 226 962 143 929 q 415 994 310 994 z \\\"},\\\"Ԓ\\\":{\\\"ha\\\":907,\\\"x_min\\\":-7,\\\"x_max\\\":847,\\\"o\\\":\\\"m 847 967 l 847 -22 q 761 -240 847 -165 q 526 -315 675 -315 q 308 -253 394 -315 l 397 -86 q 447 -108 428 -101 q 492 -114 465 -114 q 543 -95 525 -114 q 561 -40 561 -76 l 561 756 l 424 756 l 392 483 q 340 219 372 321 q 241 56 307 118 q 60 -28 175 -7 l -7 167 q 66 224 42 188 q 102 319 90 261 q 129 506 114 378 l 185 967 l 847 967 z \\\"},\\\"Ԕ\\\":{\\\"ha\\\":1224,\\\"x_min\\\":-7,\\\"x_max\\\":1238,\\\"o\\\":\\\"m 1238 0 l 929 0 l 796 332 l 671 0 l 368 0 l 626 513 l 494 761 l 424 761 l 392 483 q 340 219 372 321 q 241 56 307 118 q 60 -28 175 -7 l -7 167 q 66 224 42 188 q 102 319 90 261 q 129 506 114 378 l 185 967 l 693 967 l 799 689 l 917 967 l 1218 967 l 968 521 l 1238 0 z \\\"},\\\"Ԗ\\\":{\\\"ha\\\":1176,\\\"x_min\\\":60,\\\"x_max\\\":1197,\\\"o\\\":\\\"m 949 476 l 1192 0 l 886 0 l 689 382 q 440 301 600 301 l 346 301 l 346 0 l 60 0 l 60 967 l 408 967 q 679 894 583 967 q 785 679 775 822 l 922 967 l 1197 967 l 949 476 m 413 503 q 493 538 464 503 q 522 642 522 572 q 493 735 522 703 q 404 768 464 768 l 346 768 l 346 503 l 413 503 z \\\"},\\\"Ԙ\\\":{\\\"ha\\\":1143,\\\"x_min\\\":-21,\\\"x_max\\\":1115,\\\"o\\\":\\\"m 786 200 l 1108 200 l 1108 0 l 500 0 l 500 329 l 435 329 l 290 0 l -21 0 l 185 379 q 64 480 104 415 q 24 649 24 544 q 126 889 24 811 q 436 967 229 967 l 1115 967 l 1086 768 l 786 768 l 786 588 l 1047 588 l 1047 394 l 786 394 l 786 200 m 500 521 l 500 771 l 450 771 q 355 737 389 771 q 321 640 321 703 q 353 552 321 583 q 439 521 386 521 l 500 521 z \\\"},\\\"Ԛ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":1000,\\\"o\\\":\\\"m 700 67 q 869 46 800 67 q 1000 -21 938 25 l 832 -240 q 670 -83 758 -143 q 458 -22 582 -22 q 227 38 324 -22 q 79 211 131 97 q 28 485 28 325 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 q 813 860 696 994 q 931 485 931 726 q 865 226 931 326 q 700 67 799 125 m 325 485 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 q 361 722 397 792 q 325 485 325 651 z \\\"},\\\"Ԝ\\\":{\\\"ha\\\":1193,\\\"x_min\\\":0,\\\"x_max\\\":1193,\\\"o\\\":\\\"m 1053 0 l 681 0 l 594 694 l 499 0 l 135 0 l 0 967 l 286 967 l 347 207 l 450 967 l 749 967 l 835 207 l 918 967 l 1193 967 l 1053 0 z \\\"},\\\"Ԟ\\\":{\\\"ha\\\":894,\\\"x_min\\\":60,\\\"x_max\\\":915,\\\"o\\\":\\\"m 915 0 l 608 0 l 429 400 l 346 400 l 346 0 l 60 0 l 60 967 l 346 967 l 346 601 l 436 601 l 503 738 l 392 788 l 446 906 l 560 854 l 615 967 l 890 967 l 781 753 l 894 701 l 840 583 l 721 638 l 669 538 l 915 0 z \\\"},\\\"Ԡ\\\":{\\\"ha\\\":1389,\\\"x_min\\\":-7,\\\"x_max\\\":1361,\\\"o\\\":\\\"m 1046 668 q 1280 574 1199 668 q 1361 313 1361 479 l 1361 -22 q 1275 -240 1361 -165 q 1040 -315 1189 -315 q 822 -253 908 -315 l 911 -86 q 960 -108 942 -101 q 1006 -114 979 -114 q 1057 -95 1039 -114 q 1075 -40 1075 -76 l 1075 313 q 1049 429 1075 393 q 965 465 1024 465 q 847 428 896 465 l 847 0 l 561 0 l 561 756 l 424 756 l 392 483 q 340 219 372 321 q 241 56 307 118 q 60 -28 175 -7 l -7 167 q 66 224 42 188 q 102 319 90 261 q 129 506 114 378 l 185 967 l 847 967 l 847 603 q 1046 668 932 668 z \\\"},\\\"Ԣ\\\":{\\\"ha\\\":1393,\\\"x_min\\\":60,\\\"x_max\\\":1365,\\\"o\\\":\\\"m 1050 668 q 1284 574 1203 668 q 1365 313 1365 479 l 1365 -22 q 1279 -240 1365 -165 q 1044 -315 1193 -315 q 826 -253 913 -315 l 915 -86 q 965 -108 946 -101 q 1010 -114 983 -114 q 1061 -95 1043 -114 q 1079 -40 1079 -76 l 1079 313 q 1053 429 1079 393 q 969 465 1028 465 q 853 428 899 465 l 853 0 l 567 0 l 567 390 l 346 390 l 346 0 l 60 0 l 60 967 l 346 967 l 346 610 l 567 610 l 567 967 l 853 967 l 853 604 q 1050 668 938 668 z \\\"},\\\"Ҍ\\\":{\\\"ha\\\":864,\\\"x_min\\\":14,\\\"x_max\\\":850,\\\"o\\\":\\\"m 457 633 q 747 556 644 633 q 850 326 850 478 q 744 85 850 169 q 468 0 639 0 l 82 0 l 82 717 l 14 717 l 14 876 l 82 876 l 82 967 l 368 967 l 368 876 l 535 876 l 535 717 l 368 717 l 368 633 l 457 633 m 431 201 q 522 234 492 201 q 553 324 553 267 q 425 442 553 442 l 368 442 l 368 201 l 431 201 z \\\"},\\\"Ҏ\\\":{\\\"ha\\\":849,\\\"x_min\\\":60,\\\"x_max\\\":828,\\\"o\\\":\\\"m 828 642 q 783 461 828 536 q 657 346 739 386 l 726 233 l 617 233 l 567 315 q 440 301 511 301 l 346 301 l 346 0 l 60 0 l 60 967 l 408 967 q 717 884 607 967 q 828 642 828 801 m 535 547 q 550 642 550 582 q 516 736 550 704 q 404 768 482 768 l 346 768 l 346 489 l 413 489 q 458 492 431 489 l 353 665 l 463 665 l 535 547 z \\\"},\\\"а\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 z \\\"},\\\"б\\\":{\\\"ha\\\":793,\\\"x_min\\\":28,\\\"x_max\\\":772,\\\"o\\\":\\\"m 494 688 q 633 647 569 688 q 734 529 696 607 q 772 342 772 451 q 727 148 772 232 q 598 18 682 64 q 403 -28 514 -28 q 127 82 226 -28 q 28 419 28 192 q 57 685 28 582 q 156 853 86 788 q 349 956 225 918 q 481 1001 433 981 q 601 1061 529 1022 l 696 894 q 592 840 644 861 q 450 790 540 818 q 331 722 368 765 q 283 585 294 678 q 373 663 324 638 q 494 688 422 688 m 400 169 q 468 206 446 169 q 490 333 490 243 q 471 458 490 426 q 408 490 451 490 q 353 474 379 490 q 310 428 326 458 l 310 328 q 333 206 310 243 q 400 169 357 169 z \\\"},\\\"в\\\":{\\\"ha\\\":767,\\\"x_min\\\":58,\\\"x_max\\\":743,\\\"o\\\":\\\"m 553 410 q 743 224 743 386 q 651 56 743 113 q 400 0 558 0 l 58 0 l 58 735 q 381 769 251 769 q 626 719 539 769 q 713 568 713 668 q 672 465 713 506 q 553 410 632 424 m 374 604 q 333 603 351 604 l 333 457 l 375 457 q 426 476 407 457 q 444 531 444 496 q 426 585 444 565 q 374 604 408 604 m 389 171 q 463 251 463 171 q 444 309 463 289 q 389 329 425 329 l 333 329 l 333 171 l 389 171 z \\\"},\\\"г\\\":{\\\"ha\\\":606,\\\"x_min\\\":58,\\\"x_max\\\":619,\\\"o\\\":\\\"m 58 0 l 58 742 l 619 742 l 588 538 l 333 538 l 333 0 l 58 0 z \\\"},\\\"ѓ\\\":{\\\"ha\\\":606,\\\"x_min\\\":58,\\\"x_max\\\":619,\\\"o\\\":\\\"m 58 0 l 58 742 l 619 742 l 588 538 l 333 538 l 333 0 l 58 0 m 536 989 l 188 851 l 114 989 l 433 1189 l 536 989 z \\\"},\\\"ґ\\\":{\\\"ha\\\":606,\\\"x_min\\\":58,\\\"x_max\\\":619,\\\"o\\\":\\\"m 619 967 l 619 742 l 588 538 l 333 538 l 333 0 l 58 0 l 58 742 l 376 742 l 376 967 l 619 967 z \\\"},\\\"д\\\":{\\\"ha\\\":768,\\\"x_min\\\":0,\\\"x_max\\\":782,\\\"o\\\":\\\"m 782 197 l 782 -243 l 601 -243 l 574 0 l 208 0 l 181 -243 l 0 -243 l 0 197 l 43 197 q 77 240 64 213 q 102 330 90 268 q 124 504 114 392 l 144 742 l 703 742 l 703 197 l 782 197 m 450 569 l 376 569 l 372 526 q 328 301 358 375 q 239 197 297 226 l 450 197 l 450 569 z \\\"},\\\"е\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":757,\\\"o\\\":\\\"m 757 381 q 751 293 757 346 l 301 293 q 348 192 313 218 q 450 167 383 167 q 529 183 489 167 q 618 232 569 199 l 729 82 q 424 -28 594 -28 q 125 81 226 -28 q 24 369 24 190 q 66 572 24 481 q 192 716 108 663 q 393 769 275 769 q 585 724 503 769 q 712 590 667 678 q 757 381 757 503 m 486 458 q 466 560 485 524 q 399 596 447 596 q 330 564 353 596 q 300 449 307 532 l 486 449 l 486 458 z \\\"},\\\"ѐ\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":757,\\\"o\\\":\\\"m 757 381 q 751 293 757 346 l 301 293 q 348 192 313 218 q 450 167 383 167 q 529 183 489 167 q 618 232 569 199 l 729 82 q 424 -28 594 -28 q 125 81 226 -28 q 24 369 24 190 q 66 572 24 481 q 192 716 108 663 q 393 769 275 769 q 585 724 503 769 q 712 590 667 678 q 757 381 757 503 m 486 458 q 466 560 485 524 q 399 596 447 596 q 330 564 353 596 q 300 449 307 532 l 486 449 l 486 458 m 621 989 l 547 851 l 199 989 l 301 1189 l 621 989 z \\\"},\\\"ё\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":757,\\\"o\\\":\\\"m 757 381 q 751 293 757 346 l 301 293 q 348 192 313 218 q 450 167 383 167 q 529 183 489 167 q 618 232 569 199 l 729 82 q 424 -28 594 -28 q 125 81 226 -28 q 24 369 24 190 q 66 572 24 481 q 192 716 108 663 q 393 769 275 769 q 585 724 503 769 q 712 590 667 678 q 757 381 757 503 m 486 458 q 466 560 485 524 q 399 596 447 596 q 330 564 353 596 q 300 449 307 532 l 486 449 l 486 458 m 225 1136 q 319 1099 281 1136 q 357 1008 357 1061 q 319 917 357 954 q 225 879 281 879 q 132 917 171 879 q 93 1008 93 954 q 132 1099 93 1061 q 225 1136 171 1136 m 565 1136 q 659 1099 621 1136 q 697 1008 697 1061 q 659 917 697 954 q 565 879 621 879 q 472 917 511 879 q 433 1008 433 954 q 472 1099 433 1061 q 565 1136 511 1136 z \\\"},\\\"ж\\\":{\\\"ha\\\":1085,\\\"x_min\\\":-7,\\\"x_max\\\":1092,\\\"o\\\":\\\"m 919 397 l 1092 0 l 818 0 l 707 304 l 660 304 l 660 0 l 425 0 l 425 304 l 378 304 l 265 0 l -7 0 l 165 397 l 4 742 l 257 742 l 374 457 l 425 457 l 425 742 l 660 742 l 660 457 l 711 457 l 829 742 l 1081 742 l 919 397 z \\\"},\\\"з\\\":{\\\"ha\\\":686,\\\"x_min\\\":-7,\\\"x_max\\\":665,\\\"o\\\":\\\"m 326 769 q 483 744 414 769 q 591 671 551 718 q 631 561 631 624 q 460 394 631 435 q 614 336 563 381 q 665 211 665 292 q 569 33 665 94 q 306 -28 472 -28 q -7 60 117 -28 l 119 208 q 208 171 168 181 q 296 161 247 161 q 383 229 383 161 q 296 294 383 294 l 169 294 l 185 461 l 278 461 q 354 528 354 461 q 336 571 354 556 q 285 586 318 586 q 210 575 244 586 q 139 542 175 564 l 14 682 q 326 769 143 769 z \\\"},\\\"и\\\":{\\\"ha\\\":813,\\\"x_min\\\":58,\\\"x_max\\\":754,\\\"o\\\":\\\"m 754 0 l 496 0 l 496 222 q 535 489 496 346 l 325 0 l 58 0 l 58 742 l 318 742 l 318 514 q 279 247 318 381 l 486 742 l 754 742 l 754 0 z \\\"},\\\"й\\\":{\\\"ha\\\":813,\\\"x_min\\\":58,\\\"x_max\\\":754,\\\"o\\\":\\\"m 754 0 l 496 0 l 496 222 q 535 489 496 346 l 325 0 l 58 0 l 58 742 l 318 742 l 318 514 q 279 247 318 381 l 486 742 l 754 742 l 754 0 m 407 869 q 223 936 288 869 q 150 1114 158 1003 l 293 1138 q 332 1075 304 1094 q 407 1056 360 1056 q 482 1075 454 1056 q 521 1138 510 1094 l 664 1114 q 591 936 656 1003 q 407 869 526 869 z \\\"},\\\"ѝ\\\":{\\\"ha\\\":813,\\\"x_min\\\":58,\\\"x_max\\\":754,\\\"o\\\":\\\"m 754 0 l 496 0 l 496 222 q 535 489 496 346 l 325 0 l 58 0 l 58 742 l 318 742 l 318 514 q 279 247 318 381 l 486 742 l 754 742 l 754 0 m 632 989 l 558 851 l 210 989 l 313 1189 l 632 989 z \\\"},\\\"ҋ\\\":{\\\"ha\\\":893,\\\"x_min\\\":58,\\\"x_max\\\":921,\\\"o\\\":\\\"m 407 869 q 223 936 288 869 q 150 1114 158 1003 l 293 1138 q 332 1075 304 1094 q 407 1056 360 1056 q 482 1075 454 1056 q 521 1138 510 1094 l 664 1114 q 591 936 656 1003 q 407 869 526 869 m 921 197 l 782 -243 l 601 -243 l 657 0 l 496 0 l 496 222 q 535 489 496 346 l 325 0 l 58 0 l 58 742 l 318 742 l 318 514 q 279 247 318 381 l 486 742 l 754 742 l 754 197 l 921 197 z \\\"},\\\"к\\\":{\\\"ha\\\":786,\\\"x_min\\\":58,\\\"x_max\\\":800,\\\"o\\\":\\\"m 610 397 l 800 0 l 519 0 l 385 304 l 333 304 l 333 0 l 58 0 l 58 742 l 333 742 l 333 457 l 392 457 l 535 742 l 789 742 l 610 397 z \\\"},\\\"ќ\\\":{\\\"ha\\\":786,\\\"x_min\\\":58,\\\"x_max\\\":800,\\\"o\\\":\\\"m 610 397 l 800 0 l 519 0 l 385 304 l 333 304 l 333 0 l 58 0 l 58 742 l 333 742 l 333 457 l 392 457 l 535 742 l 789 742 l 610 397 m 590 989 l 242 851 l 168 989 l 488 1189 l 590 989 z \\\"},\\\"л\\\":{\\\"ha\\\":788,\\\"x_min\\\":0,\\\"x_max\\\":729,\\\"o\\\":\\\"m 729 742 l 729 0 l 454 0 l 454 546 l 365 546 l 356 440 q 318 187 340 271 q 240 53 296 103 q 67 -18 183 4 l 0 176 q 64 221 46 200 q 91 289 82 242 q 107 450 100 336 l 125 742 l 729 742 z \\\"},\\\"м\\\":{\\\"ha\\\":933,\\\"x_min\\\":14,\\\"x_max\\\":919,\\\"o\\\":\\\"m 919 0 l 661 0 l 656 214 q 654 299 654 243 q 667 507 654 394 l 576 71 l 357 71 l 265 507 q 278 307 278 415 q 276 214 278 246 l 271 0 l 14 0 l 75 742 l 390 742 l 467 294 l 539 742 l 857 742 l 919 0 z \\\"},\\\"н\\\":{\\\"ha\\\":808,\\\"x_min\\\":58,\\\"x_max\\\":750,\\\"o\\\":\\\"m 475 276 l 333 276 l 333 0 l 58 0 l 58 742 l 333 742 l 333 474 l 475 474 l 475 742 l 750 742 l 750 0 l 475 0 l 475 276 z \\\"},\\\"о\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 z \\\"},\\\"п\\\":{\\\"ha\\\":803,\\\"x_min\\\":58,\\\"x_max\\\":744,\\\"o\\\":\\\"m 469 543 l 333 543 l 333 0 l 58 0 l 58 742 l 744 742 l 744 0 l 469 0 l 469 543 z \\\"},\\\"р\\\":{\\\"ha\\\":825,\\\"x_min\\\":58,\\\"x_max\\\":801,\\\"o\\\":\\\"m 524 769 q 731 665 661 769 q 801 374 801 561 q 765 167 801 258 q 660 24 728 76 q 506 -28 593 -28 q 333 46 400 -28 l 333 -287 l 58 -315 l 58 742 l 303 742 l 314 669 q 413 746 358 722 q 524 769 468 769 m 415 168 q 519 369 519 168 q 508 499 519 454 q 478 558 497 543 q 431 572 460 572 q 333 503 372 572 l 333 219 q 371 180 351 192 q 415 168 390 168 z \\\"},\\\"с\\\":{\\\"ha\\\":665,\\\"x_min\\\":24,\\\"x_max\\\":679,\\\"o\\\":\\\"m 410 769 q 679 671 568 769 l 565 511 q 435 563 501 563 q 340 518 371 563 q 310 365 310 474 q 341 223 310 261 q 432 185 372 185 q 492 195 464 185 q 561 232 519 206 l 679 64 q 417 -28 567 -28 q 207 22 296 -28 q 71 160 118 71 q 24 365 24 250 q 72 574 24 482 q 207 717 119 665 q 410 769 294 769 z \\\"},\\\"т\\\":{\\\"ha\\\":674,\\\"x_min\\\":0,\\\"x_max\\\":688,\\\"o\\\":\\\"m 653 543 l 475 543 l 475 0 l 200 0 l 200 543 l 0 543 l 0 742 l 688 742 l 653 543 z \\\"},\\\"у\\\":{\\\"ha\\\":742,\\\"x_min\\\":-21,\\\"x_max\\\":763,\\\"o\\\":\\\"m 535 1 q 374 -232 488 -153 q 74 -317 260 -311 l 44 -129 q 203 -90 151 -118 q 285 0 256 -62 l 190 0 l -21 742 l 271 742 l 364 168 l 479 742 l 763 742 l 535 1 z \\\"},\\\"ў\\\":{\\\"ha\\\":742,\\\"x_min\\\":-21,\\\"x_max\\\":763,\\\"o\\\":\\\"m 535 1 q 374 -232 488 -153 q 74 -317 260 -311 l 44 -129 q 203 -90 151 -118 q 285 0 256 -62 l 190 0 l -21 742 l 271 742 l 364 168 l 479 742 l 763 742 l 535 1 m 371 869 q 187 936 251 869 q 114 1114 122 1003 l 257 1138 q 296 1075 268 1094 q 371 1056 324 1056 q 446 1075 418 1056 q 485 1138 474 1094 l 628 1114 q 555 936 619 1003 q 371 869 490 869 z \\\"},\\\"ф\\\":{\\\"ha\\\":1168,\\\"x_min\\\":24,\\\"x_max\\\":1144,\\\"o\\\":\\\"m 888 769 q 1081 666 1017 769 q 1144 369 1144 563 q 1111 158 1144 247 q 1017 20 1078 68 q 878 -28 957 -28 q 713 44 778 -28 l 713 -287 l 456 -315 l 456 44 q 290 -28 390 -28 q 151 20 211 -28 q 57 158 90 68 q 24 369 24 247 q 94 664 24 558 q 294 769 165 769 q 381 753 342 769 q 456 700 419 736 l 456 1061 l 713 1033 l 713 699 q 888 769 783 769 m 381 165 q 419 176 403 165 q 456 211 436 186 l 456 528 q 420 565 438 553 q 381 576 403 576 q 318 532 338 576 q 299 369 299 488 q 319 210 299 256 q 381 165 339 165 m 789 165 q 849 210 829 165 q 869 369 869 256 q 852 533 869 489 q 794 576 835 576 q 753 565 772 576 q 713 528 733 553 l 713 211 q 749 176 732 186 q 789 165 765 165 z \\\"},\\\"х\\\":{\\\"ha\\\":733,\\\"x_min\\\":-28,\\\"x_max\\\":761,\\\"o\\\":\\\"m 761 0 l 454 0 l 357 256 l 268 0 l -28 0 l 199 389 l -8 742 l 296 742 l 368 524 l 433 742 l 721 742 l 532 397 l 761 0 z \\\"},\\\"ч\\\":{\\\"ha\\\":764,\\\"x_min\\\":21,\\\"x_max\\\":706,\\\"o\\\":\\\"m 706 742 l 706 0 l 431 0 l 431 257 q 340 211 390 228 q 235 194 289 194 q 74 257 126 194 q 21 431 21 319 l 21 742 l 296 742 l 296 467 q 309 410 296 426 q 346 394 322 394 q 431 424 392 394 l 431 742 l 706 742 z \\\"},\\\"ц\\\":{\\\"ha\\\":833,\\\"x_min\\\":58,\\\"x_max\\\":847,\\\"o\\\":\\\"m 847 197 l 847 -243 l 667 -243 l 639 0 l 58 0 l 58 742 l 333 742 l 333 197 l 461 197 l 461 742 l 736 742 l 736 197 l 847 197 z \\\"},\\\"ш\\\":{\\\"ha\\\":1074,\\\"x_min\\\":58,\\\"x_max\\\":1015,\\\"o\\\":\\\"m 1015 0 l 58 0 l 58 742 l 319 742 l 319 197 l 424 197 l 424 742 l 650 742 l 650 197 l 754 197 l 754 742 l 1015 742 l 1015 0 z \\\"},\\\"щ\\\":{\\\"ha\\\":1113,\\\"x_min\\\":58,\\\"x_max\\\":1126,\\\"o\\\":\\\"m 1126 197 l 1126 -243 l 946 -243 l 918 0 l 58 0 l 58 742 l 319 742 l 319 197 l 424 197 l 424 742 l 650 742 l 650 197 l 754 197 l 754 742 l 1015 742 l 1015 197 l 1126 197 z \\\"},\\\"џ\\\":{\\\"ha\\\":794,\\\"x_min\\\":58,\\\"x_max\\\":736,\\\"o\\\":\\\"m 736 0 l 506 0 l 506 -243 l 325 -243 l 297 0 l 58 0 l 58 742 l 333 742 l 333 197 l 461 197 l 461 742 l 736 742 l 736 0 z \\\"},\\\"ь\\\":{\\\"ha\\\":731,\\\"x_min\\\":58,\\\"x_max\\\":724,\\\"o\\\":\\\"m 358 515 q 635 451 546 515 q 724 256 724 388 q 635 67 724 133 q 396 0 547 0 l 58 0 l 58 742 l 333 742 l 333 515 l 358 515 m 365 171 q 427 195 407 171 q 447 261 447 219 q 426 327 447 306 q 354 349 404 349 l 333 349 l 333 171 l 365 171 z \\\"},\\\"ъ\\\":{\\\"ha\\\":872,\\\"x_min\\\":0,\\\"x_max\\\":865,\\\"o\\\":\\\"m 500 515 q 776 451 688 515 q 865 256 865 388 q 777 67 865 133 q 538 0 689 0 l 200 0 l 200 549 l 0 549 l 0 742 l 475 742 l 475 515 l 500 515 m 507 171 q 569 195 549 171 q 589 261 589 219 q 567 327 589 306 q 496 349 546 349 l 475 349 l 475 171 l 507 171 z \\\"},\\\"ы\\\":{\\\"ha\\\":1081,\\\"x_min\\\":58,\\\"x_max\\\":1022,\\\"o\\\":\\\"m 344 515 q 621 451 532 515 q 710 256 710 388 q 622 67 710 133 q 382 0 533 0 l 58 0 l 58 742 l 333 742 l 333 515 l 344 515 m 1022 742 l 1022 0 l 747 0 l 747 742 l 1022 742 m 351 171 q 413 195 393 171 q 433 261 433 219 q 412 327 433 306 q 340 349 390 349 l 333 349 l 333 171 l 351 171 z \\\"},\\\"љ\\\":{\\\"ha\\\":1104,\\\"x_min\\\":0,\\\"x_max\\\":1097,\\\"o\\\":\\\"m 732 515 q 1008 451 919 515 q 1097 256 1097 388 q 1009 67 1097 133 q 769 0 921 0 l 446 0 l 446 546 l 365 546 l 356 440 q 318 187 340 271 q 240 53 296 103 q 67 -18 183 4 l 0 176 q 64 221 46 200 q 91 289 82 242 q 107 450 100 336 l 125 742 l 721 742 l 721 515 l 732 515 m 739 171 q 801 195 781 171 q 821 261 821 219 q 799 327 821 306 q 728 349 778 349 l 721 349 l 721 171 l 739 171 z \\\"},\\\"њ\\\":{\\\"ha\\\":1133,\\\"x_min\\\":58,\\\"x_max\\\":1126,\\\"o\\\":\\\"m 761 488 q 1037 426 947 488 q 1126 242 1126 364 q 1038 64 1126 128 q 799 0 949 0 l 475 0 l 475 307 l 333 307 l 333 0 l 58 0 l 58 742 l 333 742 l 333 488 l 475 488 l 475 742 l 750 742 l 750 488 l 761 488 m 772 167 q 840 185 819 167 q 861 247 861 204 q 839 307 861 289 q 761 325 817 325 l 750 325 l 750 167 l 772 167 z \\\"},\\\"ѕ\\\":{\\\"ha\\\":678,\\\"x_min\\\":-7,\\\"x_max\\\":671,\\\"o\\\":\\\"m 356 769 q 513 744 438 769 q 640 674 589 718 l 543 525 q 457 565 503 550 q 367 579 411 579 q 304 546 304 579 q 313 523 304 532 q 352 501 321 514 q 453 467 383 488 q 617 378 564 432 q 671 228 671 325 q 626 94 671 153 q 501 4 581 36 q 319 -28 421 -28 q 137 3 222 -28 q -7 90 51 35 l 124 235 q 215 181 165 201 q 313 161 264 161 q 370 173 350 161 q 390 207 390 185 q 381 237 390 226 q 344 258 372 247 q 247 289 317 268 q 32 529 32 353 q 70 651 32 597 q 181 738 108 706 q 356 769 254 769 z \\\"},\\\"є\\\":{\\\"ha\\\":679,\\\"x_min\\\":24,\\\"x_max\\\":679,\\\"o\\\":\\\"m 431 167 q 498 178 467 167 q 565 218 529 190 l 679 64 q 560 -4 622 19 q 421 -28 497 -28 q 209 22 299 -28 q 72 160 119 71 q 24 365 24 250 q 72 574 24 482 q 207 717 119 665 q 410 769 294 769 q 679 671 568 769 l 565 524 q 428 575 501 575 q 335 545 368 575 q 299 449 303 515 l 542 449 l 542 304 l 299 304 q 338 199 301 231 q 431 167 374 167 z \\\"},\\\"э\\\":{\\\"ha\\\":676,\\\"x_min\\\":0,\\\"x_max\\\":653,\\\"o\\\":\\\"m 293 769 q 556 669 460 769 q 653 379 653 569 q 551 82 653 192 q 263 -28 449 -28 q 122 -6 185 -28 q 0 57 58 15 l 114 210 q 184 176 153 186 q 250 167 215 167 q 378 304 365 167 l 135 304 l 135 449 l 376 449 q 343 546 371 517 q 269 575 315 575 q 199 565 232 575 q 131 531 167 554 l 17 678 q 293 769 131 769 z \\\"},\\\"і\\\":{\\\"ha\\\":392,\\\"x_min\\\":42,\\\"x_max\\\":350,\\\"o\\\":\\\"m 196 1151 q 306 1109 263 1151 q 350 1004 350 1067 q 306 899 350 942 q 196 857 263 857 q 85 899 129 857 q 42 1004 42 942 q 85 1109 42 1067 q 196 1151 129 1151 m 333 0 l 58 0 l 58 742 l 333 742 l 333 0 z \\\"},\\\"ї\\\":{\\\"ha\\\":392,\\\"x_min\\\":-107,\\\"x_max\\\":497,\\\"o\\\":\\\"m 333 0 l 58 0 l 58 742 l 333 742 l 333 0 m 25 1136 q 119 1099 81 1136 q 157 1008 157 1061 q 119 917 157 954 q 25 879 81 879 q -68 917 -29 879 q -107 1008 -107 954 q -68 1099 -107 1061 q 25 1136 -29 1136 m 365 1136 q 459 1099 421 1136 q 497 1008 497 1061 q 459 917 497 954 q 365 879 421 879 q 272 917 311 879 q 233 1008 233 954 q 272 1099 233 1061 q 365 1136 311 1136 z \\\"},\\\"ј\\\":{\\\"ha\\\":392,\\\"x_min\\\":-97,\\\"x_max\\\":350,\\\"o\\\":\\\"m 333 107 q 244 -169 333 -74 q -3 -315 156 -264 l -97 -115 q -11 -67 -43 -90 q 40 -6 21 -43 q 58 90 58 32 l 58 742 l 333 742 l 333 107 m 196 1151 q 306 1109 263 1151 q 350 1004 350 1067 q 306 899 350 942 q 196 857 263 857 q 85 899 129 857 q 42 1004 42 942 q 85 1109 42 1067 q 196 1151 129 1151 z \\\"},\\\"ћ\\\":{\\\"ha\\\":806,\\\"x_min\\\":0,\\\"x_max\\\":757,\\\"o\\\":\\\"m 557 769 q 703 711 650 769 q 757 547 757 653 l 757 0 l 482 0 l 482 497 q 472 554 482 539 q 440 569 461 569 q 347 496 394 569 l 347 0 l 72 0 l 72 819 l 0 819 l 0 967 l 72 967 l 72 1033 l 347 1061 l 347 967 l 517 967 l 517 819 l 347 819 l 347 675 q 444 747 394 725 q 557 769 494 769 z \\\"},\\\"ю\\\":{\\\"ha\\\":1139,\\\"x_min\\\":58,\\\"x_max\\\":1115,\\\"o\\\":\\\"m 758 769 q 944 724 864 769 q 1070 588 1025 678 q 1115 369 1115 497 q 1070 160 1115 250 q 944 22 1025 71 q 758 -28 864 -28 q 524 52 613 -28 q 408 285 435 132 l 333 285 l 333 0 l 58 0 l 58 742 l 333 742 l 333 465 l 413 465 q 527 690 439 610 q 758 769 615 769 m 758 169 q 822 216 803 169 q 840 369 840 263 q 822 526 840 481 q 758 572 803 572 q 695 526 714 572 q 676 372 676 479 q 695 215 676 261 q 758 169 714 169 z \\\"},\\\"я\\\":{\\\"ha\\\":778,\\\"x_min\\\":-21,\\\"x_max\\\":719,\\\"o\\\":\\\"m 719 742 l 719 0 l 444 0 l 444 243 l 390 243 l 269 0 l -21 0 l 147 308 q 69 381 97 335 q 42 490 42 428 q 135 678 42 615 q 414 742 229 742 l 719 742 m 444 393 l 444 575 l 414 575 q 343 551 367 575 q 319 488 319 526 q 342 419 319 446 q 408 393 365 393 l 444 393 z \\\"},\\\"ђ\\\":{\\\"ha\\\":806,\\\"x_min\\\":0,\\\"x_max\\\":757,\\\"o\\\":\\\"m 557 769 q 703 711 650 769 q 757 547 757 653 l 757 107 q 668 -169 757 -74 q 421 -315 579 -264 l 326 -115 q 413 -67 381 -90 q 463 -6 444 -43 q 482 90 482 32 l 482 497 q 472 554 482 539 q 440 569 461 569 q 347 496 394 569 l 347 0 l 72 0 l 72 819 l 0 819 l 0 967 l 72 967 l 72 1033 l 347 1061 l 347 967 l 521 967 l 521 819 l 347 819 l 347 675 q 444 747 394 725 q 557 769 494 769 z \\\"},\\\"ѡ\\\":{\\\"ha\\\":1072,\\\"x_min\\\":28,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 956 742 q 1044 339 1044 554 q 967 65 1044 157 q 760 -28 890 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 103 64 179 -28 q 28 339 28 156 q 117 742 28 554 l 360 742 q 311 535 328 624 q 294 356 294 447 q 311 213 294 257 q 361 169 328 169 q 398 188 386 169 q 410 264 410 207 l 410 493 l 663 526 l 663 264 q 676 188 663 207 q 715 169 689 169 q 763 213 747 169 q 778 356 778 256 q 761 536 778 447 q 713 742 744 625 l 956 742 z \\\"},\\\"ѣ\\\":{\\\"ha\\\":744,\\\"x_min\\\":0,\\\"x_max\\\":738,\\\"o\\\":\\\"m 372 515 q 649 451 560 515 q 738 256 738 388 q 649 67 738 133 q 410 0 561 0 l 72 0 l 72 631 l 0 631 l 0 778 l 72 778 l 72 922 l 347 950 l 347 778 l 531 778 l 510 631 l 347 631 l 347 515 l 372 515 m 379 171 q 441 195 421 171 q 461 261 461 219 q 440 327 461 306 q 368 349 418 349 l 347 349 l 347 171 l 379 171 z \\\"},\\\"ѥ\\\":{\\\"ha\\\":1057,\\\"x_min\\\":58,\\\"x_max\\\":1057,\\\"o\\\":\\\"m 808 167 q 876 178 844 167 q 943 218 907 190 l 1057 64 q 938 -4 1000 19 q 799 -28 875 -28 q 533 58 636 -28 q 407 288 431 143 l 333 288 l 333 0 l 58 0 l 58 742 l 333 742 l 333 463 l 411 463 q 539 686 439 603 q 788 769 639 769 q 1057 671 946 769 l 943 524 q 806 575 879 575 q 713 545 746 575 q 676 449 681 515 l 919 449 l 919 304 l 676 304 q 715 199 679 231 q 808 167 751 167 z \\\"},\\\"ѧ\\\":{\\\"ha\\\":844,\\\"x_min\\\":-21,\\\"x_max\\\":865,\\\"o\\\":\\\"m 533 247 l 506 247 l 506 0 l 332 0 l 332 247 l 310 247 l 235 0 l -21 0 l 272 742 l 574 742 l 865 0 l 610 0 l 533 247 m 481 414 l 419 611 l 360 414 l 481 414 z \\\"},\\\"ѩ\\\":{\\\"ha\\\":1150,\\\"x_min\\\":58,\\\"x_max\\\":1171,\\\"o\\\":\\\"m 856 261 l 840 261 l 840 0 l 679 0 l 679 261 l 664 261 l 594 0 l 351 0 l 443 261 l 333 261 l 333 0 l 58 0 l 58 742 l 333 742 l 333 428 l 501 428 l 611 742 l 913 742 l 1171 0 l 928 0 l 856 261 m 810 428 l 758 611 l 710 428 l 810 428 z \\\"},\\\"ѫ\\\":{\\\"ha\\\":1015,\\\"x_min\\\":-7,\\\"x_max\\\":1022,\\\"o\\\":\\\"m 1022 0 l 769 0 l 672 276 l 625 276 l 625 0 l 390 0 l 390 276 l 343 276 l 244 0 l -7 0 l 183 443 l 283 443 l 149 633 l 149 742 l 857 742 l 857 633 l 721 443 l 832 443 l 1022 0 m 504 443 l 594 594 l 413 594 l 504 443 z \\\"},\\\"ѭ\\\":{\\\"ha\\\":1213,\\\"x_min\\\":58,\\\"x_max\\\":1219,\\\"o\\\":\\\"m 1219 0 l 982 0 l 949 275 l 907 275 l 907 0 l 681 0 l 681 275 l 639 275 l 606 0 l 369 0 l 429 275 l 333 275 l 333 0 l 58 0 l 58 742 l 333 742 l 333 442 l 557 442 l 435 633 l 435 742 l 1133 742 l 1133 633 l 1010 442 l 1122 442 l 1219 0 m 699 594 l 785 442 l 871 594 l 699 594 z \\\"},\\\"ѯ\\\":{\\\"ha\\\":739,\\\"x_min\\\":28,\\\"x_max\\\":711,\\\"o\\\":\\\"m 282 -315 q 104 -231 171 -287 q 38 -93 38 -174 q 97 35 38 -12 q 281 110 156 82 q 398 147 365 129 q 431 196 431 165 q 406 236 431 224 q 324 249 382 249 l 156 249 l 156 383 l 343 556 l 28 556 l 28 742 l 660 742 l 660 572 l 449 396 l 461 396 q 645 339 579 396 q 711 186 711 282 q 638 20 711 75 q 436 -60 564 -35 q 315 -92 344 -78 q 285 -126 285 -107 q 338 -171 285 -151 l 282 -315 m 628 1046 l 426 836 l 263 836 l 61 1046 l 154 1153 l 344 1019 l 535 1153 l 628 1046 z \\\"},\\\"ѱ\\\":{\\\"ha\\\":1104,\\\"x_min\\\":49,\\\"x_max\\\":1069,\\\"o\\\":\\\"m 1069 336 q 967 85 1069 178 q 686 -24 864 -7 l 686 -287 l 425 -315 l 425 -25 q 144 75 240 -8 q 49 285 49 158 l 49 742 l 317 742 l 317 299 q 342 208 317 242 q 425 163 367 175 l 425 742 l 686 742 l 686 165 q 774 223 746 179 q 801 343 801 267 q 764 742 801 517 l 1026 742 q 1069 336 1069 544 z \\\"},\\\"ѳ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 576 q 333 545 358 576 q 301 446 308 514 l 510 446 q 478 546 503 515 q 406 576 453 576 m 406 165 q 479 199 454 165 q 511 307 504 233 l 300 307 q 331 199 306 232 q 406 165 356 165 z \\\"},\\\"ѵ\\\":{\\\"ha\\\":761,\\\"x_min\\\":-21,\\\"x_max\\\":803,\\\"o\\\":\\\"m 531 0 l 206 0 l -21 742 l 278 742 l 371 199 l 447 597 q 522 767 469 714 q 676 819 575 819 q 803 801 742 819 l 763 619 q 726 625 746 625 q 693 614 706 625 q 672 571 681 603 l 531 0 z \\\"},\\\"ѷ\\\":{\\\"ha\\\":761,\\\"x_min\\\":-21,\\\"x_max\\\":803,\\\"o\\\":\\\"m 531 0 l 206 0 l -21 742 l 278 742 l 371 199 l 447 597 q 522 767 469 714 q 676 819 575 819 q 803 801 742 819 l 763 619 q 726 625 746 625 q 693 614 706 625 q 672 571 681 603 l 531 0 m 346 925 l 213 861 l 31 1133 l 201 1218 l 346 925 m 599 921 l 463 867 l 292 1140 l 465 1218 l 599 921 z \\\"},\\\"ѹ\\\":{\\\"ha\\\":1539,\\\"x_min\\\":24,\\\"x_max\\\":1560,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 m 1332 1 q 1171 -232 1285 -153 q 871 -317 1057 -311 l 842 -129 q 1001 -90 949 -118 q 1082 0 1053 -62 l 988 0 l 776 742 l 1068 742 l 1161 168 l 1276 742 l 1560 742 l 1332 1 z \\\"},\\\"ғ\\\":{\\\"ha\\\":619,\\\"x_min\\\":0,\\\"x_max\\\":633,\\\"o\\\":\\\"m 347 538 l 347 429 l 493 429 l 493 290 l 347 290 l 347 0 l 72 0 l 72 290 l 0 290 l 0 429 l 72 429 l 72 742 l 633 742 l 601 538 l 347 538 z \\\"},\\\"ҕ\\\":{\\\"ha\\\":771,\\\"x_min\\\":58,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 492 q 690 433 636 492 q 743 269 743 375 l 743 -22 q 659 -240 743 -165 q 432 -315 575 -315 q 213 -253 299 -315 l 301 -96 q 350 -115 331 -110 q 396 -121 369 -121 q 449 -102 431 -121 q 468 -47 468 -83 l 468 219 q 458 276 468 261 q 426 292 447 292 q 333 239 383 292 l 333 0 l 58 0 l 58 742 l 619 742 l 588 551 l 333 551 l 333 411 q 433 472 383 453 q 543 492 482 492 z \\\"},\\\"җ\\\":{\\\"ha\\\":1085,\\\"x_min\\\":-7,\\\"x_max\\\":1092,\\\"o\\\":\\\"m 1092 197 l 1092 -243 l 911 -243 l 883 0 l 818 0 l 707 304 l 660 304 l 660 0 l 425 0 l 425 304 l 378 304 l 265 0 l -7 0 l 165 397 l 4 742 l 257 742 l 374 457 l 425 457 l 425 742 l 660 742 l 660 457 l 711 457 l 829 742 l 1081 742 l 919 397 l 1006 197 l 1092 197 z \\\"},\\\"ҙ\\\":{\\\"ha\\\":686,\\\"x_min\\\":-7,\\\"x_max\\\":665,\\\"o\\\":\\\"m 665 211 q 597 55 665 114 q 408 -21 529 -4 q 526 -187 526 -86 q 464 -322 526 -274 q 304 -371 401 -371 q 143 -335 213 -371 l 193 -206 q 274 -225 235 -225 q 331 -207 311 -225 q 350 -158 350 -189 q 331 -92 350 -125 q 264 -26 313 -60 q -7 60 103 -18 l 119 208 q 208 171 168 181 q 296 161 247 161 q 383 229 383 161 q 296 294 383 294 l 169 294 l 185 461 l 278 461 q 354 528 354 461 q 336 571 354 556 q 285 586 318 586 q 210 575 244 586 q 139 542 175 564 l 14 682 q 326 769 143 769 q 483 744 414 769 q 591 671 551 718 q 631 561 631 624 q 460 394 631 435 q 614 336 563 381 q 665 211 665 292 z \\\"},\\\"қ\\\":{\\\"ha\\\":793,\\\"x_min\\\":58,\\\"x_max\\\":800,\\\"o\\\":\\\"m 800 197 l 800 -243 l 619 -243 l 592 0 l 519 0 l 385 304 l 333 304 l 333 0 l 58 0 l 58 742 l 333 742 l 333 457 l 392 457 l 535 742 l 789 742 l 610 397 l 706 197 l 800 197 z \\\"},\\\"ҝ\\\":{\\\"ha\\\":793,\\\"x_min\\\":58,\\\"x_max\\\":800,\\\"o\\\":\\\"m 800 0 l 515 0 l 422 318 l 411 318 l 411 160 l 346 160 l 346 318 l 315 318 l 315 0 l 58 0 l 58 742 l 315 742 l 315 443 l 346 443 l 346 604 l 411 604 l 411 443 l 421 443 l 531 742 l 789 742 l 635 397 l 800 0 z \\\"},\\\"ҟ\\\":{\\\"ha\\\":800,\\\"x_min\\\":0,\\\"x_max\\\":814,\\\"o\\\":\\\"m 814 0 l 533 0 l 399 304 l 347 304 l 347 0 l 72 0 l 72 778 l 0 778 l 0 925 l 72 925 l 72 1033 l 347 1061 l 347 925 l 517 925 l 517 778 l 347 778 l 347 457 l 406 457 l 549 742 l 803 742 l 624 397 l 814 0 z \\\"},\\\"ҡ\\\":{\\\"ha\\\":928,\\\"x_min\\\":0,\\\"x_max\\\":942,\\\"o\\\":\\\"m 942 0 l 661 0 l 526 304 l 475 304 l 475 0 l 200 0 l 200 549 l 0 549 l 0 742 l 475 742 l 475 457 l 533 457 l 676 742 l 931 742 l 751 397 l 942 0 z \\\"},\\\"ң\\\":{\\\"ha\\\":847,\\\"x_min\\\":58,\\\"x_max\\\":861,\\\"o\\\":\\\"m 861 197 l 861 -243 l 681 -243 l 653 0 l 475 0 l 475 276 l 333 276 l 333 0 l 58 0 l 58 742 l 333 742 l 333 474 l 475 474 l 475 742 l 750 742 l 750 197 l 861 197 z \\\"},\\\"ҥ\\\":{\\\"ha\\\":949,\\\"x_min\\\":58,\\\"x_max\\\":963,\\\"o\\\":\\\"m 928 543 l 750 543 l 750 0 l 475 0 l 475 276 l 333 276 l 333 0 l 58 0 l 58 742 l 333 742 l 333 474 l 475 474 l 475 742 l 963 742 l 928 543 z \\\"},\\\"ԥ\\\":{\\\"ha\\\":842,\\\"x_min\\\":58,\\\"x_max\\\":856,\\\"o\\\":\\\"m 856 197 l 856 -243 l 675 -243 l 647 0 l 469 0 l 469 543 l 333 543 l 333 0 l 58 0 l 58 742 l 744 742 l 744 197 l 856 197 z \\\"},\\\"ҧ\\\":{\\\"ha\\\":1181,\\\"x_min\\\":58,\\\"x_max\\\":1153,\\\"o\\\":\\\"m 953 492 q 1099 433 1046 492 q 1153 269 1153 375 l 1153 -22 q 1069 -240 1153 -165 q 842 -315 985 -315 q 622 -253 708 -315 l 711 -96 q 760 -115 740 -110 q 806 -121 779 -121 q 859 -102 840 -121 q 878 -47 878 -83 l 878 219 q 867 276 878 261 q 836 292 857 292 q 744 240 796 292 l 744 0 l 469 0 l 469 543 l 333 543 l 333 0 l 58 0 l 58 742 l 744 742 l 744 413 q 842 472 792 453 q 953 492 893 492 z \\\"},\\\"ҩ\\\":{\\\"ha\\\":879,\\\"x_min\\\":24,\\\"x_max\\\":856,\\\"o\\\":\\\"m 856 308 q 817 163 856 235 q 701 44 778 92 q 824 -124 750 -32 l 701 -207 q 557 -14 608 -87 q 418 -28 488 -28 q 208 22 297 -28 q 72 160 119 71 q 24 365 24 250 q 72 574 24 482 q 207 717 119 665 q 410 769 294 769 q 531 758 482 769 q 621 725 579 747 l 532 547 q 435 563 493 563 q 340 518 371 563 q 310 365 310 474 q 341 211 310 251 q 433 171 372 171 l 443 171 q 401 317 401 254 q 463 465 401 408 q 628 521 525 521 q 792 465 728 521 q 856 308 856 410 m 581 321 q 608 210 581 278 q 671 322 671 251 q 626 381 671 381 q 592 365 604 381 q 581 321 581 349 z \\\"},\\\"ҫ\\\":{\\\"ha\\\":665,\\\"x_min\\\":24,\\\"x_max\\\":679,\\\"o\\\":\\\"m 679 64 q 479 -24 592 -8 q 592 -187 592 -87 q 529 -322 592 -274 q 369 -371 467 -371 q 208 -335 278 -371 l 258 -206 q 339 -225 300 -225 q 396 -207 376 -225 q 415 -158 415 -189 q 393 -88 415 -122 q 315 -18 371 -54 q 101 114 179 11 q 24 365 24 217 q 72 574 24 482 q 207 717 119 665 q 410 769 294 769 q 679 671 568 769 l 565 511 q 435 563 501 563 q 340 518 371 563 q 310 365 310 474 q 341 223 310 261 q 432 185 372 185 q 492 195 464 185 q 561 232 519 206 l 679 64 z \\\"},\\\"ҭ\\\":{\\\"ha\\\":674,\\\"x_min\\\":0,\\\"x_max\\\":688,\\\"o\\\":\\\"m 475 543 l 475 197 l 586 197 l 586 -243 l 406 -243 l 378 0 l 200 0 l 200 543 l 0 543 l 0 742 l 688 742 l 653 543 l 475 543 z \\\"},\\\"ҳ\\\":{\\\"ha\\\":754,\\\"x_min\\\":-28,\\\"x_max\\\":761,\\\"o\\\":\\\"m 761 197 l 761 -243 l 581 -243 l 553 0 l 454 0 l 357 256 l 268 0 l -28 0 l 199 389 l -8 742 l 296 742 l 368 524 l 433 742 l 721 742 l 532 397 l 647 197 l 761 197 z \\\"},\\\"ҵ\\\":{\\\"ha\\\":1003,\\\"x_min\\\":0,\\\"x_max\\\":1017,\\\"o\\\":\\\"m 1017 197 l 1017 -243 l 836 -243 l 808 0 l 200 0 l 200 549 l 0 549 l 0 742 l 590 742 l 569 549 l 475 549 l 475 197 l 631 197 l 631 742 l 906 742 l 906 197 l 1017 197 z \\\"},\\\"ҷ\\\":{\\\"ha\\\":803,\\\"x_min\\\":21,\\\"x_max\\\":817,\\\"o\\\":\\\"m 817 197 l 817 -243 l 636 -243 l 608 0 l 431 0 l 431 257 q 340 211 390 228 q 235 194 289 194 q 74 257 126 194 q 21 431 21 319 l 21 742 l 296 742 l 296 467 q 309 410 296 426 q 346 394 322 394 q 431 424 392 394 l 431 742 l 706 742 l 706 197 l 817 197 z \\\"},\\\"ҹ\\\":{\\\"ha\\\":764,\\\"x_min\\\":21,\\\"x_max\\\":706,\\\"o\\\":\\\"m 706 742 l 706 0 l 439 0 l 439 264 q 394 235 415 246 l 394 114 l 329 114 l 329 208 q 232 194 278 194 q 73 257 125 194 q 21 431 21 319 l 21 742 l 289 742 l 289 463 q 298 409 289 425 q 329 390 307 393 l 329 558 l 394 558 l 394 400 q 439 425 421 411 l 439 742 l 706 742 z \\\"},\\\"һ\\\":{\\\"ha\\\":785,\\\"x_min\\\":58,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 686 q 690 628 636 686 q 743 464 743 569 l 743 0 l 468 0 l 468 414 q 458 471 468 456 q 426 486 447 486 q 333 419 383 486 l 333 0 l 58 0 l 58 1033 l 333 1061 l 333 590 q 428 663 376 640 q 543 686 479 686 z \\\"},\\\"ԧ\\\":{\\\"ha\\\":840,\\\"x_min\\\":58,\\\"x_max\\\":854,\\\"o\\\":\\\"m 854 197 l 854 -243 l 674 -243 l 646 0 l 468 0 l 468 414 q 458 471 468 456 q 426 486 447 486 q 333 419 383 486 l 333 0 l 58 0 l 58 1033 l 333 1061 l 333 590 q 428 663 376 640 q 543 686 479 686 q 690 628 636 686 q 743 464 743 569 l 743 197 l 854 197 z \\\"},\\\"ԩ\\\":{\\\"ha\\\":808,\\\"x_min\\\":-197,\\\"x_max\\\":750,\\\"o\\\":\\\"m 475 276 l 333 276 l 333 0 l 58 0 l 58 742 l 333 742 l 333 474 l 475 474 l 475 742 l 750 742 l 750 0 l 475 0 l 475 276 m 22 -317 q -197 -254 -111 -317 l -108 -97 q -60 -117 -79 -111 q -14 -122 -40 -122 q 40 -103 21 -122 q 58 -49 58 -85 l 58 0 l 333 0 l 333 -24 q 249 -242 333 -167 q 22 -317 165 -317 z \\\"},\\\"ԫ\\\":{\\\"ha\\\":1335,\\\"x_min\\\":0,\\\"x_max\\\":1349,\\\"o\\\":\\\"m 1349 0 l 1074 0 l 974 307 l 958 307 l 958 0 l 692 0 l 692 -243 l 511 -243 l 483 0 l 208 0 l 181 -243 l 0 -243 l 0 197 l 43 197 q 77 240 64 213 q 102 330 90 268 q 124 504 114 392 l 144 742 l 617 742 l 617 457 l 711 457 l 711 742 l 958 742 l 958 454 l 981 454 l 1089 742 l 1336 742 l 1199 397 l 1349 0 m 382 569 l 363 569 l 358 526 q 316 302 344 378 q 236 197 288 226 l 382 197 l 382 569 m 711 304 l 617 304 l 617 197 l 711 197 l 711 304 z \\\"},\\\"ԭ\\\":{\\\"ha\\\":899,\\\"x_min\\\":21,\\\"x_max\\\":913,\\\"o\\\":\\\"m 913 197 l 913 -243 l 732 -243 l 704 0 l 264 0 l 236 -243 l 56 -243 l 56 197 l 124 197 q 154 218 132 203 q 200 257 176 233 q 243 314 224 281 q 75 410 129 338 q 21 590 21 483 l 21 742 l 243 742 l 243 600 q 255 517 243 546 q 293 474 267 488 q 296 504 293 482 l 317 742 l 833 742 l 833 197 l 913 197 m 525 526 q 515 458 519 479 l 596 458 l 596 569 l 529 569 l 525 526 m 596 303 l 456 303 q 340 197 413 236 l 596 197 l 596 303 z \\\"},\\\"ԯ\\\":{\\\"ha\\\":826,\\\"x_min\\\":0,\\\"x_max\\\":840,\\\"o\\\":\\\"m 840 197 l 840 -243 l 660 -243 l 632 0 l 454 0 l 454 546 l 365 546 l 356 440 q 318 187 340 271 q 240 53 296 103 q 67 -18 183 4 l 0 176 q 64 221 46 200 q 91 289 82 242 q 107 450 100 336 l 125 742 l 729 742 l 729 197 l 840 197 z \\\"},\\\"ҽ\\\":{\\\"ha\\\":981,\\\"x_min\\\":-14,\\\"x_max\\\":960,\\\"o\\\":\\\"m 960 381 q 954 293 960 346 l 504 293 q 551 192 515 218 q 653 167 586 167 q 732 183 692 167 q 821 232 772 199 l 932 82 q 626 -28 797 -28 q 353 57 453 -28 q 232 288 254 142 q 48 346 110 290 q -14 494 -14 401 q 38 653 -14 571 l 193 594 q 175 518 175 553 q 232 463 175 463 l 235 463 q 351 685 258 600 q 596 769 444 769 q 788 724 706 769 q 915 590 869 678 q 960 381 960 503 m 689 458 q 669 560 688 524 q 601 596 650 596 q 533 564 556 596 q 503 449 510 532 l 689 449 l 689 458 z \\\"},\\\"ҿ\\\":{\\\"ha\\\":981,\\\"x_min\\\":-14,\\\"x_max\\\":960,\\\"o\\\":\\\"m 960 381 q 954 293 960 346 l 504 293 q 551 192 515 218 q 653 167 586 167 q 732 183 692 167 q 821 232 772 199 l 932 82 q 760 -8 854 19 q 683 -63 706 -35 q 661 -117 661 -92 q 732 -178 661 -178 q 817 -167 768 -178 l 800 -326 q 697 -337 751 -337 q 538 -290 600 -337 q 475 -162 475 -243 q 533 -21 475 -82 q 326 83 403 1 q 232 288 250 164 q 48 346 110 290 q -14 494 -14 401 q 38 653 -14 571 l 193 594 q 175 518 175 553 q 232 463 175 463 l 235 463 q 351 685 258 600 q 596 769 444 769 q 788 724 706 769 q 915 590 869 678 q 960 381 960 503 m 689 458 q 669 560 688 524 q 601 596 650 596 q 533 564 556 596 q 503 449 510 532 l 689 449 l 689 458 z \\\"},\\\"ӏ\\\":{\\\"ha\\\":421,\\\"x_min\\\":49,\\\"x_max\\\":435,\\\"o\\\":\\\"m 282 -28 q 109 35 169 -28 q 49 214 49 99 l 49 1033 l 324 1061 l 324 225 q 357 188 324 188 q 386 193 372 188 l 435 -3 q 282 -28 369 -28 z \\\"},\\\"ӂ\\\":{\\\"ha\\\":1085,\\\"x_min\\\":-7,\\\"x_max\\\":1092,\\\"o\\\":\\\"m 919 397 l 1092 0 l 818 0 l 707 304 l 660 304 l 660 0 l 425 0 l 425 304 l 378 304 l 265 0 l -7 0 l 165 397 l 4 742 l 257 742 l 374 457 l 425 457 l 425 742 l 660 742 l 660 457 l 711 457 l 829 742 l 1081 742 l 919 397 m 543 869 q 359 936 424 869 q 286 1114 294 1003 l 429 1138 q 468 1075 440 1094 q 543 1056 496 1056 q 618 1075 590 1056 q 657 1138 646 1094 l 800 1114 q 727 936 792 1003 q 543 869 663 869 z \\\"},\\\"ӄ\\\":{\\\"ha\\\":789,\\\"x_min\\\":58,\\\"x_max\\\":775,\\\"o\\\":\\\"m 610 438 q 761 225 761 399 l 761 -22 q 677 -240 761 -165 q 450 -315 593 -315 q 231 -253 317 -315 l 319 -96 q 368 -115 349 -110 q 414 -121 388 -121 q 467 -102 449 -121 q 486 -47 486 -83 l 486 233 q 473 278 486 264 q 431 292 460 292 l 333 293 l 333 0 l 58 0 l 58 742 l 333 742 l 333 446 l 378 446 l 521 742 l 775 742 l 610 438 z \\\"},\\\"ӆ\\\":{\\\"ha\\\":868,\\\"x_min\\\":0,\\\"x_max\\\":896,\\\"o\\\":\\\"m 896 197 l 757 -243 l 576 -243 l 632 0 l 454 0 l 454 546 l 365 546 l 356 440 q 318 187 340 271 q 240 53 296 103 q 67 -18 183 4 l 0 176 q 64 221 46 200 q 91 289 82 242 q 107 450 100 336 l 125 742 l 729 742 l 729 197 l 896 197 z \\\"},\\\"ӈ\\\":{\\\"ha\\\":808,\\\"x_min\\\":58,\\\"x_max\\\":750,\\\"o\\\":\\\"m 750 742 l 750 -22 q 666 -240 750 -165 q 439 -315 582 -315 q 219 -253 306 -315 l 308 -96 q 357 -115 338 -110 q 403 -121 376 -121 q 456 -102 438 -121 q 475 -47 475 -83 l 475 276 l 333 276 l 333 0 l 58 0 l 58 742 l 333 742 l 333 474 l 475 474 l 475 742 l 750 742 z \\\"},\\\"ӊ\\\":{\\\"ha\\\":889,\\\"x_min\\\":58,\\\"x_max\\\":917,\\\"o\\\":\\\"m 917 197 l 778 -243 l 597 -243 l 653 0 l 475 0 l 475 276 l 333 276 l 333 0 l 58 0 l 58 742 l 333 742 l 333 474 l 475 474 l 475 742 l 750 742 l 750 197 l 917 197 z \\\"},\\\"ӌ\\\":{\\\"ha\\\":764,\\\"x_min\\\":21,\\\"x_max\\\":706,\\\"o\\\":\\\"m 706 742 l 706 0 l 535 0 l 507 -243 l 326 -243 l 326 183 l 431 183 l 431 293 q 340 247 390 264 q 232 231 289 231 q 73 293 125 231 q 21 467 21 356 l 21 742 l 296 742 l 296 503 q 309 447 296 463 q 346 431 322 431 q 431 460 392 431 l 431 742 l 706 742 z \\\"},\\\"ӎ\\\":{\\\"ha\\\":1058,\\\"x_min\\\":14,\\\"x_max\\\":1086,\\\"o\\\":\\\"m 1086 197 l 947 -243 l 767 -243 l 822 0 l 661 0 l 656 214 q 654 299 654 243 q 667 507 654 394 l 576 71 l 357 71 l 265 507 q 278 307 278 415 q 276 214 278 246 l 271 0 l 14 0 l 75 742 l 390 742 l 467 294 l 539 742 l 857 742 l 903 197 l 1086 197 z \\\"},\\\"ӑ\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 m 385 869 q 201 936 265 869 q 128 1114 136 1003 l 271 1138 q 310 1075 282 1094 q 385 1056 338 1056 q 460 1075 432 1056 q 499 1138 488 1094 l 642 1114 q 569 936 633 1003 q 385 869 504 869 z \\\"},\\\"ӓ\\\":{\\\"ha\\\":765,\\\"x_min\\\":21,\\\"x_max\\\":744,\\\"o\\\":\\\"m 700 240 q 710 183 700 201 q 744 154 719 164 l 689 -22 q 567 6 614 -17 q 489 81 519 29 q 265 -28 417 -28 q 88 38 156 -28 q 21 208 21 104 q 113 397 21 332 q 379 463 204 463 l 432 463 l 432 481 q 410 556 432 536 q 325 575 388 575 q 240 565 292 575 q 133 536 188 554 l 74 711 q 222 754 142 739 q 367 769 301 769 q 621 702 542 769 q 700 496 700 635 l 700 240 m 350 165 q 397 178 375 165 q 432 210 418 190 l 432 319 l 403 319 q 317 299 344 319 q 289 235 289 278 q 306 184 289 203 q 350 165 322 165 m 214 1136 q 308 1099 269 1136 q 346 1008 346 1061 q 308 917 346 954 q 214 879 269 879 q 121 917 160 879 q 82 1008 82 954 q 121 1099 82 1061 q 214 1136 160 1136 m 554 1136 q 648 1099 610 1136 q 686 1008 686 1061 q 648 917 686 954 q 554 879 610 879 q 461 917 500 879 q 422 1008 422 954 q 461 1099 422 1061 q 554 1136 500 1136 z \\\"},\\\"ӕ\\\":{\\\"ha\\\":1197,\\\"x_min\\\":21,\\\"x_max\\\":1176,\\\"o\\\":\\\"m 1176 381 q 1171 293 1176 346 l 721 293 q 767 192 732 218 q 869 167 803 167 q 949 183 908 167 q 1038 232 989 199 l 1149 82 q 843 -28 1014 -28 q 663 5 740 -28 q 533 94 585 38 q 271 -28 447 -28 q 88 38 156 -28 q 21 208 21 104 q 115 397 21 332 q 390 463 208 463 l 443 463 l 443 478 q 421 553 443 533 q 336 572 399 572 q 251 562 303 572 q 144 533 199 551 l 85 711 q 233 754 153 739 q 378 769 313 769 q 607 685 531 769 q 835 769 699 769 q 1011 724 933 769 q 1133 590 1089 678 q 1176 381 1176 501 m 906 458 q 885 560 904 524 q 818 596 867 596 q 749 564 772 596 q 719 449 726 532 l 906 449 l 906 458 m 365 165 q 416 182 394 165 q 460 231 438 199 q 449 306 450 272 l 449 313 l 417 313 q 333 293 360 313 q 307 229 307 274 q 322 183 307 200 q 365 165 338 165 z \\\"},\\\"ӗ\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":757,\\\"o\\\":\\\"m 757 381 q 751 293 757 346 l 301 293 q 348 192 313 218 q 450 167 383 167 q 529 183 489 167 q 618 232 569 199 l 729 82 q 424 -28 594 -28 q 125 81 226 -28 q 24 369 24 190 q 66 572 24 481 q 192 716 108 663 q 393 769 275 769 q 585 724 503 769 q 712 590 667 678 q 757 381 757 503 m 486 458 q 466 560 485 524 q 399 596 447 596 q 330 564 353 596 q 300 449 307 532 l 486 449 l 486 458 m 396 869 q 212 936 276 869 q 139 1114 147 1003 l 282 1138 q 321 1075 293 1094 q 396 1056 349 1056 q 471 1075 443 1056 q 510 1138 499 1094 l 653 1114 q 580 936 644 1003 q 396 869 515 869 z \\\"},\\\"ә\\\":{\\\"ha\\\":778,\\\"x_min\\\":21,\\\"x_max\\\":754,\\\"o\\\":\\\"m 378 769 q 660 661 565 769 q 754 372 754 553 q 712 170 754 261 q 586 26 669 79 q 385 -28 503 -28 q 193 18 275 -28 q 66 151 111 64 q 21 361 21 239 q 26 449 21 396 l 496 449 q 458 549 490 517 q 367 582 426 582 q 273 569 317 582 q 181 525 229 556 l 69 671 q 205 744 131 718 q 378 769 279 769 m 385 160 q 462 191 435 160 q 496 293 489 222 l 278 293 l 278 283 q 307 193 281 226 q 385 160 333 160 z \\\"},\\\"ӛ\\\":{\\\"ha\\\":778,\\\"x_min\\\":21,\\\"x_max\\\":754,\\\"o\\\":\\\"m 378 769 q 660 661 565 769 q 754 372 754 553 q 712 170 754 261 q 586 26 669 79 q 385 -28 503 -28 q 193 18 275 -28 q 66 151 111 64 q 21 361 21 239 q 26 449 21 396 l 496 449 q 458 549 490 517 q 367 582 426 582 q 273 569 317 582 q 181 525 229 556 l 69 671 q 205 744 131 718 q 378 769 279 769 m 385 160 q 462 191 435 160 q 496 293 489 222 l 278 293 l 278 283 q 307 193 281 226 q 385 160 333 160 m 207 1136 q 301 1099 263 1136 q 339 1008 339 1061 q 301 917 339 954 q 207 879 263 879 q 114 917 153 879 q 75 1008 75 954 q 114 1099 75 1061 q 207 1136 153 1136 m 547 1136 q 641 1099 603 1136 q 679 1008 679 1061 q 641 917 679 954 q 547 879 603 879 q 454 917 493 879 q 415 1008 415 954 q 454 1099 415 1061 q 547 1136 493 1136 z \\\"},\\\"ӝ\\\":{\\\"ha\\\":1085,\\\"x_min\\\":-7,\\\"x_max\\\":1092,\\\"o\\\":\\\"m 919 397 l 1092 0 l 818 0 l 707 304 l 660 304 l 660 0 l 425 0 l 425 304 l 378 304 l 265 0 l -7 0 l 165 397 l 4 742 l 257 742 l 374 457 l 425 457 l 425 742 l 660 742 l 660 457 l 711 457 l 829 742 l 1081 742 l 919 397 m 372 1136 q 466 1099 428 1136 q 504 1008 504 1061 q 466 917 504 954 q 372 879 428 879 q 279 917 318 879 q 240 1008 240 954 q 279 1099 240 1061 q 372 1136 318 1136 m 713 1136 q 806 1099 768 1136 q 844 1008 844 1061 q 806 917 844 954 q 713 879 768 879 q 619 917 658 879 q 581 1008 581 954 q 619 1099 581 1061 q 713 1136 658 1136 z \\\"},\\\"ӟ\\\":{\\\"ha\\\":686,\\\"x_min\\\":-7,\\\"x_max\\\":665,\\\"o\\\":\\\"m 326 769 q 483 744 414 769 q 591 671 551 718 q 631 561 631 624 q 460 394 631 435 q 614 336 563 381 q 665 211 665 292 q 569 33 665 94 q 306 -28 472 -28 q -7 60 117 -28 l 119 208 q 208 171 168 181 q 296 161 247 161 q 383 229 383 161 q 296 294 383 294 l 169 294 l 185 461 l 278 461 q 354 528 354 461 q 336 571 354 556 q 285 586 318 586 q 210 575 244 586 q 139 542 175 564 l 14 682 q 326 769 143 769 m 160 1136 q 253 1099 215 1136 q 292 1008 292 1061 q 253 917 292 954 q 160 879 215 879 q 67 917 106 879 q 28 1008 28 954 q 67 1099 28 1061 q 160 1136 106 1136 m 500 1136 q 594 1099 556 1136 q 632 1008 632 1061 q 594 917 632 954 q 500 879 556 879 q 407 917 446 879 q 368 1008 368 954 q 407 1099 368 1061 q 500 1136 446 1136 z \\\"},\\\"ӡ\\\":{\\\"ha\\\":725,\\\"x_min\\\":-28,\\\"x_max\\\":718,\\\"o\\\":\\\"m 436 299 q 645 215 572 285 q 718 15 718 144 q 671 -153 718 -78 q 534 -272 624 -228 q 321 -315 444 -315 q -28 -162 97 -315 l 114 -25 q 207 -90 164 -69 q 301 -110 250 -110 q 399 -74 361 -110 q 438 35 438 -37 q 399 124 438 97 q 289 151 361 151 l 149 151 l 149 300 l 357 542 l 35 542 l 35 742 l 667 742 l 667 558 l 436 299 z \\\"},\\\"ӣ\\\":{\\\"ha\\\":813,\\\"x_min\\\":58,\\\"x_max\\\":754,\\\"o\\\":\\\"m 754 0 l 496 0 l 496 222 q 535 489 496 346 l 325 0 l 58 0 l 58 742 l 318 742 l 318 514 q 279 247 318 381 l 486 742 l 754 742 l 754 0 m 181 900 l 181 1086 l 632 1086 l 632 900 l 181 900 z \\\"},\\\"ӥ\\\":{\\\"ha\\\":813,\\\"x_min\\\":58,\\\"x_max\\\":754,\\\"o\\\":\\\"m 754 0 l 496 0 l 496 222 q 535 489 496 346 l 325 0 l 58 0 l 58 742 l 318 742 l 318 514 q 279 247 318 381 l 486 742 l 754 742 l 754 0 m 236 1136 q 330 1099 292 1136 q 368 1008 368 1061 q 330 917 368 954 q 236 879 292 879 q 143 917 182 879 q 104 1008 104 954 q 143 1099 104 1061 q 236 1136 182 1136 m 576 1136 q 670 1099 632 1136 q 708 1008 708 1061 q 670 917 708 954 q 576 879 632 879 q 483 917 522 879 q 444 1008 444 954 q 483 1099 444 1061 q 576 1136 522 1136 z \\\"},\\\"ӧ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 m 235 1136 q 328 1099 290 1136 q 367 1008 367 1061 q 328 917 367 954 q 235 879 290 879 q 142 917 181 879 q 103 1008 103 954 q 142 1099 103 1061 q 235 1136 181 1136 m 575 1136 q 669 1099 631 1136 q 707 1008 707 1061 q 669 917 707 954 q 575 879 631 879 q 482 917 521 879 q 443 1008 443 954 q 482 1099 443 1061 q 575 1136 521 1136 z \\\"},\\\"ө\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 576 q 333 545 358 576 q 301 446 308 514 l 510 446 q 478 546 503 515 q 406 576 453 576 m 406 165 q 479 199 454 165 q 511 307 504 233 l 300 307 q 331 199 306 232 q 406 165 356 165 z \\\"},\\\"ӫ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 576 q 333 545 358 576 q 301 446 308 514 l 510 446 q 478 546 503 515 q 406 576 453 576 m 406 165 q 479 199 454 165 q 511 307 504 233 l 300 307 q 331 199 306 232 q 406 165 356 165 m 235 1136 q 328 1099 290 1136 q 367 1008 367 1061 q 328 917 367 954 q 235 879 290 879 q 142 917 181 879 q 103 1008 103 954 q 142 1099 103 1061 q 235 1136 181 1136 m 575 1136 q 669 1099 631 1136 q 707 1008 707 1061 q 669 917 707 954 q 575 879 631 879 q 482 917 521 879 q 443 1008 443 954 q 482 1099 443 1061 q 575 1136 521 1136 z \\\"},\\\"ӭ\\\":{\\\"ha\\\":676,\\\"x_min\\\":0,\\\"x_max\\\":653,\\\"o\\\":\\\"m 293 769 q 556 669 460 769 q 653 379 653 569 q 551 82 653 192 q 263 -28 449 -28 q 122 -6 185 -28 q 0 57 58 15 l 114 210 q 184 176 153 186 q 250 167 215 167 q 378 304 365 167 l 135 304 l 135 449 l 376 449 q 343 546 371 517 q 269 575 315 575 q 199 565 232 575 q 131 531 167 554 l 17 678 q 293 769 131 769 m 144 1136 q 238 1099 200 1136 q 276 1008 276 1061 q 238 917 276 954 q 144 879 200 879 q 51 917 90 879 q 13 1008 13 954 q 51 1099 13 1061 q 144 1136 90 1136 m 485 1136 q 578 1099 540 1136 q 617 1008 617 1061 q 578 917 617 954 q 485 879 540 879 q 392 917 431 879 q 353 1008 353 954 q 392 1099 353 1061 q 485 1136 431 1136 z \\\"},\\\"ӯ\\\":{\\\"ha\\\":742,\\\"x_min\\\":-21,\\\"x_max\\\":763,\\\"o\\\":\\\"m 535 1 q 374 -232 488 -153 q 74 -317 260 -311 l 44 -129 q 203 -90 151 -118 q 285 0 256 -62 l 190 0 l -21 742 l 271 742 l 364 168 l 479 742 l 763 742 l 535 1 m 144 900 l 144 1086 l 596 1086 l 596 900 l 144 900 z \\\"},\\\"ӱ\\\":{\\\"ha\\\":742,\\\"x_min\\\":-21,\\\"x_max\\\":763,\\\"o\\\":\\\"m 535 1 q 374 -232 488 -153 q 74 -317 260 -311 l 44 -129 q 203 -90 151 -118 q 285 0 256 -62 l 190 0 l -21 742 l 271 742 l 364 168 l 479 742 l 763 742 l 535 1 m 200 1136 q 294 1099 256 1136 q 332 1008 332 1061 q 294 917 332 954 q 200 879 256 879 q 107 917 146 879 q 68 1008 68 954 q 107 1099 68 1061 q 200 1136 146 1136 m 540 1136 q 634 1099 596 1136 q 672 1008 672 1061 q 634 917 672 954 q 540 879 596 879 q 447 917 486 879 q 408 1008 408 954 q 447 1099 408 1061 q 540 1136 486 1136 z \\\"},\\\"ӳ\\\":{\\\"ha\\\":742,\\\"x_min\\\":-21,\\\"x_max\\\":763,\\\"o\\\":\\\"m 535 1 q 374 -232 488 -153 q 74 -317 260 -311 l 44 -129 q 203 -90 151 -118 q 285 0 256 -62 l 190 0 l -21 742 l 271 742 l 364 168 l 479 742 l 763 742 l 535 1 m 488 1085 l 310 839 l 192 900 l 318 1174 l 488 1085 m 736 1063 l 546 826 l 432 894 l 572 1161 l 736 1063 z \\\"},\\\"ӵ\\\":{\\\"ha\\\":764,\\\"x_min\\\":21,\\\"x_max\\\":706,\\\"o\\\":\\\"m 706 742 l 706 0 l 431 0 l 431 257 q 340 211 390 228 q 235 194 289 194 q 74 257 126 194 q 21 431 21 319 l 21 742 l 296 742 l 296 467 q 309 410 296 426 q 346 394 322 394 q 431 424 392 394 l 431 742 l 706 742 m 193 1136 q 287 1099 249 1136 q 325 1008 325 1061 q 287 917 325 954 q 193 879 249 879 q 100 917 139 879 q 61 1008 61 954 q 100 1099 61 1061 q 193 1136 139 1136 m 533 1136 q 627 1099 589 1136 q 665 1008 665 1061 q 627 917 665 954 q 533 879 589 879 q 440 917 479 879 q 401 1008 401 954 q 440 1099 401 1061 q 533 1136 479 1136 z \\\"},\\\"ӷ\\\":{\\\"ha\\\":606,\\\"x_min\\\":58,\\\"x_max\\\":619,\\\"o\\\":\\\"m 333 538 l 333 197 l 444 197 l 444 -243 l 264 -243 l 236 0 l 58 0 l 58 742 l 619 742 l 588 538 l 333 538 z \\\"},\\\"ӹ\\\":{\\\"ha\\\":1081,\\\"x_min\\\":58,\\\"x_max\\\":1022,\\\"o\\\":\\\"m 344 515 q 621 451 532 515 q 710 256 710 388 q 622 67 710 133 q 382 0 533 0 l 58 0 l 58 742 l 333 742 l 333 515 l 344 515 m 1022 742 l 1022 0 l 747 0 l 747 742 l 1022 742 m 351 171 q 413 195 393 171 q 433 261 433 219 q 412 327 433 306 q 340 349 390 349 l 333 349 l 333 171 l 351 171 m 369 1136 q 463 1099 425 1136 q 501 1008 501 1061 q 463 917 501 954 q 369 879 425 879 q 276 917 315 879 q 238 1008 238 954 q 276 1099 238 1061 q 369 1136 315 1136 m 710 1136 q 803 1099 765 1136 q 842 1008 842 1061 q 803 917 842 954 q 710 879 765 879 q 617 917 656 879 q 578 1008 578 954 q 617 1099 578 1061 q 710 1136 656 1136 z \\\"},\\\"ӻ\\\":{\\\"ha\\\":619,\\\"x_min\\\":-65,\\\"x_max\\\":633,\\\"o\\\":\\\"m 347 538 l 347 429 l 493 429 l 493 290 l 347 290 l 347 197 l 465 197 l 465 -22 q 381 -240 465 -165 q 154 -315 297 -315 q -65 -253 21 -315 l 24 -96 q 72 -115 53 -110 q 118 -121 92 -121 q 172 -102 153 -121 q 190 -47 190 -83 l 190 0 l 72 0 l 72 290 l 0 290 l 0 429 l 72 429 l 72 742 l 633 742 l 601 538 l 347 538 z \\\"},\\\"ӽ\\\":{\\\"ha\\\":768,\\\"x_min\\\":-28,\\\"x_max\\\":775,\\\"o\\\":\\\"m 775 197 l 775 -22 q 691 -240 775 -165 q 464 -315 607 -315 q 244 -253 331 -315 l 333 -96 q 382 -115 363 -110 q 428 -121 401 -121 q 481 -102 463 -121 q 500 -47 500 -83 l 500 0 l 454 0 l 357 256 l 268 0 l -28 0 l 199 389 l -8 742 l 296 742 l 368 524 l 433 742 l 721 742 l 532 397 l 647 197 l 775 197 z \\\"},\\\"ӿ\\\":{\\\"ha\\\":733,\\\"x_min\\\":-28,\\\"x_max\\\":761,\\\"o\\\":\\\"m 761 0 l 454 0 l 357 276 l 268 0 l -28 0 l 156 315 l 54 315 l 54 471 l 150 471 l -8 742 l 282 742 l 368 510 l 447 742 l 721 742 l 572 471 l 668 471 l 668 315 l 579 315 l 761 0 z \\\"},\\\"ԁ\\\":{\\\"ha\\\":828,\\\"x_min\\\":24,\\\"x_max\\\":769,\\\"o\\\":\\\"m 769 1033 l 769 0 l 525 0 l 515 76 q 306 -28 436 -28 q 94 79 165 -28 q 24 375 24 186 q 63 578 24 489 q 172 719 101 668 q 333 769 242 769 q 494 711 429 769 l 494 1061 l 769 1033 m 399 169 q 494 235 457 169 l 494 532 q 456 563 475 553 q 413 574 436 574 q 335 526 364 574 q 306 372 306 478 q 330 210 306 250 q 399 169 354 169 z \\\"},\\\"ԃ\\\":{\\\"ha\\\":1208,\\\"x_min\\\":24,\\\"x_max\\\":1181,\\\"o\\\":\\\"m 1171 526 q 1181 339 1181 425 q 1127 131 1181 214 q 988 10 1074 49 q 804 -28 901 -28 q 649 5 719 -28 q 539 103 579 38 q 438 5 493 38 q 310 -28 383 -28 q 96 79 168 -28 q 24 375 24 186 q 62 580 24 490 q 172 719 100 669 q 340 769 243 769 q 423 754 382 769 q 494 711 464 739 l 494 1061 l 769 1033 l 769 264 q 784 190 769 211 q 826 169 799 169 q 885 214 865 169 q 906 360 906 258 q 897 526 906 442 l 1171 526 m 393 169 q 494 256 454 169 l 494 532 q 456 563 474 553 q 414 574 438 574 q 335 526 364 574 q 306 372 306 478 q 329 210 306 251 q 393 169 353 169 z \\\"},\\\"ԅ\\\":{\\\"ha\\\":942,\\\"x_min\\\":14,\\\"x_max\\\":914,\\\"o\\\":\\\"m 904 526 q 914 339 914 425 q 861 132 914 214 q 727 11 808 50 q 558 -28 646 -28 q 351 24 429 -28 q 214 201 274 75 l 196 239 l 75 239 l 75 414 l 213 414 q 272 432 253 414 q 292 490 292 450 q 273 543 292 528 q 215 558 254 558 l 14 558 l 14 742 l 222 742 q 558 486 558 742 q 530 365 558 415 q 444 282 501 315 l 465 242 q 506 185 488 200 q 550 169 524 169 q 615 215 590 169 q 639 360 639 260 q 631 526 639 442 l 904 526 z \\\"},\\\"ԇ\\\":{\\\"ha\\\":626,\\\"x_min\\\":14,\\\"x_max\\\":633,\\\"o\\\":\\\"m 633 197 l 633 -243 l 453 -243 l 425 0 l 329 0 l 207 239 l 75 239 l 75 414 l 213 414 q 272 432 253 414 q 292 490 292 450 q 273 543 292 528 q 215 558 254 558 l 14 558 l 14 742 l 222 742 q 558 486 558 742 q 530 368 558 417 q 443 288 501 319 l 499 197 l 633 197 z \\\"},\\\"ԉ\\\":{\\\"ha\\\":1168,\\\"x_min\\\":0,\\\"x_max\\\":1140,\\\"o\\\":\\\"m 1131 526 q 1140 339 1140 425 q 1087 131 1140 214 q 947 10 1033 49 q 764 -28 861 -28 q 612 2 682 -28 q 498 98 542 32 q 454 265 454 164 l 454 546 l 365 546 l 356 440 q 318 187 340 271 q 240 53 296 103 q 67 -18 183 4 l 0 176 q 64 221 46 200 q 91 289 82 242 q 107 450 100 336 l 125 742 l 729 742 l 729 264 q 744 190 729 211 q 786 169 758 169 q 845 214 825 169 q 865 360 865 258 q 857 526 865 442 l 1131 526 z \\\"},\\\"ԋ\\\":{\\\"ha\\\":1189,\\\"x_min\\\":58,\\\"x_max\\\":1161,\\\"o\\\":\\\"m 1151 526 q 1161 339 1161 425 q 1108 131 1161 214 q 968 10 1054 49 q 785 -28 882 -28 q 633 2 703 -28 q 519 98 563 32 q 475 265 475 164 l 475 276 l 333 276 l 333 0 l 58 0 l 58 742 l 333 742 l 333 474 l 475 474 l 475 742 l 750 742 l 750 264 q 765 190 750 211 q 807 169 779 169 q 866 214 846 169 q 886 360 886 258 q 878 526 886 442 l 1151 526 z \\\"},\\\"ԍ\\\":{\\\"ha\\\":778,\\\"x_min\\\":24,\\\"x_max\\\":747,\\\"o\\\":\\\"m 428 769 q 602 741 528 769 q 736 661 676 713 l 610 525 q 530 568 568 554 q 447 582 492 582 q 306 374 306 582 q 333 209 306 254 q 417 164 360 164 q 493 176 458 164 l 493 272 l 421 272 l 396 444 l 747 444 l 747 72 q 592 2 678 29 q 413 -25 507 -25 q 119 74 214 -25 q 24 375 24 172 q 75 584 24 494 q 219 722 126 674 q 428 769 311 769 z \\\"},\\\"ԏ\\\":{\\\"ha\\\":921,\\\"x_min\\\":0,\\\"x_max\\\":893,\\\"o\\\":\\\"m 885 493 q 893 339 893 421 q 839 131 893 214 q 698 10 785 49 q 510 -28 611 -28 q 288 44 375 -28 q 200 265 200 117 l 200 557 l 0 557 l 0 742 l 688 742 l 653 557 l 475 557 l 475 264 q 490 190 475 211 q 532 169 504 169 q 594 215 571 169 q 618 360 618 261 q 611 492 618 436 l 885 493 z \\\"},\\\"ԑ\\\":{\\\"ha\\\":675,\\\"x_min\\\":21,\\\"x_max\\\":682,\\\"o\\\":\\\"m 364 769 q 663 676 540 769 l 556 540 q 478 575 514 564 q 403 586 443 586 q 347 571 368 586 q 325 528 325 556 q 344 479 325 497 q 404 461 364 461 l 501 461 l 476 294 l 393 294 q 324 277 346 294 q 303 229 303 260 q 404 161 303 161 q 481 173 442 161 q 571 213 519 185 l 682 63 q 358 -28 558 -28 q 115 33 208 -28 q 21 204 21 93 q 226 394 21 369 q 49 564 49 431 q 135 714 49 658 q 364 769 222 769 z \\\"},\\\"ԓ\\\":{\\\"ha\\\":788,\\\"x_min\\\":0,\\\"x_max\\\":729,\\\"o\\\":\\\"m 729 742 l 729 -22 q 645 -240 729 -165 q 418 -315 561 -315 q 199 -253 285 -315 l 288 -96 q 336 -115 317 -110 q 382 -121 356 -121 q 435 -102 417 -121 q 454 -47 454 -83 l 454 546 l 365 546 l 356 440 q 318 187 340 271 q 240 53 296 103 q 67 -18 183 4 l 0 176 q 64 221 46 200 q 91 289 82 242 q 107 450 100 336 l 125 742 l 729 742 z \\\"},\\\"ԕ\\\":{\\\"ha\\\":1068,\\\"x_min\\\":0,\\\"x_max\\\":1096,\\\"o\\\":\\\"m 1096 0 l 789 0 l 692 256 l 603 0 l 307 0 l 533 389 l 438 551 l 365 551 l 356 440 q 319 187 340 271 q 240 53 297 103 q 67 -18 183 4 l 0 176 q 64 221 46 200 q 91 289 82 242 q 107 450 100 336 l 125 742 l 631 742 l 703 524 l 768 742 l 1056 742 l 867 397 l 1096 0 z \\\"},\\\"ԗ\\\":{\\\"ha\\\":1206,\\\"x_min\\\":58,\\\"x_max\\\":1219,\\\"o\\\":\\\"m 939 0 l 792 265 q 692 53 768 133 q 506 -28 615 -28 q 333 46 400 -28 l 333 -287 l 58 -315 l 58 742 l 303 742 l 314 669 q 413 746 358 722 q 524 769 468 769 q 713 688 644 769 q 797 458 782 607 l 954 742 l 1208 742 l 1001 378 l 1219 0 l 939 0 m 415 168 q 519 369 519 168 q 508 499 519 454 q 478 558 497 543 q 431 572 460 572 q 333 503 372 572 l 333 219 q 371 180 351 192 q 415 168 390 168 z \\\"},\\\"ԙ\\\":{\\\"ha\\\":1182,\\\"x_min\\\":-21,\\\"x_max\\\":1161,\\\"o\\\":\\\"m 871 167 q 952 181 914 167 q 1046 232 990 194 l 1157 82 q 1018 1 1093 31 q 844 -28 943 -28 q 585 53 683 -28 q 460 269 486 133 l 401 269 l 269 0 l -21 0 l 153 318 q 42 506 42 381 q 131 681 42 619 q 400 742 221 742 l 675 742 q 828 769 743 769 q 1076 667 990 769 q 1161 368 1161 565 q 1156 268 1161 321 l 735 268 q 780 190 749 213 q 871 167 811 167 m 819 596 q 751 557 774 596 q 725 424 729 518 l 914 424 l 914 433 q 894 553 914 511 q 819 596 874 596 m 414 575 q 344 556 369 575 q 319 499 319 536 q 342 444 319 464 q 408 424 364 424 l 454 424 q 497 575 463 503 l 414 575 z \\\"},\\\"ԛ\\\":{\\\"ha\\\":828,\\\"x_min\\\":24,\\\"x_max\\\":769,\\\"o\\\":\\\"m 769 742 l 769 -315 l 494 -287 l 494 57 q 306 -28 422 -28 q 94 79 165 -28 q 24 375 24 186 q 63 579 24 489 q 172 719 101 669 q 335 769 243 769 q 517 690 442 769 l 529 742 l 769 742 m 399 169 q 494 235 457 169 l 494 532 q 456 563 474 553 q 414 574 438 574 q 335 526 364 574 q 306 372 306 478 q 330 210 306 250 q 399 169 354 169 z \\\"},\\\"ԝ\\\":{\\\"ha\\\":1067,\\\"x_min\\\":-7,\\\"x_max\\\":1074,\\\"o\\\":\\\"m 928 0 l 613 0 l 532 497 l 456 0 l 142 0 l -7 742 l 271 742 l 315 210 l 413 742 l 669 742 l 747 210 l 810 742 l 1074 742 l 928 0 z \\\"},\\\"ԟ\\\":{\\\"ha\\\":786,\\\"x_min\\\":58,\\\"x_max\\\":800,\\\"o\\\":\\\"m 800 0 l 519 0 l 385 304 l 333 304 l 333 0 l 58 0 l 58 742 l 333 742 l 333 457 l 392 457 l 435 543 l 354 579 l 404 686 l 488 649 l 535 742 l 789 742 l 692 556 l 782 514 l 732 407 l 638 450 l 610 397 l 800 0 z \\\"},\\\"ԡ\\\":{\\\"ha\\\":1167,\\\"x_min\\\":0,\\\"x_max\\\":1139,\\\"o\\\":\\\"m 939 492 q 1085 433 1032 492 q 1139 269 1139 375 l 1139 -22 q 1055 -240 1139 -165 q 828 -315 971 -315 q 608 -253 694 -315 l 697 -96 q 746 -115 726 -110 q 792 -121 765 -121 q 845 -102 826 -121 q 864 -47 864 -83 l 864 219 q 853 276 864 261 q 822 292 843 292 q 729 239 779 292 l 729 0 l 454 0 l 454 546 l 365 546 l 356 440 q 318 187 340 271 q 240 53 296 103 q 67 -18 183 4 l 0 176 q 64 221 46 200 q 91 289 82 242 q 107 450 100 336 l 125 742 l 729 742 l 729 411 q 828 472 779 453 q 939 492 878 492 z \\\"},\\\"ԣ\\\":{\\\"ha\\\":1188,\\\"x_min\\\":58,\\\"x_max\\\":1160,\\\"o\\\":\\\"m 960 492 q 1106 433 1053 492 q 1160 269 1160 375 l 1160 -22 q 1076 -240 1160 -165 q 849 -315 992 -315 q 629 -253 715 -315 l 718 -96 q 767 -115 747 -110 q 813 -121 786 -121 q 866 -102 847 -121 q 885 -47 885 -83 l 885 219 q 874 276 885 261 q 843 292 864 292 q 750 239 800 292 l 750 0 l 475 0 l 475 276 l 333 276 l 333 0 l 58 0 l 58 742 l 333 742 l 333 474 l 475 474 l 475 742 l 750 742 l 750 411 q 849 472 800 453 q 960 492 899 492 z \\\"},\\\"ҍ\\\":{\\\"ha\\\":744,\\\"x_min\\\":0,\\\"x_max\\\":738,\\\"o\\\":\\\"m 372 488 q 648 426 558 488 q 738 242 738 364 q 649 64 738 128 q 410 0 560 0 l 72 0 l 72 547 l 0 547 l 0 694 l 72 694 l 72 742 l 347 742 l 347 694 l 531 694 l 510 547 l 347 547 l 347 488 l 372 488 m 379 171 q 440 192 419 171 q 461 247 461 214 q 368 321 461 321 l 347 321 l 347 171 l 379 171 z \\\"},\\\"ҏ\\\":{\\\"ha\\\":825,\\\"x_min\\\":58,\\\"x_max\\\":801,\\\"o\\\":\\\"m 801 374 q 756 149 801 247 q 632 6 711 51 l 714 -128 l 604 -128 l 542 -25 q 506 -28 519 -28 q 333 36 407 -28 l 333 -287 l 58 -315 l 58 742 l 303 742 l 314 669 q 413 746 358 722 q 518 769 467 769 q 731 666 660 769 q 801 374 801 563 m 415 140 q 440 142 432 140 l 340 304 l 450 304 l 507 213 q 519 369 519 263 q 508 499 519 456 q 476 558 496 543 q 425 572 457 572 q 333 503 372 572 l 333 192 q 371 152 351 164 q 415 140 390 140 z \\\"},\\\"Ϳ\\\":{\\\"ha\\\":451,\\\"x_min\\\":-28,\\\"x_max\\\":394,\\\"o\\\":\\\"m 394 154 q 346 -55 394 28 q 223 -183 297 -137 q 49 -262 149 -229 l -28 -61 q 61 -8 32 -39 q 99 63 90 24 q 108 164 108 103 l 108 967 l 394 967 l 394 154 z \\\"},\\\"Α\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 z \\\"},\\\"Β\\\":{\\\"ha\\\":864,\\\"x_min\\\":60,\\\"x_max\\\":843,\\\"o\\\":\\\"m 628 513 q 783 441 724 493 q 843 286 843 389 q 727 63 843 126 q 399 0 611 0 l 60 0 l 60 967 l 361 967 q 690 909 576 967 q 803 717 803 851 q 753 581 803 631 q 628 513 703 532 m 346 771 l 346 593 l 394 593 q 486 615 460 593 q 513 688 513 636 q 484 751 513 731 q 388 771 456 771 l 346 771 m 401 201 q 511 224 474 201 q 549 306 549 246 q 515 387 549 361 q 413 413 481 413 l 346 413 l 346 201 l 401 201 z \\\"},\\\"Γ\\\":{\\\"ha\\\":710,\\\"x_min\\\":60,\\\"x_max\\\":717,\\\"o\\\":\\\"m 689 747 l 346 747 l 346 0 l 60 0 l 60 967 l 717 967 l 689 747 z \\\"},\\\"Δ\\\":{\\\"ha\\\":846,\\\"x_min\\\":-35,\\\"x_max\\\":881,\\\"o\\\":\\\"m 881 0 l -35 0 l 253 967 l 594 967 l 881 0 m 306 203 l 535 203 l 421 763 l 306 203 z \\\"},\\\"Ε\\\":{\\\"ha\\\":722,\\\"x_min\\\":60,\\\"x_max\\\":694,\\\"o\\\":\\\"m 665 768 l 346 768 l 346 588 l 626 588 l 626 394 l 346 394 l 346 200 l 688 200 l 688 0 l 60 0 l 60 967 l 694 967 l 665 768 z \\\"},\\\"Ζ\\\":{\\\"ha\\\":774,\\\"x_min\\\":14,\\\"x_max\\\":753,\\\"o\\\":\\\"m 740 754 l 356 224 l 753 224 l 725 0 l 14 0 l 14 210 l 411 750 l 53 750 l 53 967 l 740 967 l 740 754 z \\\"},\\\"Η\\\":{\\\"ha\\\":913,\\\"x_min\\\":60,\\\"x_max\\\":853,\\\"o\\\":\\\"m 567 390 l 346 390 l 346 0 l 60 0 l 60 967 l 346 967 l 346 610 l 567 610 l 567 967 l 853 967 l 853 0 l 567 0 l 567 390 z \\\"},\\\"Θ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 346 722 386 792 q 306 485 306 651 q 347 247 306 318 q 479 175 388 175 q 613 246 574 175 q 653 485 653 317 q 613 722 653 651 q 479 792 572 792 m 604 415 l 354 415 l 354 563 l 604 563 l 604 415 z \\\"},\\\"Ι\\\":{\\\"ha\\\":406,\\\"x_min\\\":60,\\\"x_max\\\":346,\\\"o\\\":\\\"m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 z \\\"},\\\"Κ\\\":{\\\"ha\\\":915,\\\"x_min\\\":60,\\\"x_max\\\":943,\\\"o\\\":\\\"m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 m 644 538 l 943 0 l 618 0 l 354 515 l 624 967 l 918 967 l 644 538 z \\\"},\\\"Λ\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 869 0 l 567 0 l 415 767 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 z \\\"},\\\"Μ\\\":{\\\"ha\\\":1099,\\\"x_min\\\":21,\\\"x_max\\\":1078,\\\"o\\\":\\\"m 1078 0 l 796 0 l 789 343 q 788 464 788 383 q 799 738 788 606 l 685 97 l 414 97 l 292 738 q 310 407 310 544 l 310 344 l 303 0 l 21 0 l 90 967 l 443 967 l 554 340 l 654 967 l 1008 967 l 1078 0 z \\\"},\\\"Ν\\\":{\\\"ha\\\":904,\\\"x_min\\\":60,\\\"x_max\\\":844,\\\"o\\\":\\\"m 844 0 l 486 0 l 275 706 l 279 675 q 303 490 294 574 q 313 300 313 406 l 313 0 l 60 0 l 60 967 l 411 967 l 631 258 l 626 288 q 601 466 610 383 q 592 657 592 549 l 592 967 l 844 967 l 844 0 z \\\"},\\\"Ξ\\\":{\\\"ha\\\":739,\\\"x_min\\\":28,\\\"x_max\\\":718,\\\"o\\\":\\\"m 686 733 l 28 733 l 28 967 l 718 967 l 686 733 m 619 383 l 119 383 l 119 599 l 619 599 l 619 383 m 711 0 l 28 0 l 28 242 l 711 242 l 711 0 z \\\"},\\\"Ο\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 z \\\"},\\\"Π\\\":{\\\"ha\\\":913,\\\"x_min\\\":60,\\\"x_max\\\":853,\\\"o\\\":\\\"m 853 0 l 567 0 l 567 753 l 346 753 l 346 0 l 60 0 l 60 967 l 853 967 l 853 0 z \\\"},\\\"Ρ\\\":{\\\"ha\\\":849,\\\"x_min\\\":60,\\\"x_max\\\":828,\\\"o\\\":\\\"m 408 967 q 717 884 607 967 q 828 642 828 801 q 723 389 828 476 q 440 301 618 301 l 346 301 l 346 0 l 60 0 l 60 967 l 408 967 m 413 503 q 536 642 536 503 q 404 768 536 768 l 346 768 l 346 503 l 413 503 z \\\"},\\\"Σ\\\":{\\\"ha\\\":699,\\\"x_min\\\":14,\\\"x_max\\\":685,\\\"o\\\":\\\"m 685 765 l 328 765 l 533 522 l 533 428 l 324 206 l 685 206 l 685 0 l 14 0 l 14 200 l 256 472 l 14 767 l 14 967 l 685 967 l 685 765 z \\\"},\\\"Τ\\\":{\\\"ha\\\":769,\\\"x_min\\\":7,\\\"x_max\\\":776,\\\"o\\\":\\\"m 747 753 l 528 753 l 528 0 l 242 0 l 242 753 l 7 753 l 7 967 l 776 967 l 747 753 z \\\"},\\\"Υ\\\":{\\\"ha\\\":861,\\\"x_min\\\":-21,\\\"x_max\\\":882,\\\"o\\\":\\\"m 574 357 l 574 0 l 288 0 l 288 356 l -21 967 l 292 967 l 435 572 l 579 967 l 882 967 l 574 357 z \\\"},\\\"Φ\\\":{\\\"ha\\\":1199,\\\"x_min\\\":7,\\\"x_max\\\":1192,\\\"o\\\":\\\"m 1192 488 q 1069 218 1192 314 q 738 111 946 122 l 738 0 l 460 0 l 460 111 q 131 215 254 122 q 7 479 7 308 q 130 747 7 651 q 460 854 253 842 l 460 967 l 738 967 l 738 854 q 1068 751 944 843 q 1192 488 1192 658 m 724 271 q 860 340 818 281 q 903 488 903 399 q 859 631 903 576 q 724 696 815 686 l 724 271 m 296 479 q 339 335 296 390 q 474 269 382 281 l 474 694 q 296 479 296 676 z \\\"},\\\"Χ\\\":{\\\"ha\\\":842,\\\"x_min\\\":-14,\\\"x_max\\\":856,\\\"o\\\":\\\"m 856 0 l 547 0 l 414 332 l 289 0 l -14 0 l 244 513 l 4 967 l 311 967 l 417 689 l 535 967 l 836 967 l 586 521 l 856 0 z \\\"},\\\"Ψ\\\":{\\\"ha\\\":1039,\\\"x_min\\\":14,\\\"x_max\\\":1025,\\\"o\\\":\\\"m 1025 967 l 1025 599 q 933 365 1025 458 q 663 246 842 272 l 663 0 l 376 0 l 376 244 q 105 361 196 271 q 14 599 14 451 l 14 967 l 286 967 l 286 586 q 310 488 286 525 q 390 433 333 450 l 390 967 l 649 967 l 649 435 q 728 489 704 451 q 753 586 753 526 l 753 967 l 1025 967 z \\\"},\\\"Ω\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 722 933 619 994 q 877 770 824 872 q 931 544 931 668 q 881 338 931 426 q 742 197 832 249 l 901 197 l 901 0 l 518 0 l 518 183 q 597 254 572 210 q 627 361 621 299 q 633 544 633 424 q 479 792 633 792 q 325 544 325 792 q 331 362 325 424 q 362 256 338 300 q 440 183 386 211 l 440 0 l 57 0 l 57 197 l 217 197 q 77 338 126 249 q 28 544 28 426 q 81 770 28 668 q 237 933 135 872 q 479 994 339 994 z \\\"},\\\"Ά\\\":{\\\"ha\\\":1039,\\\"x_min\\\":114,\\\"x_max\\\":1074,\\\"o\\\":\\\"m 733 188 l 504 188 l 468 0 l 169 0 l 451 967 l 793 967 l 1074 0 l 771 0 l 733 188 m 693 388 l 618 767 l 544 388 l 693 388 m 374 967 l 301 629 l 132 629 l 114 986 l 374 967 z \\\"},\\\"Έ\\\":{\\\"ha\\\":1075,\\\"x_min\\\":114,\\\"x_max\\\":1047,\\\"o\\\":\\\"m 1018 768 l 699 768 l 699 588 l 979 588 l 979 394 l 699 394 l 699 200 l 1040 200 l 1040 0 l 413 0 l 413 967 l 1047 967 l 1018 768 m 374 967 l 301 629 l 132 629 l 114 986 l 374 967 z \\\"},\\\"Ή\\\":{\\\"ha\\\":1265,\\\"x_min\\\":114,\\\"x_max\\\":1206,\\\"o\\\":\\\"m 919 390 l 699 390 l 699 0 l 413 0 l 413 967 l 699 967 l 699 610 l 919 610 l 919 967 l 1206 967 l 1206 0 l 919 0 l 919 390 m 374 967 l 301 629 l 132 629 l 114 986 l 374 967 z \\\"},\\\"Ί\\\":{\\\"ha\\\":758,\\\"x_min\\\":114,\\\"x_max\\\":699,\\\"o\\\":\\\"m 699 0 l 413 0 l 413 967 l 699 967 l 699 0 m 374 967 l 301 629 l 132 629 l 114 986 l 374 967 z \\\"},\\\"Ό\\\":{\\\"ha\\\":1228,\\\"x_min\\\":100,\\\"x_max\\\":1200,\\\"o\\\":\\\"m 749 994 q 1083 860 965 994 q 1200 485 1200 726 q 1147 213 1200 328 q 993 35 1094 97 q 749 -28 892 -28 q 415 108 532 -28 q 297 485 297 243 q 350 756 297 642 q 504 933 403 871 q 749 994 606 994 m 749 792 q 631 722 667 792 q 594 485 594 651 q 631 247 594 318 q 749 175 667 175 q 867 246 832 175 q 903 485 903 317 q 867 722 903 651 q 749 792 831 792 m 360 967 l 288 629 l 118 629 l 100 986 l 360 967 z \\\"},\\\"Ύ\\\":{\\\"ha\\\":1274,\\\"x_min\\\":114,\\\"x_max\\\":1294,\\\"o\\\":\\\"m 986 357 l 986 0 l 700 0 l 700 356 l 392 967 l 704 967 l 847 572 l 992 967 l 1294 967 l 986 357 m 374 967 l 301 629 l 132 629 l 114 986 l 374 967 z \\\"},\\\"Ώ\\\":{\\\"ha\\\":1268,\\\"x_min\\\":100,\\\"x_max\\\":1240,\\\"o\\\":\\\"m 789 994 q 1031 933 929 994 q 1187 770 1133 872 q 1240 544 1240 668 q 1191 338 1240 426 q 1051 197 1142 249 l 1211 197 l 1211 0 l 828 0 l 828 183 q 906 254 882 210 q 937 361 931 299 q 943 544 943 424 q 789 792 943 792 q 635 544 635 792 q 641 362 635 424 q 672 256 647 300 q 750 183 696 211 l 750 0 l 367 0 l 367 197 l 526 197 q 387 338 436 249 q 338 544 338 426 q 391 770 338 668 q 547 933 444 872 q 789 994 649 994 m 360 967 l 288 629 l 118 629 l 100 986 l 360 967 z \\\"},\\\"Ϊ\\\":{\\\"ha\\\":406,\\\"x_min\\\":-103,\\\"x_max\\\":501,\\\"o\\\":\\\"m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 z \\\"},\\\"Ϋ\\\":{\\\"ha\\\":861,\\\"x_min\\\":-21,\\\"x_max\\\":882,\\\"o\\\":\\\"m 574 357 l 574 0 l 288 0 l 288 356 l -21 967 l 292 967 l 435 572 l 579 967 l 882 967 l 574 357 z \\\"},\\\"Ͱ\\\":{\\\"ha\\\":726,\\\"x_min\\\":60,\\\"x_max\\\":726,\\\"o\\\":\\\"m 346 390 l 346 0 l 60 0 l 60 967 l 346 967 l 346 610 l 726 610 l 726 390 l 346 390 z \\\"},\\\"Ͳ\\\":{\\\"ha\\\":964,\\\"x_min\\\":7,\\\"x_max\\\":957,\\\"o\\\":\\\"m 957 967 l 957 510 l 713 510 l 713 758 l 625 758 l 625 0 l 339 0 l 339 758 l 251 758 l 251 510 l 7 510 l 7 967 l 957 967 z \\\"},\\\"Ͷ\\\":{\\\"ha\\\":904,\\\"x_min\\\":60,\\\"x_max\\\":844,\\\"o\\\":\\\"m 844 0 l 565 0 l 565 296 q 607 696 565 504 l 399 0 l 60 0 l 60 967 l 339 967 l 339 660 q 328 465 339 543 q 297 278 318 386 l 513 967 l 844 967 l 844 0 z \\\"},\\\"Ϙ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 931 485 q 848 156 931 286 q 611 -12 765 26 l 611 -299 l 349 -299 l 349 -12 q 110 153 193 25 q 28 485 28 282 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 q 813 860 696 994 q 931 485 931 726 m 479 175 q 598 246 563 175 q 633 485 633 317 q 597 722 633 651 q 479 792 561 792 q 361 722 397 792 q 325 485 325 651 q 361 247 325 318 q 479 175 397 175 z \\\"},\\\"Ϛ\\\":{\\\"ha\\\":817,\\\"x_min\\\":28,\\\"x_max\\\":817,\\\"o\\\":\\\"m 407 -158 q 477 -107 456 -126 q 499 -67 499 -87 q 483 -35 499 -49 q 435 -6 468 -21 q 328 38 403 8 q 111 184 194 89 q 28 463 28 279 q 94 727 28 613 q 283 904 161 842 q 565 967 404 967 l 817 967 l 789 744 l 613 744 q 332 469 332 744 q 348 355 332 396 q 405 283 364 314 q 532 211 446 251 q 672 139 622 171 q 750 65 722 107 q 778 -39 778 22 q 711 -190 778 -124 q 506 -315 644 -257 l 407 -158 z \\\"},\\\"Ϝ\\\":{\\\"ha\\\":717,\\\"x_min\\\":60,\\\"x_max\\\":717,\\\"o\\\":\\\"m 346 747 l 346 558 l 479 558 q 658 514 592 558 l 596 336 q 535 353 564 347 q 465 358 506 358 l 346 358 l 346 0 l 60 0 l 60 967 l 717 967 l 689 747 l 346 747 z \\\"},\\\"Ϟ\\\":{\\\"ha\\\":719,\\\"x_min\\\":14,\\\"x_max\\\":706,\\\"o\\\":\\\"m 706 376 l 457 0 l 139 0 l 403 376 l 56 376 l 14 592 l 263 967 l 581 967 l 321 592 l 664 592 l 706 376 z \\\"},\\\"Ϡ\\\":{\\\"ha\\\":851,\\\"x_min\\\":-35,\\\"x_max\\\":886,\\\"o\\\":\\\"m 629 0 l 546 265 l 479 0 l 304 0 l 465 519 l 421 663 l 211 0 l -35 0 l 313 894 l 272 967 l 518 967 l 886 0 l 629 0 z \\\"},\\\"Ϗ\\\":{\\\"ha\\\":957,\\\"x_min\\\":60,\\\"x_max\\\":957,\\\"o\\\":\\\"m 60 967 l 346 967 l 346 0 l 60 0 l 60 967 m 957 214 l 957 -22 q 871 -240 957 -165 q 636 -315 785 -315 q 418 -253 504 -315 l 507 -86 q 556 -108 538 -101 q 601 -114 575 -114 q 653 -95 635 -114 q 671 -40 671 -76 l 671 0 l 618 0 l 354 515 l 624 967 l 918 967 l 644 538 l 824 214 l 957 214 z \\\"},\\\"ϒ\\\":{\\\"ha\\\":918,\\\"x_min\\\":-21,\\\"x_max\\\":960,\\\"o\\\":\\\"m 288 356 l -21 967 l 292 967 l 435 572 l 499 768 q 602 942 538 890 q 779 994 667 994 q 960 946 878 994 l 889 781 q 821 797 853 797 q 772 783 790 797 q 738 732 753 768 l 574 357 l 574 0 l 288 0 l 288 356 z \\\"},\\\"ϓ\\\":{\\\"ha\\\":1354,\\\"x_min\\\":114,\\\"x_max\\\":1396,\\\"o\\\":\\\"m 724 356 l 415 967 l 728 967 l 871 572 l 935 768 q 1038 942 974 890 q 1215 994 1103 994 q 1396 946 1314 994 l 1325 781 q 1257 797 1289 797 q 1208 783 1226 797 q 1174 732 1189 768 l 1010 357 l 1010 0 l 724 0 l 724 356 m 429 653 l 254 624 l 114 967 l 376 1021 l 429 653 z \\\"},\\\"ϔ\\\":{\\\"ha\\\":918,\\\"x_min\\\":-21,\\\"x_max\\\":960,\\\"o\\\":\\\"m 288 356 l -21 967 l 292 967 l 435 572 l 499 768 q 602 942 538 890 q 779 994 667 994 q 960 946 878 994 l 889 781 q 821 797 853 797 q 772 783 790 797 q 738 732 753 768 l 574 357 l 574 0 l 288 0 l 288 356 z \\\"},\\\"ϴ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 813 860 696 994 q 931 485 931 726 q 878 213 931 328 q 724 35 825 97 q 479 -28 622 -28 q 145 108 263 -28 q 28 485 28 243 q 81 756 28 642 q 235 933 133 871 q 479 994 336 994 m 479 792 q 346 722 386 792 q 306 485 306 651 q 347 247 306 318 q 479 175 388 175 q 613 246 574 175 q 653 485 653 317 q 613 722 653 651 q 479 792 572 792 m 604 415 l 354 415 l 354 563 l 604 563 l 604 415 z \\\"},\\\"Ϸ\\\":{\\\"ha\\\":849,\\\"x_min\\\":60,\\\"x_max\\\":828,\\\"o\\\":\\\"m 408 824 q 717 741 607 824 q 828 497 828 658 q 723 236 828 325 q 440 147 618 147 l 346 147 l 346 0 l 60 0 l 60 967 l 346 967 l 346 824 l 408 824 m 413 349 q 505 385 474 349 q 536 497 536 421 q 404 625 536 625 l 346 625 l 346 349 l 413 349 z \\\"},\\\"Ϲ\\\":{\\\"ha\\\":853,\\\"x_min\\\":28,\\\"x_max\\\":853,\\\"o\\\":\\\"m 497 994 q 684 966 603 994 q 842 881 765 938 l 708 721 q 615 772 658 756 q 514 789 571 789 q 373 713 421 789 q 325 486 325 638 q 522 188 325 188 q 619 206 578 188 q 728 268 661 225 l 853 107 q 506 -28 692 -28 q 154 105 281 -28 q 28 486 28 238 q 86 759 28 644 q 251 934 144 874 q 497 994 357 994 z \\\"},\\\"Ϻ\\\":{\\\"ha\\\":1099,\\\"x_min\\\":21,\\\"x_max\\\":1078,\\\"o\\\":\\\"m 1078 0 l 796 0 l 789 343 q 788 464 788 383 q 799 738 788 606 l 685 97 l 414 97 l 292 738 q 310 407 310 544 l 310 344 l 303 0 l 21 0 l 90 967 l 443 967 l 554 340 l 654 967 l 1008 967 l 1078 0 z \\\"},\\\"Ͻ\\\":{\\\"ha\\\":853,\\\"x_min\\\":0,\\\"x_max\\\":825,\\\"o\\\":\\\"m 367 994 q 609 934 506 994 q 769 759 713 874 q 825 486 825 644 q 768 206 825 321 q 605 31 711 90 q 353 -28 499 -28 q 157 7 242 -28 q 0 107 72 42 l 125 268 q 226 208 176 228 q 338 188 275 188 q 528 486 528 188 q 350 789 528 789 q 244 772 290 789 q 144 724 197 756 l 11 881 q 172 966 88 938 q 367 994 256 994 z \\\"},\\\"Ͼ\\\":{\\\"ha\\\":853,\\\"x_min\\\":28,\\\"x_max\\\":853,\\\"o\\\":\\\"m 497 994 q 684 966 603 994 q 842 881 765 938 l 708 721 q 615 772 658 756 q 514 789 571 789 q 373 713 421 789 q 325 486 325 638 q 522 188 325 188 q 619 206 578 188 q 728 268 661 225 l 853 107 q 506 -28 692 -28 q 154 105 281 -28 q 28 486 28 238 q 86 759 28 644 q 251 934 144 874 q 497 994 357 994 m 538 628 q 637 590 597 628 q 676 496 676 553 q 637 401 676 439 q 538 363 597 363 q 438 401 476 363 q 399 496 399 439 q 438 590 399 553 q 538 628 476 628 z \\\"},\\\"Ͽ\\\":{\\\"ha\\\":853,\\\"x_min\\\":0,\\\"x_max\\\":825,\\\"o\\\":\\\"m 367 994 q 609 934 506 994 q 769 759 713 874 q 825 486 825 644 q 768 206 825 321 q 605 31 711 90 q 353 -28 499 -28 q 157 7 242 -28 q 0 107 72 42 l 125 268 q 226 208 176 228 q 338 188 275 188 q 528 486 528 188 q 350 789 528 789 q 244 772 290 789 q 144 724 197 756 l 11 881 q 172 966 88 938 q 367 994 256 994 m 307 628 q 406 590 367 628 q 446 496 446 553 q 406 401 446 439 q 307 363 367 363 q 207 401 246 363 q 168 496 168 439 q 207 590 168 553 q 307 628 246 628 z \\\"},\\\"Ἀ\\\":{\\\"ha\\\":1107,\\\"x_min\\\":114,\\\"x_max\\\":1142,\\\"o\\\":\\\"m 242 990 q 333 954 297 990 q 369 864 369 918 q 361 810 369 835 q 332 742 353 785 l 263 601 l 132 601 l 167 760 q 114 864 114 800 q 150 953 114 917 q 242 990 186 990 m 801 188 l 572 188 l 536 0 l 238 0 l 519 967 l 861 967 l 1142 0 l 839 0 l 801 188 m 761 388 l 686 767 l 613 388 l 761 388 z \\\"},\\\"Ἁ\\\":{\\\"ha\\\":1121,\\\"x_min\\\":114,\\\"x_max\\\":1156,\\\"o\\\":\\\"m 242 990 q 333 953 297 990 q 369 864 369 917 q 317 760 369 800 l 351 601 l 221 601 l 151 742 q 122 810 131 785 q 114 864 114 835 q 150 954 114 918 q 242 990 186 990 m 815 188 l 586 188 l 550 0 l 251 0 l 533 967 l 875 967 l 1156 0 l 853 0 l 815 188 m 775 388 l 700 767 l 626 388 l 775 388 z \\\"},\\\"Ἂ\\\":{\\\"ha\\\":1425,\\\"x_min\\\":114,\\\"x_max\\\":1460,\\\"o\\\":\\\"m 167 760 q 114 864 114 800 q 150 953 114 917 q 242 990 186 990 q 333 954 297 990 q 369 864 369 918 q 361 810 369 835 q 332 742 353 785 l 263 601 l 132 601 l 167 760 m 383 932 l 604 986 l 667 624 l 517 594 l 383 932 m 1119 188 l 890 188 l 854 0 l 556 0 l 838 967 l 1179 967 l 1460 0 l 1157 0 l 1119 188 m 1079 388 l 1004 767 l 931 388 l 1079 388 z \\\"},\\\"Ἃ\\\":{\\\"ha\\\":1397,\\\"x_min\\\":114,\\\"x_max\\\":1432,\\\"o\\\":\\\"m 242 990 q 333 953 297 990 q 369 864 369 917 q 317 760 369 800 l 351 601 l 221 601 l 151 742 q 122 810 131 785 q 114 864 114 835 q 150 954 114 918 q 242 990 186 990 m 667 624 l 517 594 l 383 932 l 604 986 l 667 624 m 1092 188 l 863 188 l 826 0 l 528 0 l 810 967 l 1151 967 l 1432 0 l 1129 0 l 1092 188 m 1051 388 l 976 767 l 903 388 l 1051 388 z \\\"},\\\"Ἄ\\\":{\\\"ha\\\":1397,\\\"x_min\\\":114,\\\"x_max\\\":1432,\\\"o\\\":\\\"m 167 760 q 114 864 114 800 q 150 953 114 917 q 242 990 186 990 q 333 954 297 990 q 369 864 369 918 q 361 810 369 835 q 332 742 353 785 l 263 601 l 132 601 l 167 760 m 383 624 l 446 986 l 667 932 l 533 594 l 383 624 m 1092 188 l 863 188 l 826 0 l 528 0 l 810 967 l 1151 967 l 1432 0 l 1129 0 l 1092 188 m 1051 388 l 976 767 l 903 388 l 1051 388 z \\\"},\\\"Ἅ\\\":{\\\"ha\\\":1397,\\\"x_min\\\":114,\\\"x_max\\\":1432,\\\"o\\\":\\\"m 242 990 q 333 953 297 990 q 369 864 369 917 q 317 760 369 800 l 351 601 l 221 601 l 151 742 q 122 810 131 785 q 114 864 114 835 q 150 954 114 918 q 242 990 186 990 m 681 932 l 547 594 l 397 624 l 460 986 l 681 932 m 1092 188 l 863 188 l 826 0 l 528 0 l 810 967 l 1151 967 l 1432 0 l 1129 0 l 1092 188 m 1051 388 l 976 767 l 903 388 l 1051 388 z \\\"},\\\"Ἆ\\\":{\\\"ha\\\":1315,\\\"x_min\\\":114,\\\"x_max\\\":1350,\\\"o\\\":\\\"m 1010 188 l 781 188 l 744 0 l 446 0 l 728 967 l 1069 967 l 1350 0 l 1047 0 l 1010 188 m 969 388 l 894 767 l 821 388 l 969 388 m 474 742 q 424 749 444 742 q 382 771 404 756 q 344 795 356 789 q 317 801 332 801 q 276 788 292 801 q 243 742 261 774 l 114 804 q 194 940 143 886 q 310 993 244 993 q 362 986 340 993 q 407 963 383 979 q 444 940 431 946 q 471 933 457 933 q 510 947 494 933 q 543 993 525 961 l 672 931 q 592 794 643 847 q 474 742 540 742 m 335 499 q 265 603 265 533 q 301 692 265 656 q 393 729 338 729 q 485 693 449 729 q 521 603 521 657 q 511 547 521 572 q 479 481 501 521 l 442 414 l 321 414 l 335 499 z \\\"},\\\"Ἇ\\\":{\\\"ha\\\":1319,\\\"x_min\\\":114,\\\"x_max\\\":1354,\\\"o\\\":\\\"m 1014 188 l 785 188 l 749 0 l 450 0 l 732 967 l 1074 967 l 1354 0 l 1051 0 l 1014 188 m 974 388 l 899 767 l 825 388 l 974 388 m 474 742 q 424 749 444 742 q 382 771 404 756 q 344 795 356 789 q 317 801 332 801 q 276 788 292 801 q 243 742 261 774 l 114 804 q 194 940 143 886 q 310 993 244 993 q 362 986 340 993 q 407 963 383 979 q 444 940 431 946 q 471 933 457 933 q 510 947 494 933 q 543 993 525 961 l 672 931 q 592 794 643 847 q 474 742 540 742 m 344 414 l 307 481 q 275 547 285 521 q 265 603 265 572 q 301 693 265 657 q 393 729 338 729 q 485 692 449 729 q 521 603 521 656 q 454 499 521 535 l 465 414 l 344 414 z \\\"},\\\"Ὰ\\\":{\\\"ha\\\":1132,\\\"x_min\\\":114,\\\"x_max\\\":1167,\\\"o\\\":\\\"m 826 188 l 597 188 l 561 0 l 263 0 l 544 967 l 886 967 l 1167 0 l 864 0 l 826 188 m 786 388 l 711 767 l 638 388 l 786 388 m 429 653 l 254 624 l 114 967 l 376 1021 l 429 653 z \\\"},\\\"Ά\\\":{\\\"ha\\\":1069,\\\"x_min\\\":114,\\\"x_max\\\":1104,\\\"o\\\":\\\"m 764 188 l 535 188 l 499 0 l 200 0 l 482 967 l 824 967 l 1104 0 l 801 0 l 764 188 m 724 388 l 649 767 l 575 388 l 724 388 m 429 967 l 289 624 l 114 653 l 167 1021 l 429 967 z \\\"},\\\"Ᾰ\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 m 418 1036 q 236 1112 301 1036 q 161 1294 171 1188 l 304 1318 q 345 1249 317 1276 q 418 1222 374 1222 q 491 1249 463 1222 q 532 1318 519 1276 l 675 1294 q 600 1112 665 1188 q 418 1036 535 1036 z \\\"},\\\"Ᾱ\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 z \\\"},\\\"ᾼ\\\":{\\\"ha\\\":835,\\\"x_min\\\":-35,\\\"x_max\\\":869,\\\"o\\\":\\\"m 529 188 l 300 188 l 264 0 l -35 0 l 247 967 l 589 967 l 869 0 l 567 0 l 529 188 m 489 388 l 414 767 l 340 388 l 489 388 m 525 -294 q 377 -240 429 -294 q 325 -99 325 -186 l 325 -61 l 510 -61 l 510 -93 q 563 -149 510 -149 q 629 -129 593 -149 l 692 -240 q 525 -294 624 -294 z \\\"},\\\"ᾈ\\\":{\\\"ha\\\":1107,\\\"x_min\\\":114,\\\"x_max\\\":1142,\\\"o\\\":\\\"m 242 990 q 333 954 297 990 q 369 864 369 918 q 361 810 369 835 q 332 742 353 785 l 263 601 l 132 601 l 167 760 q 114 864 114 800 q 150 953 114 917 q 242 990 186 990 m 801 188 l 572 188 l 536 0 l 238 0 l 519 967 l 861 967 l 1142 0 l 839 0 l 801 188 m 761 388 l 686 767 l 613 388 l 761 388 m 797 -294 q 649 -240 701 -294 q 597 -99 597 -186 l 597 -61 l 782 -61 l 782 -93 q 835 -149 782 -149 q 901 -129 865 -149 l 964 -240 q 797 -294 896 -294 z \\\"},\\\"ᾉ\\\":{\\\"ha\\\":1121,\\\"x_min\\\":114,\\\"x_max\\\":1156,\\\"o\\\":\\\"m 242 990 q 333 953 297 990 q 369 864 369 917 q 317 760 369 800 l 351 601 l 221 601 l 151 742 q 122 810 131 785 q 114 864 114 835 q 150 954 114 918 q 242 990 186 990 m 815 188 l 586 188 l 550 0 l 251 0 l 533 967 l 875 967 l 1156 0 l 853 0 l 815 188 m 775 388 l 700 767 l 626 388 l 775 388 m 811 -294 q 663 -240 715 -294 q 611 -99 611 -186 l 611 -61 l 796 -61 l 796 -93 q 849 -149 796 -149 q 915 -129 879 -149 l 978 -240 q 811 -294 910 -294 z \\\"},\\\"ᾊ\\\":{\\\"ha\\\":1425,\\\"x_min\\\":114,\\\"x_max\\\":1460,\\\"o\\\":\\\"m 167 760 q 114 864 114 800 q 150 953 114 917 q 242 990 186 990 q 333 954 297 990 q 369 864 369 918 q 361 810 369 835 q 332 742 353 785 l 263 601 l 132 601 l 167 760 m 383 932 l 604 986 l 667 624 l 517 594 l 383 932 m 1119 188 l 890 188 l 854 0 l 556 0 l 838 967 l 1179 967 l 1460 0 l 1157 0 l 1119 188 m 1079 388 l 1004 767 l 931 388 l 1079 388 m 1115 -294 q 967 -240 1019 -294 q 915 -99 915 -186 l 915 -61 l 1100 -61 l 1100 -93 q 1153 -149 1100 -149 q 1219 -129 1183 -149 l 1282 -240 q 1115 -294 1214 -294 z \\\"},\\\"ᾋ\\\":{\\\"ha\\\":1397,\\\"x_min\\\":114,\\\"x_max\\\":1432,\\\"o\\\":\\\"m 242 990 q 333 953 297 990 q 369 864 369 917 q 317 760 369 800 l 351 601 l 221 601 l 151 742 q 122 810 131 785 q 114 864 114 835 q 150 954 114 918 q 242 990 186 990 m 667 624 l 517 594 l 383 932 l 604 986 l 667 624 m 1092 188 l 863 188 l 826 0 l 528 0 l 810 967 l 1151 967 l 1432 0 l 1129 0 l 1092 188 m 1051 388 l 976 767 l 903 388 l 1051 388 m 1088 -294 q 940 -240 992 -294 q 888 -99 888 -186 l 888 -61 l 1072 -61 l 1072 -93 q 1125 -149 1072 -149 q 1192 -129 1156 -149 l 1254 -240 q 1088 -294 1186 -294 z \\\"},\\\"ᾌ\\\":{\\\"ha\\\":1397,\\\"x_min\\\":114,\\\"x_max\\\":1432,\\\"o\\\":\\\"m 167 760 q 114 864 114 800 q 150 953 114 917 q 242 990 186 990 q 333 954 297 990 q 369 864 369 918 q 361 810 369 835 q 332 742 353 785 l 263 601 l 132 601 l 167 760 m 383 624 l 446 986 l 667 932 l 533 594 l 383 624 m 1092 188 l 863 188 l 826 0 l 528 0 l 810 967 l 1151 967 l 1432 0 l 1129 0 l 1092 188 m 1051 388 l 976 767 l 903 388 l 1051 388 m 1088 -294 q 940 -240 992 -294 q 888 -99 888 -186 l 888 -61 l 1072 -61 l 1072 -93 q 1125 -149 1072 -149 q 1192 -129 1156 -149 l 1254 -240 q 1088 -294 1186 -294 z \\\"},\\\"ᾍ\\\":{\\\"ha\\\":1397,\\\"x_min\\\":114,\\\"x_max\\\":1432,\\\"o\\\":\\\"m 242 990 q 333 953 297 990 q 369 864 369 917 q 317 760 369 800 l 351 601 l 221 601 l 151 742 q 122 810 131 785 q 114 864 114 835 q 150 954 114 918 q 242 990 186 990 m 681 932 l 547 594 l 397 624 l 460 986 l 681 932 m 1092 188 l 863 188 l 826 0 l 528 0 l 810 967 l 1151 967 l 1432 0 l 1129 0 l 1092 188 m 1051 388 l 976 767 l 903 388 l 1051 388 m 1088 -294 q 940 -240 992 -294 q 888 -99 888 -186 l 888 -61 l 1072 -61 l 1072 -93 q 1125 -149 1072 -149 q 1192 -129 1156 -149 l 1254 -240 q 1088 -294 1186 -294 z \\\"},\\\"ᾎ\\\":{\\\"ha\\\":1315,\\\"x_min\\\":114,\\\"x_max\\\":1350,\\\"o\\\":\\\"m 1010 188 l 781 188 l 744 0 l 446 0 l 728 967 l 1069 967 l 1350 0 l 1047 0 l 1010 188 m 969 388 l 894 767 l 821 388 l 969 388 m 474 742 q 424 749 444 742 q 382 771 404 756 q 344 795 356 789 q 317 801 332 801 q 276 788 292 801 q 243 742 261 774 l 114 804 q 194 940 143 886 q 310 993 244 993 q 362 986 340 993 q 407 963 383 979 q 444 940 431 946 q 471 933 457 933 q 510 947 494 933 q 543 993 525 961 l 672 931 q 592 794 643 847 q 474 742 540 742 m 335 499 q 265 603 265 533 q 301 692 265 656 q 393 729 338 729 q 485 693 449 729 q 521 603 521 657 q 511 547 521 572 q 479 481 501 521 l 442 414 l 321 414 l 335 499 m 1006 -294 q 858 -240 910 -294 q 806 -99 806 -186 l 806 -61 l 990 -61 l 990 -93 q 1043 -149 990 -149 q 1110 -129 1074 -149 l 1172 -240 q 1006 -294 1104 -294 z \\\"},\\\"ᾏ\\\":{\\\"ha\\\":1319,\\\"x_min\\\":114,\\\"x_max\\\":1354,\\\"o\\\":\\\"m 1014 188 l 785 188 l 749 0 l 450 0 l 732 967 l 1074 967 l 1354 0 l 1051 0 l 1014 188 m 974 388 l 899 767 l 825 388 l 974 388 m 474 742 q 424 749 444 742 q 382 771 404 756 q 344 795 356 789 q 317 801 332 801 q 276 788 292 801 q 243 742 261 774 l 114 804 q 194 940 143 886 q 310 993 244 993 q 362 986 340 993 q 407 963 383 979 q 444 940 431 946 q 471 933 457 933 q 510 947 494 933 q 543 993 525 961 l 672 931 q 592 794 643 847 q 474 742 540 742 m 344 414 l 307 481 q 275 547 285 521 q 265 603 265 572 q 301 693 265 657 q 393 729 338 729 q 485 692 449 729 q 521 603 521 656 q 454 499 521 535 l 465 414 l 344 414 m 1010 -294 q 862 -240 914 -294 q 810 -99 810 -186 l 810 -61 l 994 -61 l 994 -93 q 1047 -149 994 -149 q 1114 -129 1078 -149 l 1176 -240 q 1010 -294 1108 -294 z \\\"},\\\"Ἐ\\\":{\\\"ha\\\":1079,\\\"x_min\\\":114,\\\"x_max\\\":1051,\\\"o\\\":\\\"m 1022 768 l 703 768 l 703 588 l 983 588 l 983 394 l 703 394 l 703 200 l 1044 200 l 1044 0 l 417 0 l 417 967 l 1051 967 l 1022 768 m 242 990 q 333 954 297 990 q 369 864 369 918 q 361 810 369 835 q 332 742 353 785 l 263 601 l 132 601 l 167 760 q 114 864 114 800 q 150 953 114 917 q 242 990 186 990 z \\\"},\\\"Ἑ\\\":{\\\"ha\\\":1079,\\\"x_min\\\":114,\\\"x_max\\\":1051,\\\"o\\\":\\\"m 1022 768 l 703 768 l 703 588 l 983 588 l 983 394 l 703 394 l 703 200 l 1044 200 l 1044 0 l 417 0 l 417 967 l 1051 967 l 1022 768 m 242 990 q 333 953 297 990 q 369 864 369 917 q 317 760 369 800 l 351 601 l 221 601 l 151 742 q 122 810 131 785 q 114 864 114 835 q 150 954 114 918 q 242 990 186 990 z \\\"},\\\"Ἒ\\\":{\\\"ha\\\":1374,\\\"x_min\\\":114,\\\"x_max\\\":1346,\\\"o\\\":\\\"m 1317 768 l 997 768 l 997 588 l 1278 588 l 1278 394 l 997 394 l 997 200 l 1339 200 l 1339 0 l 711 0 l 711 967 l 1346 967 l 1317 768 m 167 760 q 114 864 114 800 q 150 953 114 917 q 242 990 186 990 q 333 954 297 990 q 369 864 369 918 q 361 810 369 835 q 332 742 353 785 l 263 601 l 132 601 l 167 760 m 383 932 l 604 986 l 667 624 l 517 594 l 383 932 z \\\"},\\\"Ἓ\\\":{\\\"ha\\\":1374,\\\"x_min\\\":114,\\\"x_max\\\":1346,\\\"o\\\":\\\"m 1317 768 l 997 768 l 997 588 l 1278 588 l 1278 394 l 997 394 l 997 200 l 1339 200 l 1339 0 l 711 0 l 711 967 l 1346 967 l 1317 768 m 242 990 q 333 953 297 990 q 369 864 369 917 q 317 760 369 800 l 351 601 l 221 601 l 151 742 q 122 810 131 785 q 114 864 114 835 q 150 954 114 918 q 242 990 186 990 m 667 624 l 517 594 l 383 932 l 604 986 l 667 624 z \\\"},\\\"Ἔ\\\":{\\\"ha\\\":1360,\\\"x_min\\\":114,\\\"x_max\\\":1332,\\\"o\\\":\\\"m 1303 768 l 983 768 l 983 588 l 1264 588 l 1264 394 l 983 394 l 983 200 l 1325 200 l 1325 0 l 697 0 l 697 967 l 1332 967 l 1303 768 m 167 760 q 114 864 114 800 q 150 953 114 917 q 242 990 186 990 q 333 954 297 990 q 369 864 369 918 q 361 810 369 835 q 332 742 353 785 l 263 601 l 132 601 l 167 760 m 383 624 l 446 986 l 667 932 l 533 594 l 383 624 z \\\"},\\\"Ἕ\\\":{\\\"ha\\\":1374,\\\"x_min\\\":114,\\\"x_max\\\":1346,\\\"o\\\":\\\"m 1317 768 l 997 768 l 997 588 l 1278 588 l 1278 394 l 997 394 l 997 200 l 1339 200 l 1339 0 l 711 0 l 711 967 l 1346 967 l 1317 768 m 242 990 q 333 953 297 990 q 369 864 369 917 q 317 760 369 800 l 351 601 l 221 601 l 151 742 q 122 810 131 785 q 114 864 114 835 q 150 954 114 918 q 242 990 186 990 m 681 932 l 547 594 l 397 624 l 460 986 l 681 932 z \\\"},\\\"Ὲ\\\":{\\\"ha\\\":1133,\\\"x_min\\\":114,\\\"x_max\\\":1106,\\\"o\\\":\\\"m 1076 768 l 757 768 l 757 588 l 1038 588 l 1038 394 l 757 394 l 757 200 l 1099 200 l 1099 0 l 471 0 l 471 967 l 1106 967 l 1076 768 m 429 653 l 254 624 l 114 967 l 376 1021 l 429 653 z \\\"},\\\"Έ\\\":{\\\"ha\\\":1119,\\\"x_min\\\":114,\\\"x_max\\\":1092,\\\"o\\\":\\\"m 1063 768 l 743 768 l 743 588 l 1024 588 l 1024 394 l 743 394 l 743 200 l 1085 200 l 1085 0 l 457 0 l 457 967 l 1092 967 l 1063 768 m 429 967 l 289 624 l 114 653 l 167 1021 l 429 967 z \\\"},\\\"Ἠ\\\":{\\\"ha\\\":1269,\\\"x_min\\\":114,\\\"x_max\\\":1210,\\\"o\\\":\\\"m 924 390 l 703 390 l 703 0 l 417 0 l 417 967 l 703 967 l 703 610 l 924 610 l 924 967 l 1210 967 l 1210 0 l 924 0 l 924 390 m 242 990 q 333 954 297 990 q 369 864 369 918 q 361 810 369 835 q 332 742 353 785 l 263 601 l 132 601 l 167 760 q 114 864 114 800 q 150 953 114 917 q 242 990 186 990 z \\\"},\\\"Ἡ\\\":{\\\"ha\\\":1269,\\\"x_min\\\":114,\\\"x_max\\\":1210,\\\"o\\\":\\\"m 924 390 l 703 390 l 703 0 l 417 0 l 417 967 l 703 967 l 703 610 l 924 610 l 924 967 l 1210 967 l 1210 0 l 924 0 l 924 390 m 242 990 q 333 953 297 990 q 369 864 369 917 q 317 760 369 800 l 351 601 l 221 601 l 151 742 q 122 810 131 785 q 114 864 114 835 q 150 954 114 918 q 242 990 186 990 z \\\"},\\\"Ἢ\\\":{\\\"ha\\\":1564,\\\"x_min\\\":114,\\\"x_max\\\":1504,\\\"o\\\":\\\"m 1218 390 l 997 390 l 997 0 l 711 0 l 711 967 l 997 967 l 997 610 l 1218 610 l 1218 967 l 1504 967 l 1504 0 l 1218 0 l 1218 390 m 167 760 q 114 864 114 800 q 150 953 114 917 q 242 990 186 990 q 333 954 297 990 q 369 864 369 918 q 361 810 369 835 q 332 742 353 785 l 263 601 l 132 601 l 167 760 m 383 932 l 604 986 l 667 624 l 517 594 l 383 932 z \\\"},\\\"Ἣ\\\":{\\\"ha\\\":1564,\\\"x_min\\\":114,\\\"x_max\\\":1504,\\\"o\\\":\\\"m 1218 390 l 997 390 l 997 0 l 711 0 l 711 967 l 997 967 l 997 610 l 1218 610 l 1218 967 l 1504 967 l 1504 0 l 1218 0 l 1218 390 m 242 990 q 333 953 297 990 q 369 864 369 917 q 317 760 369 800 l 351 601 l 221 601 l 151 742 q 122 810 131 785 q 114 864 114 835 q 150 954 114 918 q 242 990 186 990 m 667 624 l 517 594 l 383 932 l 604 986 l 667 624 z \\\"},\\\"Ἤ\\\":{\\\"ha\\\":1550,\\\"x_min\\\":114,\\\"x_max\\\":1490,\\\"o\\\":\\\"m 1204 390 l 983 390 l 983 0 l 697 0 l 697 967 l 983 967 l 983 610 l 1204 610 l 1204 967 l 1490 967 l 1490 0 l 1204 0 l 1204 390 m 167 760 q 114 864 114 800 q 150 953 114 917 q 242 990 186 990 q 333 954 297 990 q 369 864 369 918 q 361 810 369 835 q 332 742 353 785 l 263 601 l 132 601 l 167 760 m 383 624 l 446 986 l 667 932 l 533 594 l 383 624 z \\\"},\\\"Ἥ\\\":{\\\"ha\\\":1564,\\\"x_min\\\":114,\\\"x_max\\\":1504,\\\"o\\\":\\\"m 1218 390 l 997 390 l 997 0 l 711 0 l 711 967 l 997 967 l 997 610 l 1218 610 l 1218 967 l 1504 967 l 1504 0 l 1218 0 l 1218 390 m 242 990 q 333 953 297 990 q 369 864 369 917 q 317 760 369 800 l 351 601 l 221 601 l 151 742 q 122 810 131 785 q 114 864 114 835 q 150 954 114 918 q 242 990 186 990 m 681 932 l 547 594 l 397 624 l 460 986 l 681 932 z \\\"},\\\"Ἦ\\\":{\\\"ha\\\":1546,\\\"x_min\\\":114,\\\"x_max\\\":1486,\\\"o\\\":\\\"m 1200 390 l 979 390 l 979 0 l 693 0 l 693 967 l 979 967 l 979 610 l 1200 610 l 1200 967 l 1486 967 l 1486 0 l 1200 0 l 1200 390 m 474 742 q 424 749 444 742 q 382 771 404 756 q 344 795 356 789 q 317 801 332 801 q 276 788 292 801 q 243 742 261 774 l 114 804 q 194 940 143 886 q 310 993 244 993 q 362 986 340 993 q 407 963 383 979 q 444 940 431 946 q 471 933 457 933 q 510 947 494 933 q 543 993 525 961 l 672 931 q 592 794 643 847 q 474 742 540 742 m 335 499 q 265 603 265 533 q 301 692 265 656 q 393 729 338 729 q 485 693 449 729 q 521 603 521 657 q 511 547 521 572 q 479 481 501 521 l 442 414 l 321 414 l 335 499 z \\\"},\\\"Ἧ\\\":{\\\"ha\\\":1546,\\\"x_min\\\":114,\\\"x_max\\\":1486,\\\"o\\\":\\\"m 1200 390 l 979 390 l 979 0 l 693 0 l 693 967 l 979 967 l 979 610 l 1200 610 l 1200 967 l 1486 967 l 1486 0 l 1200 0 l 1200 390 m 474 742 q 424 749 444 742 q 382 771 404 756 q 344 795 356 789 q 317 801 332 801 q 276 788 292 801 q 243 742 261 774 l 114 804 q 194 940 143 886 q 310 993 244 993 q 362 986 340 993 q 407 963 383 979 q 444 940 431 946 q 471 933 457 933 q 510 947 494 933 q 543 993 525 961 l 672 931 q 592 794 643 847 q 474 742 540 742 m 344 414 l 307 481 q 275 547 285 521 q 265 603 265 572 q 301 693 265 657 q 393 729 338 729 q 485 692 449 729 q 521 603 521 656 q 454 499 521 535 l 465 414 l 344 414 z \\\"},\\\"Ὴ\\\":{\\\"ha\\\":1324,\\\"x_min\\\":114,\\\"x_max\\\":1264,\\\"o\\\":\\\"m 978 390 l 757 390 l 757 0 l 471 0 l 471 967 l 757 967 l 757 610 l 978 610 l 978 967 l 1264 967 l 1264 0 l 978 0 l 978 390 m 429 653 l 254 624 l 114 967 l 376 1021 l 429 653 z \\\"},\\\"Ή\\\":{\\\"ha\\\":1310,\\\"x_min\\\":114,\\\"x_max\\\":1250,\\\"o\\\":\\\"m 964 390 l 743 390 l 743 0 l 457 0 l 457 967 l 743 967 l 743 610 l 964 610 l 964 967 l 1250 967 l 1250 0 l 964 0 l 964 390 m 429 967 l 289 624 l 114 653 l 167 1021 l 429 967 z \\\"},\\\"ῌ\\\":{\\\"ha\\\":913,\\\"x_min\\\":60,\\\"x_max\\\":853,\\\"o\\\":\\\"m 567 390 l 346 390 l 346 0 l 60 0 l 60 967 l 346 967 l 346 610 l 567 610 l 567 967 l 853 967 l 853 0 l 567 0 l 567 390 m 564 -294 q 416 -240 468 -294 q 364 -99 364 -186 l 364 -61 l 549 -61 l 549 -93 q 601 -149 549 -149 q 668 -129 632 -149 l 731 -240 q 564 -294 663 -294 z \\\"},\\\"ᾘ\\\":{\\\"ha\\\":1269,\\\"x_min\\\":114,\\\"x_max\\\":1210,\\\"o\\\":\\\"m 924 390 l 703 390 l 703 0 l 417 0 l 417 967 l 703 967 l 703 610 l 924 610 l 924 967 l 1210 967 l 1210 0 l 924 0 l 924 390 m 242 990 q 333 954 297 990 q 369 864 369 918 q 361 810 369 835 q 332 742 353 785 l 263 601 l 132 601 l 167 760 q 114 864 114 800 q 150 953 114 917 q 242 990 186 990 m 921 -294 q 773 -240 825 -294 q 721 -99 721 -186 l 721 -61 l 906 -61 l 906 -93 q 958 -149 906 -149 q 1025 -129 989 -149 l 1088 -240 q 921 -294 1019 -294 z \\\"},\\\"ᾙ\\\":{\\\"ha\\\":1269,\\\"x_min\\\":114,\\\"x_max\\\":1210,\\\"o\\\":\\\"m 924 390 l 703 390 l 703 0 l 417 0 l 417 967 l 703 967 l 703 610 l 924 610 l 924 967 l 1210 967 l 1210 0 l 924 0 l 924 390 m 242 990 q 333 953 297 990 q 369 864 369 917 q 317 760 369 800 l 351 601 l 221 601 l 151 742 q 122 810 131 785 q 114 864 114 835 q 150 954 114 918 q 242 990 186 990 m 921 -294 q 773 -240 825 -294 q 721 -99 721 -186 l 721 -61 l 906 -61 l 906 -93 q 958 -149 906 -149 q 1025 -129 989 -149 l 1088 -240 q 921 -294 1019 -294 z \\\"},\\\"ᾚ\\\":{\\\"ha\\\":1564,\\\"x_min\\\":114,\\\"x_max\\\":1504,\\\"o\\\":\\\"m 1218 390 l 997 390 l 997 0 l 711 0 l 711 967 l 997 967 l 997 610 l 1218 610 l 1218 967 l 1504 967 l 1504 0 l 1218 0 l 1218 390 m 167 760 q 114 864 114 800 q 150 953 114 917 q 242 990 186 990 q 333 954 297 990 q 369 864 369 918 q 361 810 369 835 q 332 742 353 785 l 263 601 l 132 601 l 167 760 m 383 932 l 604 986 l 667 624 l 517 594 l 383 932 m 1215 -294 q 1067 -240 1119 -294 q 1015 -99 1015 -186 l 1015 -61 l 1200 -61 l 1200 -93 q 1253 -149 1200 -149 q 1319 -129 1283 -149 l 1382 -240 q 1215 -294 1314 -294 z \\\"},\\\"ᾛ\\\":{\\\"ha\\\":1564,\\\"x_min\\\":114,\\\"x_max\\\":1504,\\\"o\\\":\\\"m 1218 390 l 997 390 l 997 0 l 711 0 l 711 967 l 997 967 l 997 610 l 1218 610 l 1218 967 l 1504 967 l 1504 0 l 1218 0 l 1218 390 m 242 990 q 333 953 297 990 q 369 864 369 917 q 317 760 369 800 l 351 601 l 221 601 l 151 742 q 122 810 131 785 q 114 864 114 835 q 150 954 114 918 q 242 990 186 990 m 667 624 l 517 594 l 383 932 l 604 986 l 667 624 m 1215 -294 q 1067 -240 1119 -294 q 1015 -99 1015 -186 l 1015 -61 l 1200 -61 l 1200 -93 q 1253 -149 1200 -149 q 1319 -129 1283 -149 l 1382 -240 q 1215 -294 1314 -294 z \\\"},\\\"ᾜ\\\":{\\\"ha\\\":1550,\\\"x_min\\\":114,\\\"x_max\\\":1490,\\\"o\\\":\\\"m 1204 390 l 983 390 l 983 0 l 697 0 l 697 967 l 983 967 l 983 610 l 1204 610 l 1204 967 l 1490 967 l 1490 0 l 1204 0 l 1204 390 m 167 760 q 114 864 114 800 q 150 953 114 917 q 242 990 186 990 q 333 954 297 990 q 369 864 369 918 q 361 810 369 835 q 332 742 353 785 l 263 601 l 132 601 l 167 760 m 383 624 l 446 986 l 667 932 l 533 594 l 383 624 m 1201 -294 q 1053 -240 1106 -294 q 1001 -99 1001 -186 l 1001 -61 l 1186 -61 l 1186 -93 q 1239 -149 1186 -149 q 1306 -129 1269 -149 l 1368 -240 q 1201 -294 1300 -294 z \\\"},\\\"ᾝ\\\":{\\\"ha\\\":1564,\\\"x_min\\\":114,\\\"x_max\\\":1504,\\\"o\\\":\\\"m 1218 390 l 997 390 l 997 0 l 711 0 l 711 967 l 997 967 l 997 610 l 1218 610 l 1218 967 l 1504 967 l 1504 0 l 1218 0 l 1218 390 m 242 990 q 333 953 297 990 q 369 864 369 917 q 317 760 369 800 l 351 601 l 221 601 l 151 742 q 122 810 131 785 q 114 864 114 835 q 150 954 114 918 q 242 990 186 990 m 681 932 l 547 594 l 397 624 l 460 986 l 681 932 m 1215 -294 q 1067 -240 1119 -294 q 1015 -99 1015 -186 l 1015 -61 l 1200 -61 l 1200 -93 q 1253 -149 1200 -149 q 1319 -129 1283 -149 l 1382 -240 q 1215 -294 1314 -294 z \\\"},\\\"ᾞ\\\":{\\\"ha\\\":1546,\\\"x_min\\\":114,\\\"x_max\\\":1486,\\\"o\\\":\\\"m 1200 390 l 979 390 l 979 0 l 693 0 l 693 967 l 979 967 l 979 610 l 1200 610 l 1200 967 l 1486 967 l 1486 0 l 1200 0 l 1200 390 m 474 742 q 424 749 444 742 q 382 771 404 756 q 344 795 356 789 q 317 801 332 801 q 276 788 292 801 q 243 742 261 774 l 114 804 q 194 940 143 886 q 310 993 244 993 q 362 986 340 993 q 407 963 383 979 q 444 940 431 946 q 471 933 457 933 q 510 947 494 933 q 543 993 525 961 l 672 931 q 592 794 643 847 q 474 742 540 742 m 335 499 q 265 603 265 533 q 301 692 265 656 q 393 729 338 729 q 485 693 449 729 q 521 603 521 657 q 511 547 521 572 q 479 481 501 521 l 442 414 l 321 414 l 335 499 m 1197 -294 q 1049 -240 1101 -294 q 997 -99 997 -186 l 997 -61 l 1182 -61 l 1182 -93 q 1235 -149 1182 -149 q 1301 -129 1265 -149 l 1364 -240 q 1197 -294 1296 -294 z \\\"},\\\"ᾟ\\\":{\\\"ha\\\":1546,\\\"x_min\\\":114,\\\"x_max\\\":1486,\\\"o\\\":\\\"m 1200 390 l 979 390 l 979 0 l 693 0 l 693 967 l 979 967 l 979 610 l 1200 610 l 1200 967 l 1486 967 l 1486 0 l 1200 0 l 1200 390 m 474 742 q 424 749 444 742 q 382 771 404 756 q 344 795 356 789 q 317 801 332 801 q 276 788 292 801 q 243 742 261 774 l 114 804 q 194 940 143 886 q 310 993 244 993 q 362 986 340 993 q 407 963 383 979 q 444 940 431 946 q 471 933 457 933 q 510 947 494 933 q 543 993 525 961 l 672 931 q 592 794 643 847 q 474 742 540 742 m 344 414 l 307 481 q 275 547 285 521 q 265 603 265 572 q 301 693 265 657 q 393 729 338 729 q 485 692 449 729 q 521 603 521 656 q 454 499 521 535 l 465 414 l 344 414 m 1197 -294 q 1049 -240 1101 -294 q 997 -99 997 -186 l 997 -61 l 1182 -61 l 1182 -93 q 1235 -149 1182 -149 q 1301 -129 1265 -149 l 1364 -240 q 1197 -294 1296 -294 z \\\"},\\\"Ἰ\\\":{\\\"ha\\\":763,\\\"x_min\\\":114,\\\"x_max\\\":703,\\\"o\\\":\\\"m 703 0 l 417 0 l 417 967 l 703 967 l 703 0 m 242 990 q 333 954 297 990 q 369 864 369 918 q 361 810 369 835 q 332 742 353 785 l 263 601 l 132 601 l 167 760 q 114 864 114 800 q 150 953 114 917 q 242 990 186 990 z \\\"},\\\"Ἱ\\\":{\\\"ha\\\":763,\\\"x_min\\\":114,\\\"x_max\\\":703,\\\"o\\\":\\\"m 703 0 l 417 0 l 417 967 l 703 967 l 703 0 m 242 990 q 333 953 297 990 q 369 864 369 917 q 317 760 369 800 l 351 601 l 221 601 l 151 742 q 122 810 131 785 q 114 864 114 835 q 150 954 114 918 q 242 990 186 990 z \\\"},\\\"Ἲ\\\":{\\\"ha\\\":1057,\\\"x_min\\\":114,\\\"x_max\\\":997,\\\"o\\\":\\\"m 997 0 l 711 0 l 711 967 l 997 967 l 997 0 m 167 760 q 114 864 114 800 q 150 953 114 917 q 242 990 186 990 q 333 954 297 990 q 369 864 369 918 q 361 810 369 835 q 332 742 353 785 l 263 601 l 132 601 l 167 760 m 383 932 l 604 986 l 667 624 l 517 594 l 383 932 z \\\"},\\\"Ἳ\\\":{\\\"ha\\\":1057,\\\"x_min\\\":114,\\\"x_max\\\":997,\\\"o\\\":\\\"m 997 0 l 711 0 l 711 967 l 997 967 l 997 0 m 242 990 q 333 953 297 990 q 369 864 369 917 q 317 760 369 800 l 351 601 l 221 601 l 151 742 q 122 810 131 785 q 114 864 114 835 q 150 954 114 918 q 242 990 186 990 m 667 624 l 517 594 l 383 932 l 604 986 l 667 624 z \\\"},\\\"Ἴ\\\":{\\\"ha\\\":1043,\\\"x_min\\\":114,\\\"x_max\\\":983,\\\"o\\\":\\\"m 983 0 l 697 0 l 697 967 l 983 967 l 983 0 m 167 760 q 114 864 114 800 q 150 953 114 917 q 242 990 186 990 q 333 954 297 990 q 369 864 369 918 q 361 810 369 835 q 332 742 353 785 l 263 601 l 132 601 l 167 760 m 383 624 l 446 986 l 667 932 l 533 594 l 383 624 z \\\"},\\\"Ἵ\\\":{\\\"ha\\\":1057,\\\"x_min\\\":114,\\\"x_max\\\":997,\\\"o\\\":\\\"m 997 0 l 711 0 l 711 967 l 997 967 l 997 0 m 242 990 q 333 953 297 990 q 369 864 369 917 q 317 760 369 800 l 351 601 l 221 601 l 151 742 q 122 810 131 785 q 114 864 114 835 q 150 954 114 918 q 242 990 186 990 m 681 932 l 547 594 l 397 624 l 460 986 l 681 932 z \\\"},\\\"Ἶ\\\":{\\\"ha\\\":1039,\\\"x_min\\\":114,\\\"x_max\\\":979,\\\"o\\\":\\\"m 979 0 l 693 0 l 693 967 l 979 967 l 979 0 m 474 742 q 424 749 444 742 q 382 771 404 756 q 344 795 356 789 q 317 801 332 801 q 276 788 292 801 q 243 742 261 774 l 114 804 q 194 940 143 886 q 310 993 244 993 q 362 986 340 993 q 407 963 383 979 q 444 940 431 946 q 471 933 457 933 q 510 947 494 933 q 543 993 525 961 l 672 931 q 592 794 643 847 q 474 742 540 742 m 335 499 q 265 603 265 533 q 301 692 265 656 q 393 729 338 729 q 485 693 449 729 q 521 603 521 657 q 511 547 521 572 q 479 481 501 521 l 442 414 l 321 414 l 335 499 z \\\"},\\\"Ἷ\\\":{\\\"ha\\\":1039,\\\"x_min\\\":114,\\\"x_max\\\":979,\\\"o\\\":\\\"m 979 0 l 693 0 l 693 967 l 979 967 l 979 0 m 474 742 q 424 749 444 742 q 382 771 404 756 q 344 795 356 789 q 317 801 332 801 q 276 788 292 801 q 243 742 261 774 l 114 804 q 194 940 143 886 q 310 993 244 993 q 362 986 340 993 q 407 963 383 979 q 444 940 431 946 q 471 933 457 933 q 510 947 494 933 q 543 993 525 961 l 672 931 q 592 794 643 847 q 474 742 540 742 m 344 414 l 307 481 q 275 547 285 521 q 265 603 265 572 q 301 693 265 657 q 393 729 338 729 q 485 692 449 729 q 521 603 521 656 q 454 499 521 535 l 465 414 l 344 414 z \\\"},\\\"Ὶ\\\":{\\\"ha\\\":817,\\\"x_min\\\":114,\\\"x_max\\\":757,\\\"o\\\":\\\"m 757 0 l 471 0 l 471 967 l 757 967 l 757 0 m 429 653 l 254 624 l 114 967 l 376 1021 l 429 653 z \\\"},\\\"Ί\\\":{\\\"ha\\\":803,\\\"x_min\\\":114,\\\"x_max\\\":743,\\\"o\\\":\\\"m 743 0 l 457 0 l 457 967 l 743 967 l 743 0 m 429 967 l 289 624 l 114 653 l 167 1021 l 429 967 z \\\"},\\\"Ῐ\\\":{\\\"ha\\\":406,\\\"x_min\\\":-54,\\\"x_max\\\":460,\\\"o\\\":\\\"m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 m 203 1036 q 21 1112 86 1036 q -54 1294 -44 1188 l 89 1318 q 130 1249 101 1276 q 203 1222 158 1222 q 276 1249 247 1222 q 317 1318 304 1276 l 460 1294 q 385 1112 450 1188 q 203 1036 319 1036 z \\\"},\\\"Ῑ\\\":{\\\"ha\\\":406,\\\"x_min\\\":-24,\\\"x_max\\\":428,\\\"o\\\":\\\"m 346 0 l 60 0 l 60 967 l 346 967 l 346 0 z \\\"},\\\"Ὀ\\\":{\\\"ha\\\":1288,\\\"x_min\\\":100,\\\"x_max\\\":1260,\\\"o\\\":\\\"m 228 990 q 319 954 283 990 q 356 864 356 918 q 347 810 356 835 q 318 742 339 785 l 249 601 l 118 601 l 153 760 q 100 864 100 800 q 136 953 100 917 q 228 990 172 990 m 808 994 q 1142 860 1025 994 q 1260 485 1260 726 q 1207 213 1260 328 q 1053 35 1154 97 q 808 -28 951 -28 q 474 108 592 -28 q 357 485 357 243 q 410 756 357 642 q 564 933 463 871 q 808 994 665 994 m 808 792 q 690 722 726 792 q 654 485 654 651 q 690 247 654 318 q 808 175 726 175 q 927 246 892 175 q 963 485 963 317 q 926 722 963 651 q 808 792 890 792 z \\\"},\\\"Ὁ\\\":{\\\"ha\\\":1326,\\\"x_min\\\":100,\\\"x_max\\\":1299,\\\"o\\\":\\\"m 228 990 q 319 953 283 990 q 356 864 356 917 q 303 760 356 800 l 338 601 l 207 601 l 138 742 q 108 810 117 785 q 100 864 100 835 q 136 954 100 918 q 228 990 172 990 m 847 994 q 1181 860 1064 994 q 1299 485 1299 726 q 1246 213 1299 328 q 1092 35 1193 97 q 847 -28 990 -28 q 513 108 631 -28 q 396 485 396 243 q 449 756 396 642 q 603 933 501 871 q 847 994 704 994 m 847 792 q 729 722 765 792 q 693 485 693 651 q 729 247 693 318 q 847 175 765 175 q 966 246 931 175 q 1001 485 1001 317 q 965 722 1001 651 q 847 792 929 792 z \\\"},\\\"Ὂ\\\":{\\\"ha\\\":1639,\\\"x_min\\\":100,\\\"x_max\\\":1611,\\\"o\\\":\\\"m 153 760 q 100 864 100 800 q 136 953 100 917 q 228 990 172 990 q 319 954 283 990 q 356 864 356 918 q 347 810 356 835 q 318 742 339 785 l 249 601 l 118 601 l 153 760 m 369 932 l 590 986 l 653 624 l 503 594 l 369 932 m 1160 994 q 1494 860 1376 994 q 1611 485 1611 726 q 1558 213 1611 328 q 1404 35 1506 97 q 1160 -28 1303 -28 q 826 108 943 -28 q 708 485 708 243 q 761 756 708 642 q 915 933 814 871 q 1160 994 1017 994 m 1160 792 q 1042 722 1078 792 q 1006 485 1006 651 q 1042 247 1006 318 q 1160 175 1078 175 q 1278 246 1243 175 q 1314 485 1314 317 q 1278 722 1314 651 q 1160 792 1242 792 z \\\"},\\\"Ὃ\\\":{\\\"ha\\\":1639,\\\"x_min\\\":100,\\\"x_max\\\":1611,\\\"o\\\":\\\"m 228 990 q 319 953 283 990 q 356 864 356 917 q 303 760 356 800 l 338 601 l 207 601 l 138 742 q 108 810 117 785 q 100 864 100 835 q 136 954 100 918 q 228 990 172 990 m 653 624 l 503 594 l 369 932 l 590 986 l 653 624 m 1160 994 q 1494 860 1376 994 q 1611 485 1611 726 q 1558 213 1611 328 q 1404 35 1506 97 q 1160 -28 1303 -28 q 826 108 943 -28 q 708 485 708 243 q 761 756 708 642 q 915 933 814 871 q 1160 994 1017 994 m 1160 792 q 1042 722 1078 792 q 1006 485 1006 651 q 1042 247 1006 318 q 1160 175 1078 175 q 1278 246 1243 175 q 1314 485 1314 317 q 1278 722 1314 651 q 1160 792 1242 792 z \\\"},\\\"Ὄ\\\":{\\\"ha\\\":1513,\\\"x_min\\\":100,\\\"x_max\\\":1485,\\\"o\\\":\\\"m 1033 994 q 1367 860 1250 994 q 1485 485 1485 726 q 1432 213 1485 328 q 1278 35 1379 97 q 1033 -28 1176 -28 q 699 108 817 -28 q 582 485 582 243 q 635 756 582 642 q 789 933 688 871 q 1033 994 890 994 m 1033 792 q 915 722 951 792 q 879 485 879 651 q 915 247 879 318 q 1033 175 951 175 q 1152 246 1117 175 q 1188 485 1188 317 q 1151 722 1188 651 q 1033 792 1115 792 m 153 760 q 100 864 100 800 q 136 953 100 917 q 228 990 172 990 q 319 954 283 990 q 356 864 356 918 q 347 810 356 835 q 318 742 339 785 l 249 601 l 118 601 l 153 760 m 369 624 l 432 986 l 653 932 l 519 594 l 369 624 z \\\"},\\\"Ὅ\\\":{\\\"ha\\\":1526,\\\"x_min\\\":100,\\\"x_max\\\":1499,\\\"o\\\":\\\"m 1047 994 q 1381 860 1264 994 q 1499 485 1499 726 q 1446 213 1499 328 q 1292 35 1393 97 q 1047 -28 1190 -28 q 713 108 831 -28 q 596 485 596 243 q 649 756 596 642 q 803 933 701 871 q 1047 994 904 994 m 1047 792 q 929 722 965 792 q 893 485 893 651 q 929 247 893 318 q 1047 175 965 175 q 1166 246 1131 175 q 1201 485 1201 317 q 1165 722 1201 651 q 1047 792 1129 792 m 228 990 q 319 953 283 990 q 356 864 356 917 q 303 760 356 800 l 338 601 l 207 601 l 138 742 q 108 810 117 785 q 100 864 100 835 q 136 954 100 918 q 228 990 172 990 m 667 932 l 533 594 l 383 624 l 446 986 l 667 932 z \\\"},\\\"Ὸ\\\":{\\\"ha\\\":1360,\\\"x_min\\\":100,\\\"x_max\\\":1332,\\\"o\\\":\\\"m 415 653 l 240 624 l 100 967 l 363 1021 l 415 653 m 881 994 q 1215 860 1097 994 q 1332 485 1332 726 q 1279 213 1332 328 q 1125 35 1226 97 q 881 -28 1024 -28 q 547 108 664 -28 q 429 485 429 243 q 482 756 429 642 q 636 933 535 871 q 881 994 738 994 m 881 792 q 763 722 799 792 q 726 485 726 651 q 763 247 726 318 q 881 175 799 175 q 999 246 964 175 q 1035 485 1035 317 q 999 722 1035 651 q 881 792 963 792 z \\\"},\\\"Ό\\\":{\\\"ha\\\":1272,\\\"x_min\\\":100,\\\"x_max\\\":1244,\\\"o\\\":\\\"m 793 994 q 1127 860 1010 994 q 1244 485 1244 726 q 1192 213 1244 328 q 1038 35 1139 97 q 793 -28 936 -28 q 459 108 576 -28 q 342 485 342 243 q 394 756 342 642 q 549 933 447 871 q 793 994 650 994 m 793 792 q 675 722 711 792 q 639 485 639 651 q 675 247 639 318 q 793 175 711 175 q 912 246 876 175 q 947 485 947 317 q 911 722 947 651 q 793 792 875 792 m 415 967 l 275 624 l 100 653 l 153 1021 l 415 967 z \\\"},\\\"Ῥ\\\":{\\\"ha\\\":1219,\\\"x_min\\\":114,\\\"x_max\\\":1199,\\\"o\\\":\\\"m 779 967 q 1088 884 978 967 q 1199 642 1199 801 q 1094 389 1199 476 q 811 301 989 301 l 717 301 l 717 0 l 431 0 l 431 967 l 779 967 m 783 503 q 907 642 907 503 q 775 768 907 768 l 717 768 l 717 503 l 783 503 m 242 990 q 333 953 297 990 q 369 864 369 917 q 317 760 369 800 l 351 601 l 221 601 l 151 742 q 122 810 131 785 q 114 864 114 835 q 150 954 114 918 q 242 990 186 990 z \\\"},\\\"Ὑ\\\":{\\\"ha\\\":1292,\\\"x_min\\\":114,\\\"x_max\\\":1313,\\\"o\\\":\\\"m 1004 357 l 1004 0 l 718 0 l 718 356 l 410 967 l 722 967 l 865 572 l 1010 967 l 1313 967 l 1004 357 m 242 990 q 333 953 297 990 q 369 864 369 917 q 317 760 369 800 l 351 601 l 221 601 l 151 742 q 122 810 131 785 q 114 864 114 835 q 150 954 114 918 q 242 990 186 990 z \\\"},\\\"Ὓ\\\":{\\\"ha\\\":1544,\\\"x_min\\\":114,\\\"x_max\\\":1565,\\\"o\\\":\\\"m 1257 357 l 1257 0 l 971 0 l 971 356 l 663 967 l 975 967 l 1118 572 l 1263 967 l 1565 967 l 1257 357 m 242 990 q 333 953 297 990 q 369 864 369 917 q 317 760 369 800 l 351 601 l 221 601 l 151 742 q 122 810 131 785 q 114 864 114 835 q 150 954 114 918 q 242 990 186 990 m 667 624 l 517 594 l 383 932 l 604 986 l 667 624 z \\\"},\\\"Ὕ\\\":{\\\"ha\\\":1572,\\\"x_min\\\":114,\\\"x_max\\\":1593,\\\"o\\\":\\\"m 1285 357 l 1285 0 l 999 0 l 999 356 l 690 967 l 1003 967 l 1146 572 l 1290 967 l 1593 967 l 1285 357 m 242 990 q 333 953 297 990 q 369 864 369 917 q 317 760 369 800 l 351 601 l 221 601 l 151 742 q 122 810 131 785 q 114 864 114 835 q 150 954 114 918 q 242 990 186 990 m 681 932 l 547 594 l 397 624 l 460 986 l 681 932 z \\\"},\\\"Ὗ\\\":{\\\"ha\\\":1554,\\\"x_min\\\":114,\\\"x_max\\\":1575,\\\"o\\\":\\\"m 1267 357 l 1267 0 l 981 0 l 981 356 l 672 967 l 985 967 l 1128 572 l 1272 967 l 1575 967 l 1267 357 m 474 742 q 424 749 444 742 q 382 771 404 756 q 344 795 356 789 q 317 801 332 801 q 276 788 292 801 q 243 742 261 774 l 114 804 q 194 940 143 886 q 310 993 244 993 q 362 986 340 993 q 407 963 383 979 q 444 940 431 946 q 471 933 457 933 q 510 947 494 933 q 543 993 525 961 l 672 931 q 592 794 643 847 q 474 742 540 742 m 344 414 l 307 481 q 275 547 285 521 q 265 603 265 572 q 301 693 265 657 q 393 729 338 729 q 485 692 449 729 q 521 603 521 656 q 454 499 521 535 l 465 414 l 344 414 z \\\"},\\\"Ὺ\\\":{\\\"ha\\\":1290,\\\"x_min\\\":114,\\\"x_max\\\":1311,\\\"o\\\":\\\"m 1003 357 l 1003 0 l 717 0 l 717 356 l 408 967 l 721 967 l 864 572 l 1008 967 l 1311 967 l 1003 357 m 429 653 l 254 624 l 114 967 l 376 1021 l 429 653 z \\\"},\\\"Ύ\\\":{\\\"ha\\\":1318,\\\"x_min\\\":114,\\\"x_max\\\":1339,\\\"o\\\":\\\"m 1031 357 l 1031 0 l 744 0 l 744 356 l 436 967 l 749 967 l 892 572 l 1036 967 l 1339 967 l 1031 357 m 429 967 l 289 624 l 114 653 l 167 1021 l 429 967 z \\\"},\\\"Ῠ\\\":{\\\"ha\\\":861,\\\"x_min\\\":-21,\\\"x_max\\\":882,\\\"o\\\":\\\"m 574 357 l 574 0 l 288 0 l 288 356 l -21 967 l 292 967 l 435 572 l 579 967 l 882 967 l 574 357 m 431 1036 q 249 1112 314 1036 q 174 1294 183 1188 l 317 1318 q 358 1249 329 1276 q 431 1222 386 1222 q 503 1249 475 1222 q 544 1318 532 1276 l 688 1294 q 613 1112 678 1188 q 431 1036 547 1036 z \\\"},\\\"Ῡ\\\":{\\\"ha\\\":861,\\\"x_min\\\":-21,\\\"x_max\\\":882,\\\"o\\\":\\\"m 574 357 l 574 0 l 288 0 l 288 356 l -21 967 l 292 967 l 435 572 l 579 967 l 882 967 l 574 357 z \\\"},\\\"Ὠ\\\":{\\\"ha\\\":1290,\\\"x_min\\\":100,\\\"x_max\\\":1263,\\\"o\\\":\\\"m 228 990 q 319 954 283 990 q 356 864 356 918 q 347 810 356 835 q 318 742 339 785 l 249 601 l 118 601 l 153 760 q 100 864 100 800 q 136 953 100 917 q 228 990 172 990 m 811 994 q 1053 933 951 994 q 1209 770 1156 872 q 1263 544 1263 668 q 1213 338 1263 426 q 1074 197 1164 249 l 1233 197 l 1233 0 l 850 0 l 850 183 q 928 254 904 210 q 959 361 953 299 q 965 544 965 424 q 811 792 965 792 q 657 544 657 792 q 663 362 657 424 q 694 256 669 300 q 772 183 718 211 l 772 0 l 389 0 l 389 197 l 549 197 q 409 338 458 249 q 360 544 360 426 q 413 770 360 668 q 569 933 467 872 q 811 994 671 994 z \\\"},\\\"Ὡ\\\":{\\\"ha\\\":1342,\\\"x_min\\\":100,\\\"x_max\\\":1314,\\\"o\\\":\\\"m 228 990 q 319 953 283 990 q 356 864 356 917 q 303 760 356 800 l 338 601 l 207 601 l 138 742 q 108 810 117 785 q 100 864 100 835 q 136 954 100 918 q 228 990 172 990 m 863 994 q 1105 933 1003 994 q 1260 770 1207 872 q 1314 544 1314 668 q 1265 338 1314 426 q 1125 197 1215 249 l 1285 197 l 1285 0 l 901 0 l 901 183 q 980 254 956 210 q 1010 361 1004 299 q 1017 544 1017 424 q 863 792 1017 792 q 708 544 708 792 q 715 362 708 424 q 745 256 721 300 q 824 183 769 211 l 824 0 l 440 0 l 440 197 l 600 197 q 460 338 510 249 q 411 544 411 426 q 465 770 411 668 q 620 933 518 872 q 863 994 722 994 z \\\"},\\\"Ὢ\\\":{\\\"ha\\\":1639,\\\"x_min\\\":100,\\\"x_max\\\":1611,\\\"o\\\":\\\"m 153 760 q 100 864 100 800 q 136 953 100 917 q 228 990 172 990 q 319 954 283 990 q 356 864 356 918 q 347 810 356 835 q 318 742 339 785 l 249 601 l 118 601 l 153 760 m 369 932 l 590 986 l 653 624 l 503 594 l 369 932 m 1160 994 q 1402 933 1300 994 q 1558 770 1504 872 q 1611 544 1611 668 q 1562 338 1611 426 q 1422 197 1513 249 l 1582 197 l 1582 0 l 1199 0 l 1199 183 q 1277 254 1253 210 q 1308 361 1301 299 q 1314 544 1314 424 q 1160 792 1314 792 q 1006 544 1006 792 q 1012 362 1006 424 q 1042 256 1018 300 q 1121 183 1067 211 l 1121 0 l 738 0 l 738 197 l 897 197 q 758 338 807 249 q 708 544 708 426 q 762 770 708 668 q 917 933 815 872 q 1160 994 1019 994 z \\\"},\\\"Ὣ\\\":{\\\"ha\\\":1611,\\\"x_min\\\":100,\\\"x_max\\\":1583,\\\"o\\\":\\\"m 228 990 q 319 953 283 990 q 356 864 356 917 q 303 760 356 800 l 338 601 l 207 601 l 138 742 q 108 810 117 785 q 100 864 100 835 q 136 954 100 918 q 228 990 172 990 m 653 624 l 503 594 l 369 932 l 590 986 l 653 624 m 1132 994 q 1374 933 1272 994 q 1530 770 1476 872 q 1583 544 1583 668 q 1534 338 1583 426 q 1394 197 1485 249 l 1554 197 l 1554 0 l 1171 0 l 1171 183 q 1249 254 1225 210 q 1280 361 1274 299 q 1286 544 1286 424 q 1132 792 1286 792 q 978 544 978 792 q 984 362 978 424 q 1015 256 990 300 q 1093 183 1039 211 l 1093 0 l 710 0 l 710 197 l 869 197 q 730 338 779 249 q 681 544 681 426 q 734 770 681 668 q 890 933 788 872 q 1132 994 992 994 z \\\"},\\\"Ὤ\\\":{\\\"ha\\\":1576,\\\"x_min\\\":100,\\\"x_max\\\":1549,\\\"o\\\":\\\"m 153 760 q 100 864 100 800 q 136 953 100 917 q 228 990 172 990 q 319 954 283 990 q 356 864 356 918 q 347 810 356 835 q 318 742 339 785 l 249 601 l 118 601 l 153 760 m 369 624 l 432 986 l 653 932 l 519 594 l 369 624 m 1097 994 q 1340 933 1238 994 q 1495 770 1442 872 q 1549 544 1549 668 q 1499 338 1549 426 q 1360 197 1450 249 l 1519 197 l 1519 0 l 1136 0 l 1136 183 q 1215 254 1190 210 q 1245 361 1239 299 q 1251 544 1251 424 q 1097 792 1251 792 q 943 544 943 792 q 949 362 943 424 q 980 256 956 300 q 1058 183 1004 211 l 1058 0 l 675 0 l 675 197 l 835 197 q 695 338 744 249 q 646 544 646 426 q 699 770 646 668 q 855 933 753 872 q 1097 994 957 994 z \\\"},\\\"Ὥ\\\":{\\\"ha\\\":1590,\\\"x_min\\\":100,\\\"x_max\\\":1563,\\\"o\\\":\\\"m 228 990 q 319 953 283 990 q 356 864 356 917 q 303 760 356 800 l 338 601 l 207 601 l 138 742 q 108 810 117 785 q 100 864 100 835 q 136 954 100 918 q 228 990 172 990 m 667 932 l 533 594 l 383 624 l 446 986 l 667 932 m 1111 994 q 1353 933 1251 994 q 1509 770 1456 872 q 1563 544 1563 668 q 1513 338 1563 426 q 1374 197 1464 249 l 1533 197 l 1533 0 l 1150 0 l 1150 183 q 1228 254 1204 210 q 1259 361 1253 299 q 1265 544 1265 424 q 1111 792 1265 792 q 957 544 957 792 q 963 362 957 424 q 994 256 969 300 q 1072 183 1018 211 l 1072 0 l 689 0 l 689 197 l 849 197 q 709 338 758 249 q 660 544 660 426 q 713 770 660 668 q 869 933 767 872 q 1111 994 971 994 z \\\"},\\\"Ὦ\\\":{\\\"ha\\\":1492,\\\"x_min\\\":100,\\\"x_max\\\":1464,\\\"o\\\":\\\"m 460 742 q 410 749 431 742 q 368 771 390 756 q 330 795 342 789 q 303 801 318 801 q 263 788 278 801 q 229 742 247 774 l 100 804 q 180 940 129 886 q 296 993 231 993 q 348 986 326 993 q 393 963 369 979 q 430 940 417 946 q 457 933 443 933 q 496 947 481 933 q 529 993 511 961 l 658 931 q 578 794 629 847 q 460 742 526 742 m 321 499 q 251 603 251 533 q 288 692 251 656 q 379 729 324 729 q 471 693 435 729 q 507 603 507 657 q 497 547 507 572 q 465 481 488 521 l 428 414 l 307 414 l 321 499 m 1013 994 q 1255 933 1153 994 q 1410 770 1357 872 q 1464 544 1464 668 q 1415 338 1464 426 q 1275 197 1365 249 l 1435 197 l 1435 0 l 1051 0 l 1051 183 q 1130 254 1106 210 q 1160 361 1154 299 q 1167 544 1167 424 q 1013 792 1167 792 q 858 544 858 792 q 865 362 858 424 q 895 256 871 300 q 974 183 919 211 l 974 0 l 590 0 l 590 197 l 750 197 q 610 338 660 249 q 561 544 561 426 q 615 770 561 668 q 770 933 668 872 q 1013 994 872 994 z \\\"},\\\"Ὧ\\\":{\\\"ha\\\":1492,\\\"x_min\\\":100,\\\"x_max\\\":1464,\\\"o\\\":\\\"m 460 742 q 410 749 431 742 q 368 771 390 756 q 330 795 342 789 q 303 801 318 801 q 263 788 278 801 q 229 742 247 774 l 100 804 q 180 940 129 886 q 296 993 231 993 q 348 986 326 993 q 393 963 369 979 q 430 940 417 946 q 457 933 443 933 q 496 947 481 933 q 529 993 511 961 l 658 931 q 578 794 629 847 q 460 742 526 742 m 331 414 l 293 481 q 261 547 271 521 q 251 603 251 572 q 288 693 251 657 q 379 729 324 729 q 471 692 435 729 q 507 603 507 656 q 440 499 507 535 l 451 414 l 331 414 m 1013 994 q 1255 933 1153 994 q 1410 770 1357 872 q 1464 544 1464 668 q 1415 338 1464 426 q 1275 197 1365 249 l 1435 197 l 1435 0 l 1051 0 l 1051 183 q 1130 254 1106 210 q 1160 361 1154 299 q 1167 544 1167 424 q 1013 792 1167 792 q 858 544 858 792 q 865 362 858 424 q 895 256 871 300 q 974 183 919 211 l 974 0 l 590 0 l 590 197 l 750 197 q 610 338 660 249 q 561 544 561 426 q 615 770 561 668 q 770 933 668 872 q 1013 994 872 994 z \\\"},\\\"Ὼ\\\":{\\\"ha\\\":1360,\\\"x_min\\\":100,\\\"x_max\\\":1332,\\\"o\\\":\\\"m 415 653 l 240 624 l 100 967 l 363 1021 l 415 653 m 881 994 q 1123 933 1021 994 q 1278 770 1225 872 q 1332 544 1332 668 q 1283 338 1332 426 q 1143 197 1233 249 l 1303 197 l 1303 0 l 919 0 l 919 183 q 998 254 974 210 q 1028 361 1022 299 q 1035 544 1035 424 q 881 792 1035 792 q 726 544 726 792 q 733 362 726 424 q 763 256 739 300 q 842 183 788 211 l 842 0 l 458 0 l 458 197 l 618 197 q 478 338 528 249 q 429 544 429 426 q 483 770 429 668 q 638 933 536 872 q 881 994 740 994 z \\\"},\\\"Ώ\\\":{\\\"ha\\\":1275,\\\"x_min\\\":100,\\\"x_max\\\":1247,\\\"o\\\":\\\"m 415 967 l 275 624 l 100 653 l 153 1021 l 415 967 m 796 994 q 1038 933 936 994 q 1194 770 1140 872 q 1247 544 1247 668 q 1198 338 1247 426 q 1058 197 1149 249 l 1218 197 l 1218 0 l 835 0 l 835 183 q 913 254 889 210 q 944 361 938 299 q 950 544 950 424 q 796 792 950 792 q 642 544 642 792 q 648 362 642 424 q 678 256 654 300 q 757 183 703 211 l 757 0 l 374 0 l 374 197 l 533 197 q 394 338 443 249 q 344 544 344 426 q 398 770 344 668 q 553 933 451 872 q 796 994 656 994 z \\\"},\\\"ῼ\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 722 933 619 994 q 877 770 824 872 q 931 544 931 668 q 881 338 931 426 q 742 197 832 249 l 901 197 l 901 0 l 518 0 l 518 183 q 597 254 572 210 q 627 361 621 299 q 633 544 633 424 q 479 792 633 792 q 325 544 325 792 q 331 362 325 424 q 362 256 338 300 q 440 183 386 211 l 440 0 l 57 0 l 57 197 l 217 197 q 77 338 126 249 q 28 544 28 426 q 81 770 28 668 q 237 933 135 872 q 479 994 339 994 m 586 -294 q 438 -240 490 -294 q 386 -99 386 -186 l 386 -61 l 571 -61 l 571 -93 q 624 -149 571 -149 q 690 -129 654 -149 l 753 -240 q 586 -294 685 -294 z \\\"},\\\"ᾨ\\\":{\\\"ha\\\":1290,\\\"x_min\\\":100,\\\"x_max\\\":1263,\\\"o\\\":\\\"m 228 990 q 319 954 283 990 q 356 864 356 918 q 347 810 356 835 q 318 742 339 785 l 249 601 l 118 601 l 153 760 q 100 864 100 800 q 136 953 100 917 q 228 990 172 990 m 811 994 q 1053 933 951 994 q 1209 770 1156 872 q 1263 544 1263 668 q 1213 338 1263 426 q 1074 197 1164 249 l 1233 197 l 1233 0 l 850 0 l 850 183 q 928 254 904 210 q 959 361 953 299 q 965 544 965 424 q 811 792 965 792 q 657 544 657 792 q 663 362 657 424 q 694 256 669 300 q 772 183 718 211 l 772 0 l 389 0 l 389 197 l 549 197 q 409 338 458 249 q 360 544 360 426 q 413 770 360 668 q 569 933 467 872 q 811 994 671 994 m 918 -294 q 770 -240 822 -294 q 718 -99 718 -186 l 718 -61 l 903 -61 l 903 -93 q 956 -149 903 -149 q 1022 -129 986 -149 l 1085 -240 q 918 -294 1017 -294 z \\\"},\\\"ᾩ\\\":{\\\"ha\\\":1342,\\\"x_min\\\":100,\\\"x_max\\\":1314,\\\"o\\\":\\\"m 228 990 q 319 953 283 990 q 356 864 356 917 q 303 760 356 800 l 338 601 l 207 601 l 138 742 q 108 810 117 785 q 100 864 100 835 q 136 954 100 918 q 228 990 172 990 m 863 994 q 1105 933 1003 994 q 1260 770 1207 872 q 1314 544 1314 668 q 1265 338 1314 426 q 1125 197 1215 249 l 1285 197 l 1285 0 l 901 0 l 901 183 q 980 254 956 210 q 1010 361 1004 299 q 1017 544 1017 424 q 863 792 1017 792 q 708 544 708 792 q 715 362 708 424 q 745 256 721 300 q 824 183 769 211 l 824 0 l 440 0 l 440 197 l 600 197 q 460 338 510 249 q 411 544 411 426 q 465 770 411 668 q 620 933 518 872 q 863 994 722 994 m 969 -294 q 822 -240 874 -294 q 769 -99 769 -186 l 769 -61 l 954 -61 l 954 -93 q 1007 -149 954 -149 q 1074 -129 1038 -149 l 1136 -240 q 969 -294 1068 -294 z \\\"},\\\"ᾪ\\\":{\\\"ha\\\":1639,\\\"x_min\\\":100,\\\"x_max\\\":1611,\\\"o\\\":\\\"m 153 760 q 100 864 100 800 q 136 953 100 917 q 228 990 172 990 q 319 954 283 990 q 356 864 356 918 q 347 810 356 835 q 318 742 339 785 l 249 601 l 118 601 l 153 760 m 369 932 l 590 986 l 653 624 l 503 594 l 369 932 m 1160 994 q 1402 933 1300 994 q 1558 770 1504 872 q 1611 544 1611 668 q 1562 338 1611 426 q 1422 197 1513 249 l 1582 197 l 1582 0 l 1199 0 l 1199 183 q 1277 254 1253 210 q 1308 361 1301 299 q 1314 544 1314 424 q 1160 792 1314 792 q 1006 544 1006 792 q 1012 362 1006 424 q 1042 256 1018 300 q 1121 183 1067 211 l 1121 0 l 738 0 l 738 197 l 897 197 q 758 338 807 249 q 708 544 708 426 q 762 770 708 668 q 917 933 815 872 q 1160 994 1019 994 m 1267 -294 q 1119 -240 1171 -294 q 1067 -99 1067 -186 l 1067 -61 l 1251 -61 l 1251 -93 q 1304 -149 1251 -149 q 1371 -129 1335 -149 l 1433 -240 q 1267 -294 1365 -294 z \\\"},\\\"ᾫ\\\":{\\\"ha\\\":1611,\\\"x_min\\\":100,\\\"x_max\\\":1583,\\\"o\\\":\\\"m 228 990 q 319 953 283 990 q 356 864 356 917 q 303 760 356 800 l 338 601 l 207 601 l 138 742 q 108 810 117 785 q 100 864 100 835 q 136 954 100 918 q 228 990 172 990 m 653 624 l 503 594 l 369 932 l 590 986 l 653 624 m 1132 994 q 1374 933 1272 994 q 1530 770 1476 872 q 1583 544 1583 668 q 1534 338 1583 426 q 1394 197 1485 249 l 1554 197 l 1554 0 l 1171 0 l 1171 183 q 1249 254 1225 210 q 1280 361 1274 299 q 1286 544 1286 424 q 1132 792 1286 792 q 978 544 978 792 q 984 362 978 424 q 1015 256 990 300 q 1093 183 1039 211 l 1093 0 l 710 0 l 710 197 l 869 197 q 730 338 779 249 q 681 544 681 426 q 734 770 681 668 q 890 933 788 872 q 1132 994 992 994 m 1239 -294 q 1091 -240 1143 -294 q 1039 -99 1039 -186 l 1039 -61 l 1224 -61 l 1224 -93 q 1276 -149 1224 -149 q 1343 -129 1307 -149 l 1406 -240 q 1239 -294 1338 -294 z \\\"},\\\"ᾬ\\\":{\\\"ha\\\":1576,\\\"x_min\\\":100,\\\"x_max\\\":1549,\\\"o\\\":\\\"m 153 760 q 100 864 100 800 q 136 953 100 917 q 228 990 172 990 q 319 954 283 990 q 356 864 356 918 q 347 810 356 835 q 318 742 339 785 l 249 601 l 118 601 l 153 760 m 369 624 l 432 986 l 653 932 l 519 594 l 369 624 m 1097 994 q 1340 933 1238 994 q 1495 770 1442 872 q 1549 544 1549 668 q 1499 338 1549 426 q 1360 197 1450 249 l 1519 197 l 1519 0 l 1136 0 l 1136 183 q 1215 254 1190 210 q 1245 361 1239 299 q 1251 544 1251 424 q 1097 792 1251 792 q 943 544 943 792 q 949 362 943 424 q 980 256 956 300 q 1058 183 1004 211 l 1058 0 l 675 0 l 675 197 l 835 197 q 695 338 744 249 q 646 544 646 426 q 699 770 646 668 q 855 933 753 872 q 1097 994 957 994 m 1204 -294 q 1056 -240 1108 -294 q 1004 -99 1004 -186 l 1004 -61 l 1189 -61 l 1189 -93 q 1242 -149 1189 -149 q 1308 -129 1272 -149 l 1371 -240 q 1204 -294 1303 -294 z \\\"},\\\"ᾭ\\\":{\\\"ha\\\":1590,\\\"x_min\\\":100,\\\"x_max\\\":1563,\\\"o\\\":\\\"m 228 990 q 319 953 283 990 q 356 864 356 917 q 303 760 356 800 l 338 601 l 207 601 l 138 742 q 108 810 117 785 q 100 864 100 835 q 136 954 100 918 q 228 990 172 990 m 667 932 l 533 594 l 383 624 l 446 986 l 667 932 m 1111 994 q 1353 933 1251 994 q 1509 770 1456 872 q 1563 544 1563 668 q 1513 338 1563 426 q 1374 197 1464 249 l 1533 197 l 1533 0 l 1150 0 l 1150 183 q 1228 254 1204 210 q 1259 361 1253 299 q 1265 544 1265 424 q 1111 792 1265 792 q 957 544 957 792 q 963 362 957 424 q 994 256 969 300 q 1072 183 1018 211 l 1072 0 l 689 0 l 689 197 l 849 197 q 709 338 758 249 q 660 544 660 426 q 713 770 660 668 q 869 933 767 872 q 1111 994 971 994 m 1218 -294 q 1070 -240 1122 -294 q 1018 -99 1018 -186 l 1018 -61 l 1203 -61 l 1203 -93 q 1256 -149 1203 -149 q 1322 -129 1286 -149 l 1385 -240 q 1218 -294 1317 -294 z \\\"},\\\"ᾮ\\\":{\\\"ha\\\":1492,\\\"x_min\\\":100,\\\"x_max\\\":1464,\\\"o\\\":\\\"m 460 742 q 410 749 431 742 q 368 771 390 756 q 330 795 342 789 q 303 801 318 801 q 263 788 278 801 q 229 742 247 774 l 100 804 q 180 940 129 886 q 296 993 231 993 q 348 986 326 993 q 393 963 369 979 q 430 940 417 946 q 457 933 443 933 q 496 947 481 933 q 529 993 511 961 l 658 931 q 578 794 629 847 q 460 742 526 742 m 321 499 q 251 603 251 533 q 288 692 251 656 q 379 729 324 729 q 471 693 435 729 q 507 603 507 657 q 497 547 507 572 q 465 481 488 521 l 428 414 l 307 414 l 321 499 m 1013 994 q 1255 933 1153 994 q 1410 770 1357 872 q 1464 544 1464 668 q 1415 338 1464 426 q 1275 197 1365 249 l 1435 197 l 1435 0 l 1051 0 l 1051 183 q 1130 254 1106 210 q 1160 361 1154 299 q 1167 544 1167 424 q 1013 792 1167 792 q 858 544 858 792 q 865 362 858 424 q 895 256 871 300 q 974 183 919 211 l 974 0 l 590 0 l 590 197 l 750 197 q 610 338 660 249 q 561 544 561 426 q 615 770 561 668 q 770 933 668 872 q 1013 994 872 994 m 1119 -294 q 972 -240 1024 -294 q 919 -99 919 -186 l 919 -61 l 1104 -61 l 1104 -93 q 1157 -149 1104 -149 q 1224 -129 1188 -149 l 1286 -240 q 1119 -294 1218 -294 z \\\"},\\\"ᾯ\\\":{\\\"ha\\\":1492,\\\"x_min\\\":100,\\\"x_max\\\":1464,\\\"o\\\":\\\"m 460 742 q 410 749 431 742 q 368 771 390 756 q 330 795 342 789 q 303 801 318 801 q 263 788 278 801 q 229 742 247 774 l 100 804 q 180 940 129 886 q 296 993 231 993 q 348 986 326 993 q 393 963 369 979 q 430 940 417 946 q 457 933 443 933 q 496 947 481 933 q 529 993 511 961 l 658 931 q 578 794 629 847 q 460 742 526 742 m 331 414 l 293 481 q 261 547 271 521 q 251 603 251 572 q 288 693 251 657 q 379 729 324 729 q 471 692 435 729 q 507 603 507 656 q 440 499 507 535 l 451 414 l 331 414 m 1013 994 q 1255 933 1153 994 q 1410 770 1357 872 q 1464 544 1464 668 q 1415 338 1464 426 q 1275 197 1365 249 l 1435 197 l 1435 0 l 1051 0 l 1051 183 q 1130 254 1106 210 q 1160 361 1154 299 q 1167 544 1167 424 q 1013 792 1167 792 q 858 544 858 792 q 865 362 858 424 q 895 256 871 300 q 974 183 919 211 l 974 0 l 590 0 l 590 197 l 750 197 q 610 338 660 249 q 561 544 561 426 q 615 770 561 668 q 770 933 668 872 q 1013 994 872 994 m 1119 -294 q 972 -240 1024 -294 q 919 -99 919 -186 l 919 -61 l 1104 -61 l 1104 -93 q 1157 -149 1104 -149 q 1224 -129 1188 -149 l 1286 -240 q 1119 -294 1218 -294 z \\\"},\\\"α\\\":{\\\"ha\\\":832,\\\"x_min\\\":24,\\\"x_max\\\":818,\\\"o\\\":\\\"m 343 769 q 485 723 431 769 q 557 597 539 676 l 572 742 l 803 742 l 694 369 l 732 247 q 764 192 743 210 q 818 172 785 175 l 732 -26 q 611 13 656 -18 q 551 103 567 43 l 543 136 q 450 11 506 50 q 314 -28 394 -28 q 103 75 182 -28 q 24 365 24 178 q 63 575 24 483 q 174 718 101 667 q 343 769 246 769 m 385 574 q 322 522 346 574 q 297 365 297 471 q 322 215 297 261 q 381 168 346 168 q 447 215 422 168 q 492 382 472 261 q 448 533 471 492 q 385 574 425 574 z \\\"},\\\"β\\\":{\\\"ha\\\":847,\\\"x_min\\\":58,\\\"x_max\\\":828,\\\"o\\\":\\\"m 564 564 q 750 493 672 553 q 828 292 828 433 q 788 126 828 199 q 676 13 747 54 q 511 -28 604 -28 q 321 26 404 -28 l 321 -278 l 58 -315 l 58 763 q 103 923 58 856 q 228 1026 149 990 q 408 1061 308 1061 q 592 1026 515 1061 q 708 931 668 992 q 747 794 747 871 q 702 647 747 707 q 564 564 657 588 m 426 179 q 518 213 485 179 q 551 319 551 247 q 513 432 551 401 q 413 463 475 463 l 368 463 l 382 642 l 394 642 q 459 674 438 642 q 481 767 481 706 q 403 874 481 874 q 342 847 364 874 q 321 765 321 819 l 321 199 q 426 179 363 179 z \\\"},\\\"γ\\\":{\\\"ha\\\":726,\\\"x_min\\\":-35,\\\"x_max\\\":747,\\\"o\\\":\\\"m 211 769 q 365 268 322 644 l 476 768 l 747 708 l 496 43 q 464 -60 474 -15 q 454 -154 454 -106 q 468 -292 454 -214 l 249 -315 q 214 -226 225 -267 q 203 -144 203 -186 q 236 18 203 -76 q 110 415 186 235 q -35 686 35 596 l 211 769 z \\\"},\\\"δ\\\":{\\\"ha\\\":800,\\\"x_min\\\":24,\\\"x_max\\\":776,\\\"o\\\":\\\"m 478 735 q 707 585 638 672 q 776 349 776 497 q 730 146 776 231 q 599 17 683 61 q 400 -28 514 -28 q 124 69 224 -28 q 24 336 24 165 q 238 635 24 538 q 125 728 153 683 q 97 836 97 774 q 178 998 97 935 q 428 1061 260 1061 q 585 1036 514 1061 q 704 971 657 1011 l 583 832 q 443 876 513 876 q 356 828 356 876 q 363 797 356 810 q 397 771 371 785 q 478 735 422 757 m 399 169 q 471 212 447 169 q 494 350 494 254 q 486 452 494 417 q 452 514 478 488 q 372 568 426 540 q 316 476 329 525 q 303 350 303 426 q 326 212 303 254 q 399 169 349 169 z \\\"},\\\"ε\\\":{\\\"ha\\\":675,\\\"x_min\\\":21,\\\"x_max\\\":682,\\\"o\\\":\\\"m 364 769 q 663 676 540 769 l 556 540 q 478 575 514 564 q 403 586 443 586 q 347 571 368 586 q 325 528 325 556 q 344 479 325 497 q 404 461 364 461 l 501 461 l 476 294 l 393 294 q 324 277 346 294 q 303 229 303 260 q 404 161 303 161 q 481 173 442 161 q 571 213 519 185 l 682 63 q 358 -28 558 -28 q 115 33 208 -28 q 21 204 21 93 q 226 394 21 369 q 49 564 49 431 q 135 714 49 658 q 364 769 222 769 z \\\"},\\\"ζ\\\":{\\\"ha\\\":608,\\\"x_min\\\":14,\\\"x_max\\\":636,\\\"o\\\":\\\"m 636 897 q 367 606 439 731 q 296 368 296 481 q 329 265 296 303 q 451 188 363 226 q 584 101 542 147 q 626 -29 626 54 q 560 -189 626 -121 q 354 -315 494 -257 l 256 -158 q 326 -106 306 -126 q 347 -56 347 -85 q 330 -12 347 -29 q 254 32 313 4 q 110 117 161 76 q 37 213 60 157 q 14 356 14 268 q 110 615 14 483 q 403 872 207 747 q 322 851 372 860 q 226 842 271 842 l 39 842 l 68 1033 l 600 1033 l 636 897 z \\\"},\\\"η\\\":{\\\"ha\\\":792,\\\"x_min\\\":38,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 710 636 769 q 743 543 743 651 l 743 -315 l 468 -287 l 468 497 q 458 554 468 539 q 426 569 447 569 q 339 503 382 569 l 339 0 l 64 0 l 64 551 q 38 728 64 650 l 292 761 q 322 669 310 733 q 425 746 372 722 q 543 769 478 769 z \\\"},\\\"θ\\\":{\\\"ha\\\":772,\\\"x_min\\\":24,\\\"x_max\\\":749,\\\"o\\\":\\\"m 386 1061 q 656 925 563 1061 q 749 518 749 789 q 656 108 749 244 q 386 -28 564 -28 q 116 108 208 -28 q 24 518 24 244 q 117 925 24 789 q 386 1061 210 1061 m 386 869 q 326 849 349 869 q 290 768 303 828 q 275 593 278 708 l 494 593 q 480 768 492 708 q 446 849 468 828 q 386 869 424 869 m 386 164 q 444 186 422 164 q 478 269 465 208 q 494 446 492 331 l 275 446 q 292 269 278 331 q 328 186 306 208 q 386 164 350 164 z \\\"},\\\"ι\\\":{\\\"ha\\\":388,\\\"x_min\\\":49,\\\"x_max\\\":381,\\\"o\\\":\\\"m 324 281 q 336 209 324 233 q 381 168 349 185 l 303 -28 q 114 55 179 -10 q 49 244 49 119 l 49 742 l 324 742 l 324 281 z \\\"},\\\"κ\\\":{\\\"ha\\\":789,\\\"x_min\\\":38,\\\"x_max\\\":810,\\\"o\\\":\\\"m 629 397 l 756 219 q 779 194 767 203 q 810 179 792 185 l 715 -28 q 583 10 638 -21 q 490 117 529 42 l 344 390 l 557 767 l 796 671 l 629 397 m 292 761 q 327 655 315 717 q 339 485 339 593 l 339 0 l 64 0 l 64 551 q 56 644 64 594 q 38 728 49 694 l 292 761 z \\\"},\\\"λ\\\":{\\\"ha\\\":768,\\\"x_min\\\":0,\\\"x_max\\\":796,\\\"o\\\":\\\"m 111 1058 q 340 1006 253 1040 q 487 896 428 971 q 578 686 546 821 q 685 281 643 407 q 796 56 726 156 l 528 -28 q 435 201 467 82 q 374 529 403 319 l 274 -28 l 0 33 l 219 742 l 308 742 q 260 814 286 789 q 194 853 235 839 q 81 876 154 867 l 111 1058 z \\\"},\\\"μ\\\":{\\\"ha\\\":804,\\\"x_min\\\":58,\\\"x_max\\\":767,\\\"o\\\":\\\"m 515 -28 q 498 17 504 -4 q 485 79 492 39 q 358 -8 429 -8 q 295 3 324 -8 q 242 44 267 14 q 298 -58 281 -14 q 315 -171 315 -101 l 315 -287 l 58 -312 l 58 742 l 333 742 l 333 240 q 379 181 333 181 q 420 196 399 181 q 460 242 442 211 l 460 742 l 735 742 l 735 256 q 767 0 735 110 l 515 -28 z \\\"},\\\"ν\\\":{\\\"ha\\\":726,\\\"x_min\\\":-35,\\\"x_max\\\":747,\\\"o\\\":\\\"m 211 769 q 303 569 263 711 q 361 217 343 426 l 482 768 l 747 708 l 515 0 l 197 0 q -35 686 97 554 l 211 769 z \\\"},\\\"ξ\\\":{\\\"ha\\\":636,\\\"x_min\\\":21,\\\"x_max\\\":671,\\\"o\\\":\\\"m 392 1061 q 547 1040 481 1061 q 671 974 614 1018 l 556 831 q 494 863 521 853 q 433 874 468 874 q 374 850 396 874 q 353 785 353 826 q 378 713 353 739 q 450 688 403 688 l 529 688 l 504 515 l 449 515 q 343 479 383 515 q 303 382 303 443 q 321 302 303 333 q 379 246 339 271 q 496 188 419 221 q 628 101 586 147 q 671 -29 671 54 q 605 -189 671 -121 q 399 -315 539 -257 l 300 -158 q 371 -106 350 -126 q 392 -56 392 -85 q 374 -12 392 -29 q 299 32 357 4 q 144 113 199 78 q 55 206 89 149 q 21 356 21 264 q 251 618 21 567 q 76 826 76 668 q 118 948 76 894 q 232 1031 160 1001 q 392 1061 304 1061 z \\\"},\\\"ο\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 z \\\"},\\\"π\\\":{\\\"ha\\\":864,\\\"x_min\\\":-14,\\\"x_max\\\":840,\\\"o\\\":\\\"m 771 542 l 771 281 q 783 209 771 233 q 828 168 796 185 l 750 -28 q 561 55 626 -10 q 496 244 496 119 l 496 542 l 386 542 l 386 0 l 117 0 l 117 542 q 35 526 69 538 l -14 703 q 81 733 29 724 q 225 742 132 742 l 840 742 l 840 542 l 771 542 z \\\"},\\\"ρ\\\":{\\\"ha\\\":815,\\\"x_min\\\":42,\\\"x_max\\\":785,\\\"o\\\":\\\"m 408 769 q 688 669 590 769 q 785 374 785 568 q 748 167 785 258 q 644 24 711 76 q 489 -28 576 -28 q 395 -8 438 -28 q 317 56 353 11 l 317 -287 l 42 -315 l 42 385 q 133 670 42 571 q 408 769 224 769 m 404 168 q 503 369 503 168 q 478 531 503 489 q 408 574 454 574 q 338 526 358 574 q 317 365 317 479 l 317 228 q 356 181 335 194 q 404 168 376 168 z \\\"},\\\"ς\\\":{\\\"ha\\\":672,\\\"x_min\\\":24,\\\"x_max\\\":679,\\\"o\\\":\\\"m 410 769 q 679 671 568 769 l 565 511 q 435 563 501 563 q 342 522 375 563 q 310 386 310 481 q 323 301 310 335 q 369 242 336 268 q 467 188 403 215 q 598 101 557 147 q 639 -29 639 54 q 573 -189 639 -121 q 367 -315 507 -257 l 268 -158 q 339 -106 318 -126 q 360 -56 360 -85 q 342 -12 360 -29 q 267 32 325 4 q 133 111 185 69 q 53 219 82 153 q 24 386 24 285 q 73 582 24 494 q 210 719 122 669 q 410 769 297 769 z \\\"},\\\"σ\\\":{\\\"ha\\\":851,\\\"x_min\\\":24,\\\"x_max\\\":851,\\\"o\\\":\\\"m 851 546 l 718 554 q 771 472 754 519 q 788 356 788 425 q 741 155 788 242 q 608 20 694 68 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 126 654 24 553 q 435 756 229 756 q 851 742 582 756 l 851 546 m 406 169 q 481 215 457 169 q 506 356 506 260 q 498 489 506 440 q 475 563 490 538 q 371 549 406 563 q 321 495 336 536 q 306 371 306 454 q 329 216 306 263 q 406 169 353 169 z \\\"},\\\"τ\\\":{\\\"ha\\\":688,\\\"x_min\\\":-14,\\\"x_max\\\":688,\\\"o\\\":\\\"m 486 542 l 486 281 q 499 209 486 233 q 543 168 511 185 l 465 -28 q 276 55 342 -10 q 211 244 211 119 l 211 542 l 161 542 q 88 539 111 542 q 35 526 64 536 l -14 703 q 78 733 29 724 q 211 742 128 742 l 688 742 l 688 542 l 486 542 z \\\"},\\\"υ\\\":{\\\"ha\\\":776,\\\"x_min\\\":49,\\\"x_max\\\":742,\\\"o\\\":\\\"m 699 742 q 730 544 718 640 q 742 339 742 447 q 688 131 742 214 q 547 10 633 49 q 358 -28 460 -28 q 136 44 224 -28 q 49 265 49 117 l 49 742 l 324 742 l 324 264 q 338 190 324 211 q 381 169 353 169 q 443 215 419 169 q 467 360 467 261 q 429 742 467 517 l 699 742 z \\\"},\\\"φ\\\":{\\\"ha\\\":1065,\\\"x_min\\\":28,\\\"x_max\\\":1035,\\\"o\\\":\\\"m 1035 376 q 944 93 1035 190 q 660 -25 853 -4 l 660 -287 l 406 -315 l 406 -25 q 122 90 217 -4 q 28 335 28 183 q 113 742 28 529 l 371 742 q 311 532 331 618 q 292 356 292 446 q 317 217 292 264 q 406 157 342 171 l 406 440 q 483 682 406 594 q 710 769 561 769 q 954 669 874 769 q 1035 376 1035 568 m 660 157 q 730 188 706 165 q 763 254 754 211 q 772 374 772 297 q 766 513 772 465 q 747 576 760 560 q 713 592 735 592 q 682 581 693 592 q 665 540 671 569 q 660 453 660 511 l 660 157 z \\\"},\\\"χ\\\":{\\\"ha\\\":708,\\\"x_min\\\":-44,\\\"x_max\\\":743,\\\"o\\\":\\\"m 743 -269 l 469 -315 l 350 42 l 246 -315 l -36 -287 l 214 250 q 74 523 128 429 q -44 685 21 617 l 225 763 q 294 625 271 685 q 356 428 318 565 l 428 761 l 710 733 l 493 257 l 743 -269 z \\\"},\\\"ψ\\\":{\\\"ha\\\":1104,\\\"x_min\\\":49,\\\"x_max\\\":1069,\\\"o\\\":\\\"m 1069 336 q 967 85 1069 178 q 686 -24 864 -7 l 686 -287 l 425 -315 l 425 -25 q 144 75 240 -8 q 49 285 49 158 l 49 742 l 317 742 l 317 299 q 342 208 317 242 q 425 163 367 175 l 425 742 l 686 742 l 686 165 q 774 223 746 179 q 801 343 801 267 q 764 742 801 517 l 1026 742 q 1069 336 1069 544 z \\\"},\\\"ω\\\":{\\\"ha\\\":1072,\\\"x_min\\\":28,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 956 742 q 1044 339 1044 554 q 967 65 1044 157 q 760 -28 890 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 103 64 179 -28 q 28 339 28 156 q 117 742 28 554 l 360 742 q 311 535 328 624 q 294 356 294 447 q 311 213 294 257 q 361 169 328 169 q 398 188 386 169 q 410 264 410 207 l 410 493 l 663 526 l 663 264 q 676 188 663 207 q 715 169 689 169 q 763 213 747 169 q 778 356 778 256 q 761 536 778 447 q 713 742 744 625 l 956 742 z \\\"},\\\"ί\\\":{\\\"ha\\\":388,\\\"x_min\\\":49,\\\"x_max\\\":381,\\\"o\\\":\\\"m 324 281 q 336 209 324 233 q 381 168 349 185 l 303 -28 q 114 55 179 -10 q 49 244 49 119 l 49 742 l 324 742 l 324 281 m 343 1165 l 271 828 l 101 828 l 83 1185 l 343 1165 z \\\"},\\\"ϊ\\\":{\\\"ha\\\":388,\\\"x_min\\\":-117,\\\"x_max\\\":488,\\\"o\\\":\\\"m 324 281 q 336 209 324 233 q 381 168 349 185 l 303 -28 q 114 55 179 -10 q 49 244 49 119 l 49 742 l 324 742 l 324 281 m 15 1136 q 109 1099 71 1136 q 147 1008 147 1061 q 109 917 147 954 q 15 879 71 879 q -78 917 -39 879 q -117 1008 -117 954 q -78 1099 -117 1061 q 15 1136 -39 1136 m 356 1136 q 449 1099 411 1136 q 488 1008 488 1061 q 449 917 488 954 q 356 879 411 879 q 263 917 301 879 q 224 1008 224 954 q 263 1099 224 1061 q 356 1136 301 1136 z \\\"},\\\"ΐ\\\":{\\\"ha\\\":388,\\\"x_min\\\":-151,\\\"x_max\\\":522,\\\"o\\\":\\\"m 324 281 q 336 209 324 233 q 381 168 349 185 l 303 -28 q 114 55 179 -10 q 49 244 49 119 l 49 742 l 324 742 l 324 281 m 318 1329 l 256 1039 l 110 1039 l 94 1346 l 318 1329 m -19 1072 q 74 1035 35 1072 q 113 944 113 997 q 74 853 113 890 q -19 815 35 815 q -113 853 -75 815 q -151 944 -151 890 q -113 1035 -151 997 q -19 1072 -75 1072 m 390 1072 q 483 1035 444 1072 q 522 944 522 997 q 483 853 522 890 q 390 815 444 815 q 297 853 335 815 q 258 944 258 890 q 297 1035 258 997 q 390 1072 335 1072 z \\\"},\\\"ύ\\\":{\\\"ha\\\":776,\\\"x_min\\\":49,\\\"x_max\\\":742,\\\"o\\\":\\\"m 699 742 q 730 544 718 640 q 742 339 742 447 q 688 131 742 214 q 547 10 633 49 q 358 -28 460 -28 q 136 44 224 -28 q 49 265 49 117 l 49 742 l 324 742 l 324 264 q 338 190 324 211 q 381 169 353 169 q 443 215 419 169 q 467 360 467 261 q 429 742 467 517 l 699 742 m 535 1165 l 463 828 l 293 828 l 275 1185 l 535 1165 z \\\"},\\\"ϋ\\\":{\\\"ha\\\":776,\\\"x_min\\\":49,\\\"x_max\\\":742,\\\"o\\\":\\\"m 699 742 q 730 544 718 640 q 742 339 742 447 q 688 131 742 214 q 547 10 633 49 q 358 -28 460 -28 q 136 44 224 -28 q 49 265 49 117 l 49 742 l 324 742 l 324 264 q 338 190 324 211 q 381 169 353 169 q 443 215 419 169 q 467 360 467 261 q 429 742 467 517 l 699 742 m 207 1136 q 301 1099 263 1136 q 339 1008 339 1061 q 301 917 339 954 q 207 879 263 879 q 114 917 153 879 q 75 1008 75 954 q 114 1099 75 1061 q 207 1136 153 1136 m 547 1136 q 641 1099 603 1136 q 679 1008 679 1061 q 641 917 679 954 q 547 879 603 879 q 454 917 493 879 q 415 1008 415 954 q 454 1099 415 1061 q 547 1136 493 1136 z \\\"},\\\"ΰ\\\":{\\\"ha\\\":776,\\\"x_min\\\":40,\\\"x_max\\\":742,\\\"o\\\":\\\"m 699 742 q 730 544 718 640 q 742 339 742 447 q 688 131 742 214 q 547 10 633 49 q 358 -28 460 -28 q 136 44 224 -28 q 49 265 49 117 l 49 742 l 324 742 l 324 264 q 338 190 324 211 q 381 169 353 169 q 443 215 419 169 q 467 360 467 261 q 429 742 467 517 l 699 742 m 510 1329 l 447 1039 l 301 1039 l 286 1346 l 510 1329 m 172 1072 q 265 1035 226 1072 q 304 944 304 997 q 265 853 304 890 q 172 815 226 815 q 78 853 117 815 q 40 944 40 890 q 78 1035 40 997 q 172 1072 117 1072 m 582 1072 q 675 1035 636 1072 q 714 944 714 997 q 675 853 714 890 q 582 815 636 815 q 488 853 526 815 q 450 944 450 890 q 488 1035 450 997 q 582 1072 526 1072 z \\\"},\\\"ό\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 m 563 1165 l 490 828 l 321 828 l 303 1185 l 563 1165 z \\\"},\\\"ώ\\\":{\\\"ha\\\":1072,\\\"x_min\\\":28,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 956 742 q 1044 339 1044 554 q 967 65 1044 157 q 760 -28 890 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 103 64 179 -28 q 28 339 28 156 q 117 742 28 554 l 360 742 q 311 535 328 624 q 294 356 294 447 q 311 213 294 257 q 361 169 328 169 q 398 188 386 169 q 410 264 410 207 l 410 493 l 663 526 l 663 264 q 676 188 663 207 q 715 169 689 169 q 763 213 747 169 q 778 356 778 256 q 761 536 778 447 q 713 742 744 625 l 956 742 m 693 1165 l 621 828 l 451 828 l 433 1185 l 693 1165 z \\\"},\\\"ά\\\":{\\\"ha\\\":832,\\\"x_min\\\":24,\\\"x_max\\\":818,\\\"o\\\":\\\"m 343 769 q 485 723 431 769 q 557 597 539 676 l 572 742 l 803 742 l 694 369 l 732 247 q 764 192 743 210 q 818 172 785 175 l 732 -26 q 611 13 656 -18 q 551 103 567 43 l 543 136 q 450 11 506 50 q 314 -28 394 -28 q 103 75 182 -28 q 24 365 24 178 q 63 575 24 483 q 174 718 101 667 q 343 769 246 769 m 385 574 q 322 522 346 574 q 297 365 297 471 q 322 215 297 261 q 381 168 346 168 q 447 215 422 168 q 492 382 472 261 q 448 533 471 492 q 385 574 425 574 m 550 1165 l 478 828 l 308 828 l 290 1185 l 550 1165 z \\\"},\\\"έ\\\":{\\\"ha\\\":675,\\\"x_min\\\":21,\\\"x_max\\\":682,\\\"o\\\":\\\"m 364 769 q 663 676 540 769 l 556 540 q 478 575 514 564 q 403 586 443 586 q 347 571 368 586 q 325 528 325 556 q 344 479 325 497 q 404 461 364 461 l 501 461 l 476 294 l 393 294 q 324 277 346 294 q 303 229 303 260 q 404 161 303 161 q 481 173 442 161 q 571 213 519 185 l 682 63 q 358 -28 558 -28 q 115 33 208 -28 q 21 204 21 93 q 226 394 21 369 q 49 564 49 431 q 135 714 49 658 q 364 769 222 769 m 521 1165 l 449 828 l 279 828 l 261 1185 l 521 1165 z \\\"},\\\"ή\\\":{\\\"ha\\\":792,\\\"x_min\\\":38,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 710 636 769 q 743 543 743 651 l 743 -315 l 468 -287 l 468 497 q 458 554 468 539 q 426 569 447 569 q 339 503 382 569 l 339 0 l 64 0 l 64 551 q 38 728 64 650 l 292 761 q 322 669 310 733 q 425 746 372 722 q 543 769 478 769 m 557 1165 l 485 828 l 315 828 l 297 1185 l 557 1165 z \\\"},\\\"ͱ\\\":{\\\"ha\\\":664,\\\"x_min\\\":38,\\\"x_max\\\":643,\\\"o\\\":\\\"m 643 272 l 339 272 l 339 0 l 64 0 l 64 551 q 56 644 64 594 q 38 728 49 694 l 292 761 q 327 655 315 717 q 339 485 339 593 l 339 479 l 643 479 l 643 272 z \\\"},\\\"ͳ\\\":{\\\"ha\\\":743,\\\"x_min\\\":-14,\\\"x_max\\\":743,\\\"o\\\":\\\"m 743 542 l 514 542 l 514 -287 l 239 -315 l 239 542 l 161 542 q 88 539 111 542 q 35 526 64 536 l -14 703 q 81 733 29 724 q 225 742 132 742 l 743 742 l 743 542 z \\\"},\\\"ͷ\\\":{\\\"ha\\\":810,\\\"x_min\\\":58,\\\"x_max\\\":803,\\\"o\\\":\\\"m 746 281 q 757 210 746 233 q 803 169 768 186 l 725 -28 q 499 200 499 15 q 564 547 499 317 l 325 0 l 58 0 l 58 742 l 318 742 l 318 514 q 279 247 318 381 l 504 742 l 746 742 l 746 281 z \\\"},\\\"ι\\\":{\\\"ha\\\":558,\\\"x_min\\\":42,\\\"x_max\\\":408,\\\"o\\\":\\\"m 242 -294 q 94 -240 146 -294 q 42 -99 42 -186 l 42 -61 l 226 -61 l 226 -93 q 279 -149 226 -149 q 346 -129 310 -149 l 408 -240 q 242 -294 340 -294 z \\\"},\\\"ͻ\\\":{\\\"ha\\\":714,\\\"x_min\\\":-14,\\\"x_max\\\":690,\\\"o\\\":\\\"m 292 769 q 503 720 413 769 q 642 580 593 671 q 690 365 690 489 q 640 156 690 244 q 496 19 589 67 q 278 -28 403 -28 q 118 -4 186 -28 q -14 64 50 19 l 104 229 q 181 195 149 206 q 258 185 214 185 q 365 226 326 185 q 404 365 404 267 q 265 563 404 563 q 100 511 179 563 l -14 671 q 124 745 54 721 q 292 769 194 769 z \\\"},\\\"ͼ\\\":{\\\"ha\\\":714,\\\"x_min\\\":24,\\\"x_max\\\":728,\\\"o\\\":\\\"m 433 769 q 594 746 528 769 q 728 671 661 722 l 614 511 q 536 551 571 539 q 460 563 501 563 q 310 365 310 563 q 349 226 310 267 q 456 185 388 185 q 533 195 500 185 q 610 229 565 206 l 728 64 q 596 -4 664 19 q 436 -28 528 -28 q 218 19 311 -28 q 74 156 125 67 q 24 365 24 244 q 76 574 24 482 q 222 717 128 665 q 433 769 315 769 m 474 483 q 563 449 528 483 q 597 365 597 415 q 563 282 597 315 q 474 249 528 249 q 385 282 419 249 q 350 365 350 315 q 385 449 350 415 q 474 483 419 483 z \\\"},\\\"ͽ\\\":{\\\"ha\\\":714,\\\"x_min\\\":-14,\\\"x_max\\\":690,\\\"o\\\":\\\"m 292 769 q 503 720 413 769 q 642 580 593 671 q 690 365 690 489 q 640 156 690 244 q 496 19 589 67 q 278 -28 403 -28 q 118 -4 186 -28 q -14 64 50 19 l 104 229 q 181 195 149 206 q 258 185 214 185 q 365 226 326 185 q 404 365 404 267 q 265 563 404 563 q 100 511 179 563 l -14 671 q 124 745 54 721 q 292 769 194 769 m 244 483 q 333 449 299 483 q 368 365 368 415 q 333 282 368 315 q 244 249 299 249 q 156 282 190 249 q 121 365 121 315 q 156 449 121 415 q 244 483 190 483 z \\\"},\\\"ϙ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 788 369 q 719 122 788 222 q 526 -12 650 21 l 526 -287 l 285 -315 l 285 -14 q 92 118 161 19 q 24 372 24 217 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 q 685 665 583 769 q 788 369 788 561 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 z \\\"},\\\"ϛ\\\":{\\\"ha\\\":679,\\\"x_min\\\":24,\\\"x_max\\\":686,\\\"o\\\":\\\"m 268 -158 q 339 -105 318 -125 q 360 -54 360 -85 q 339 -10 360 -26 q 247 42 318 7 q 131 106 172 79 q 57 192 90 133 q 24 347 24 251 q 91 568 24 494 q 275 672 158 642 q 352 691 289 675 q 440 738 415 707 q 464 821 464 768 l 686 801 q 665 650 686 701 q 606 576 643 599 q 490 528 568 554 q 383 486 418 503 q 329 440 349 469 q 310 360 310 411 q 326 285 310 314 q 374 236 343 256 q 467 188 406 217 q 558 137 525 160 q 615 75 592 114 q 639 -25 639 36 q 573 -189 639 -122 q 367 -315 507 -256 l 268 -158 z \\\"},\\\"ϝ\\\":{\\\"ha\\\":635,\\\"x_min\\\":49,\\\"x_max\\\":649,\\\"o\\\":\\\"m 385 536 q 315 457 315 536 l 315 360 l 400 360 q 579 315 513 360 l 517 142 q 456 158 485 153 q 386 164 426 164 l 315 164 l 315 -278 l 49 -317 l 49 465 q 124 664 49 586 q 342 742 199 742 l 649 742 l 622 536 l 385 536 z \\\"},\\\"ϟ\\\":{\\\"ha\\\":714,\\\"x_min\\\":0,\\\"x_max\\\":714,\\\"o\\\":\\\"m 714 513 l 596 265 q 528 108 550 171 q 493 -28 507 44 l 249 31 q 290 198 250 106 q 417 426 331 290 l 67 325 l 0 501 l 128 768 q 195 926 174 863 q 231 1061 217 989 l 475 1003 q 431 828 474 925 q 294 588 388 732 l 650 690 l 714 513 z \\\"},\\\"ϡ\\\":{\\\"ha\\\":933,\\\"x_min\\\":-28,\\\"x_max\\\":910,\\\"o\\\":\\\"m 165 1061 q 587 858 425 975 q 829 562 749 740 q 910 121 910 383 q 893 -98 910 24 q 851 -314 876 -219 l 638 -283 q 681 114 681 -81 q 669 296 681 210 l 539 0 l 299 0 l 586 550 q 543 610 567 582 l 218 0 l -28 0 l 369 758 q 90 894 261 825 l 165 1061 z \\\"},\\\"ϗ\\\":{\\\"ha\\\":768,\\\"x_min\\\":7,\\\"x_max\\\":761,\\\"o\\\":\\\"m 703 281 q 714 199 703 225 q 761 153 725 172 l 761 -35 q 682 -253 761 -179 q 457 -328 603 -328 q 328 -311 388 -328 q 231 -265 269 -294 l 319 -106 q 376 -126 350 -119 q 439 -133 403 -133 q 505 -114 482 -133 q 528 -57 528 -94 l 529 44 q 456 200 456 96 q 556 547 456 308 l 251 -18 l 64 42 l 64 460 q 53 531 64 507 q 7 571 42 554 l 85 768 q 311 540 311 725 q 211 193 311 432 l 515 758 l 703 699 l 703 281 z \\\"},\\\"ϐ\\\":{\\\"ha\\\":783,\\\"x_min\\\":24,\\\"x_max\\\":767,\\\"o\\\":\\\"m 551 593 q 706 524 644 593 q 767 326 767 454 q 719 139 767 219 q 587 15 672 58 q 390 -28 501 -28 q 113 104 203 -28 q 24 476 24 236 q 76 785 24 653 q 222 989 128 917 q 436 1061 315 1061 q 630 999 563 1061 q 697 843 697 936 q 643 690 697 754 q 464 582 589 626 q 551 593 510 593 m 413 872 q 340 814 371 872 q 299 621 308 756 l 329 631 q 461 817 461 674 q 448 858 461 843 q 413 872 435 872 m 392 167 q 485 318 485 167 q 458 435 485 394 q 389 475 432 475 q 319 461 364 475 l 294 453 q 324 227 299 288 q 392 167 349 167 z \\\"},\\\"ϑ\\\":{\\\"ha\\\":771,\\\"x_min\\\":28,\\\"x_max\\\":757,\\\"o\\\":\\\"m 757 557 l 711 557 q 676 226 711 353 q 560 35 642 99 q 338 -28 478 -28 q 122 43 201 -28 q 42 265 42 114 l 42 493 l 303 493 l 303 238 q 315 181 303 199 q 351 164 326 164 q 403 197 385 164 q 429 315 421 231 q 438 554 438 399 l 438 556 l 335 556 q 103 617 178 556 q 28 793 28 679 q 66 926 28 864 q 174 1024 104 988 q 336 1061 244 1061 q 697 731 640 1061 l 757 731 l 757 557 m 429 731 q 395 840 418 810 q 335 869 372 869 q 283 851 301 869 q 264 800 264 832 q 284 749 264 768 q 344 731 304 731 l 429 731 z \\\"},\\\"ϕ\\\":{\\\"ha\\\":950,\\\"x_min\\\":19,\\\"x_max\\\":931,\\\"o\\\":\\\"m 931 375 q 841 115 931 204 q 611 8 751 25 l 610 -287 l 335 -315 l 336 8 q 109 110 199 25 q 19 367 19 196 q 108 626 19 536 q 335 732 196 715 l 335 1033 l 610 1061 l 610 733 q 840 633 750 718 q 931 375 931 547 m 582 174 q 648 228 626 181 q 669 375 669 275 q 647 519 669 476 q 582 569 625 561 l 582 174 m 281 367 q 364 174 281 197 l 364 567 q 301 513 322 560 q 281 367 281 467 z \\\"},\\\"ϖ\\\":{\\\"ha\\\":1067,\\\"x_min\\\":-7,\\\"x_max\\\":1060,\\\"o\\\":\\\"m 1060 556 l 950 556 q 1031 311 1031 435 q 957 62 1031 151 q 760 -28 883 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 115 61 188 -28 q 42 311 42 150 q 122 554 42 436 q 42 540 76 553 l -7 703 q 88 733 36 724 q 232 742 139 742 l 1060 742 l 1060 556 m 764 342 q 731 556 764 449 l 342 556 q 308 342 308 449 q 322 210 308 251 q 365 169 336 169 q 399 188 388 169 q 410 264 410 207 l 410 396 l 663 429 l 663 264 q 675 189 663 208 q 708 169 688 169 q 751 209 739 169 q 764 342 764 249 z \\\"},\\\"ϰ\\\":{\\\"ha\\\":767,\\\"x_min\\\":7,\\\"x_max\\\":760,\\\"o\\\":\\\"m 703 281 q 714 210 703 233 q 760 169 725 186 l 682 -28 q 456 200 456 15 q 556 547 456 308 l 251 -18 l 64 42 l 64 460 q 53 531 64 507 q 7 571 42 554 l 85 768 q 311 540 311 725 q 211 193 311 432 l 515 758 l 703 699 l 703 281 z \\\"},\\\"ϱ\\\":{\\\"ha\\\":815,\\\"x_min\\\":42,\\\"x_max\\\":785,\\\"o\\\":\\\"m 486 -83 q 642 -141 589 -99 q 715 -269 694 -183 l 482 -315 q 458 -280 474 -292 q 413 -260 443 -268 q 317 -244 382 -253 q 110 -152 178 -226 q 42 72 42 -78 l 42 385 q 133 670 42 571 q 408 769 224 769 q 687 674 589 769 q 785 401 785 578 q 747 215 785 300 q 642 78 710 129 q 489 28 575 28 q 395 47 438 28 q 317 111 353 67 l 317 24 q 333 -29 317 -10 q 384 -61 349 -49 q 486 -83 419 -74 m 411 574 q 338 527 360 574 q 317 365 317 481 l 317 283 q 356 237 335 250 q 404 224 376 224 q 476 267 449 224 q 503 397 503 310 q 478 536 503 499 q 411 574 454 574 z \\\"},\\\"ϲ\\\":{\\\"ha\\\":714,\\\"x_min\\\":24,\\\"x_max\\\":728,\\\"o\\\":\\\"m 433 769 q 594 746 528 769 q 728 671 661 722 l 614 511 q 536 551 571 539 q 460 563 501 563 q 310 365 310 563 q 349 226 310 267 q 456 185 388 185 q 533 195 500 185 q 610 229 565 206 l 728 64 q 596 -4 664 19 q 436 -28 528 -28 q 218 19 311 -28 q 74 156 125 67 q 24 365 24 244 q 76 574 24 482 q 222 717 128 665 q 433 769 315 769 z \\\"},\\\"ϳ\\\":{\\\"ha\\\":392,\\\"x_min\\\":-97,\\\"x_max\\\":350,\\\"o\\\":\\\"m 333 107 q 244 -169 333 -74 q -3 -315 156 -264 l -97 -115 q -11 -67 -43 -90 q 40 -6 21 -43 q 58 90 58 32 l 58 742 l 333 742 l 333 107 m 196 1151 q 306 1109 263 1151 q 350 1004 350 1067 q 306 899 350 942 q 196 857 263 857 q 85 899 129 857 q 42 1004 42 942 q 85 1109 42 1067 q 196 1151 129 1151 z \\\"},\\\"ϵ\\\":{\\\"ha\\\":679,\\\"x_min\\\":24,\\\"x_max\\\":679,\\\"o\\\":\\\"m 431 167 q 498 178 467 167 q 565 218 529 190 l 679 64 q 560 -4 622 19 q 421 -28 497 -28 q 209 22 299 -28 q 72 160 119 71 q 24 365 24 250 q 72 574 24 482 q 207 717 119 665 q 410 769 294 769 q 679 671 568 769 l 565 524 q 428 575 501 575 q 335 545 368 575 q 299 449 303 515 l 542 449 l 542 304 l 299 304 q 338 199 301 231 q 431 167 374 167 z \\\"},\\\"ϸ\\\":{\\\"ha\\\":825,\\\"x_min\\\":58,\\\"x_max\\\":801,\\\"o\\\":\\\"m 518 769 q 731 666 660 769 q 801 374 801 563 q 765 167 801 258 q 660 24 728 76 q 506 -28 593 -28 q 333 46 400 -28 l 333 -287 l 58 -315 l 58 1033 l 333 1061 l 333 683 q 424 749 375 729 q 518 769 472 769 m 415 168 q 519 369 519 168 q 508 499 519 456 q 476 558 496 543 q 425 572 457 572 q 333 503 372 572 l 333 219 q 371 180 351 192 q 415 168 390 168 z \\\"},\\\"ϻ\\\":{\\\"ha\\\":933,\\\"x_min\\\":-11,\\\"x_max\\\":919,\\\"o\\\":\\\"m 919 0 l 661 0 l 656 214 q 654 299 654 243 q 667 507 654 394 l 576 71 l 357 71 l 265 507 q 278 310 278 403 q 275 214 278 281 l 244 -299 l -11 -315 l 75 742 l 390 742 l 467 294 l 539 742 l 857 742 l 919 0 z \\\"},\\\"ϼ\\\":{\\\"ha\\\":815,\\\"x_min\\\":-21,\\\"x_max\\\":785,\\\"o\\\":\\\"m 489 -28 q 395 -8 438 -28 q 317 56 353 11 l 317 -64 l 499 -64 l 499 -211 l 317 -211 l 317 -287 l 42 -315 l 42 -211 l -21 -211 l -21 -64 l 42 -64 l 42 385 q 133 670 42 571 q 408 769 224 769 q 688 669 590 769 q 785 374 785 568 q 748 167 785 258 q 644 24 711 76 q 489 -28 576 -28 m 408 574 q 338 526 358 574 q 317 365 317 479 l 317 228 q 356 181 335 194 q 404 168 376 168 q 503 369 503 168 q 478 531 503 489 q 408 574 454 574 z \\\"},\\\"ἀ\\\":{\\\"ha\\\":832,\\\"x_min\\\":24,\\\"x_max\\\":818,\\\"o\\\":\\\"m 343 769 q 485 723 431 769 q 557 597 539 676 l 572 742 l 803 742 l 694 369 l 732 247 q 764 192 743 210 q 818 172 785 175 l 732 -26 q 611 13 656 -18 q 551 103 567 43 l 543 136 q 450 11 506 50 q 314 -28 394 -28 q 103 75 182 -28 q 24 365 24 178 q 63 575 24 483 q 174 718 101 667 q 343 769 246 769 m 385 574 q 322 522 346 574 q 297 365 297 471 q 322 215 297 261 q 381 168 346 168 q 447 215 422 168 q 492 382 472 261 q 448 533 471 492 q 385 574 425 574 z \\\"},\\\"ἁ\\\":{\\\"ha\\\":832,\\\"x_min\\\":24,\\\"x_max\\\":818,\\\"o\\\":\\\"m 343 769 q 485 723 431 769 q 557 597 539 676 l 572 742 l 803 742 l 694 369 l 732 247 q 764 192 743 210 q 818 172 785 175 l 732 -26 q 611 13 656 -18 q 551 103 567 43 l 543 136 q 450 11 506 50 q 314 -28 394 -28 q 103 75 182 -28 q 24 365 24 178 q 63 575 24 483 q 174 718 101 667 q 343 769 246 769 m 385 574 q 322 522 346 574 q 297 365 297 471 q 322 215 297 261 q 381 168 346 168 q 447 215 422 168 q 492 382 472 261 q 448 533 471 492 q 385 574 425 574 m 351 1192 q 443 1155 407 1192 q 479 1065 479 1118 q 426 961 479 1001 l 461 803 l 331 803 l 261 943 q 232 1011 240 986 q 224 1065 224 1036 q 260 1156 224 1119 q 351 1192 296 1192 z \\\"},\\\"ἂ\\\":{\\\"ha\\\":832,\\\"x_min\\\":24,\\\"x_max\\\":818,\\\"o\\\":\\\"m 343 769 q 485 723 431 769 q 557 597 539 676 l 572 742 l 803 742 l 694 369 l 732 247 q 764 192 743 210 q 818 172 785 175 l 732 -26 q 611 13 656 -18 q 551 103 567 43 l 543 136 q 450 11 506 50 q 314 -28 394 -28 q 103 75 182 -28 q 24 365 24 178 q 63 575 24 483 q 174 718 101 667 q 343 769 246 769 m 385 574 q 322 522 346 574 q 297 365 297 471 q 322 215 297 261 q 381 168 346 168 q 447 215 422 168 q 492 382 472 261 q 448 533 471 492 q 385 574 425 574 m 236 1192 q 328 1156 292 1192 q 364 1065 364 1119 q 356 1011 364 1036 q 326 943 347 986 l 257 803 l 126 803 l 161 961 q 108 1065 108 1001 q 144 1155 108 1118 q 236 1192 181 1192 m 661 825 l 511 796 l 378 1133 l 599 1188 l 661 825 z \\\"},\\\"ἃ\\\":{\\\"ha\\\":832,\\\"x_min\\\":24,\\\"x_max\\\":818,\\\"o\\\":\\\"m 343 769 q 485 723 431 769 q 557 597 539 676 l 572 742 l 803 742 l 694 369 l 732 247 q 764 192 743 210 q 818 172 785 175 l 732 -26 q 611 13 656 -18 q 551 103 567 43 l 543 136 q 450 11 506 50 q 314 -28 394 -28 q 103 75 182 -28 q 24 365 24 178 q 63 575 24 483 q 174 718 101 667 q 343 769 246 769 m 385 574 q 322 522 346 574 q 297 365 297 471 q 322 215 297 261 q 381 168 346 168 q 447 215 422 168 q 492 382 472 261 q 448 533 471 492 q 385 574 425 574 m 217 1192 q 308 1155 272 1192 q 344 1065 344 1118 q 292 961 344 1001 l 326 803 l 196 803 l 126 943 q 97 1011 106 986 q 89 1065 89 1036 q 125 1156 89 1119 q 217 1192 161 1192 m 642 825 l 492 796 l 358 1133 l 579 1188 l 642 825 z \\\"},\\\"ἄ\\\":{\\\"ha\\\":832,\\\"x_min\\\":24,\\\"x_max\\\":818,\\\"o\\\":\\\"m 343 769 q 485 723 431 769 q 557 597 539 676 l 572 742 l 803 742 l 694 369 l 732 247 q 764 192 743 210 q 818 172 785 175 l 732 -26 q 611 13 656 -18 q 551 103 567 43 l 543 136 q 450 11 506 50 q 314 -28 394 -28 q 103 75 182 -28 q 24 365 24 178 q 63 575 24 483 q 174 718 101 667 q 343 769 246 769 m 385 574 q 322 522 346 574 q 297 365 297 471 q 322 215 297 261 q 381 168 346 168 q 447 215 422 168 q 492 382 472 261 q 448 533 471 492 q 385 574 425 574 m 282 1192 q 374 1156 338 1192 q 410 1065 410 1119 q 401 1011 410 1036 q 372 943 393 986 l 303 803 l 172 803 l 207 961 q 154 1065 154 1001 q 190 1155 154 1118 q 282 1192 226 1192 m 707 1133 l 574 796 l 424 825 l 486 1188 l 707 1133 z \\\"},\\\"ἅ\\\":{\\\"ha\\\":832,\\\"x_min\\\":24,\\\"x_max\\\":818,\\\"o\\\":\\\"m 343 769 q 485 723 431 769 q 557 597 539 676 l 572 742 l 803 742 l 694 369 l 732 247 q 764 192 743 210 q 818 172 785 175 l 732 -26 q 611 13 656 -18 q 551 103 567 43 l 543 136 q 450 11 506 50 q 314 -28 394 -28 q 103 75 182 -28 q 24 365 24 178 q 63 575 24 483 q 174 718 101 667 q 343 769 246 769 m 385 574 q 322 522 346 574 q 297 365 297 471 q 322 215 297 261 q 381 168 346 168 q 447 215 422 168 q 492 382 472 261 q 448 533 471 492 q 385 574 425 574 m 244 1192 q 336 1155 300 1192 q 372 1065 372 1118 q 319 961 372 1001 l 354 803 l 224 803 l 154 943 q 125 1011 133 986 q 117 1065 117 1036 q 153 1156 117 1119 q 244 1192 189 1192 m 683 1133 l 550 796 l 400 825 l 463 1188 l 683 1133 z \\\"},\\\"ἆ\\\":{\\\"ha\\\":832,\\\"x_min\\\":24,\\\"x_max\\\":818,\\\"o\\\":\\\"m 343 769 q 485 723 431 769 q 557 597 539 676 l 572 742 l 803 742 l 694 369 l 732 247 q 764 192 743 210 q 818 172 785 175 l 732 -26 q 611 13 656 -18 q 551 103 567 43 l 543 136 q 450 11 506 50 q 314 -28 394 -28 q 103 75 182 -28 q 24 365 24 178 q 63 575 24 483 q 174 718 101 667 q 343 769 246 769 m 385 574 q 322 522 346 574 q 297 365 297 471 q 322 215 297 261 q 381 168 346 168 q 447 215 422 168 q 492 382 472 261 q 448 533 471 492 q 385 574 425 574 m 474 1138 q 424 1144 444 1138 q 382 1167 404 1151 q 344 1191 356 1185 q 317 1197 332 1197 q 276 1183 292 1197 q 243 1138 261 1169 l 114 1200 q 194 1335 143 1282 q 310 1389 244 1389 q 362 1382 340 1389 q 407 1358 383 1375 q 444 1335 431 1342 q 471 1329 457 1329 q 510 1343 494 1329 q 543 1389 525 1357 l 672 1326 q 592 1190 643 1243 q 474 1138 540 1138 m 335 894 q 265 999 265 929 q 301 1088 265 1051 q 393 1125 338 1125 q 485 1089 449 1125 q 521 999 521 1053 q 511 942 521 968 q 479 876 501 917 l 442 810 l 321 810 l 335 894 z \\\"},\\\"ἇ\\\":{\\\"ha\\\":832,\\\"x_min\\\":24,\\\"x_max\\\":818,\\\"o\\\":\\\"m 343 769 q 485 723 431 769 q 557 597 539 676 l 572 742 l 803 742 l 694 369 l 732 247 q 764 192 743 210 q 818 172 785 175 l 732 -26 q 611 13 656 -18 q 551 103 567 43 l 543 136 q 450 11 506 50 q 314 -28 394 -28 q 103 75 182 -28 q 24 365 24 178 q 63 575 24 483 q 174 718 101 667 q 343 769 246 769 m 385 574 q 322 522 346 574 q 297 365 297 471 q 322 215 297 261 q 381 168 346 168 q 447 215 422 168 q 492 382 472 261 q 448 533 471 492 q 385 574 425 574 m 474 1138 q 424 1144 444 1138 q 382 1167 404 1151 q 344 1191 356 1185 q 317 1197 332 1197 q 276 1183 292 1197 q 243 1138 261 1169 l 114 1200 q 194 1335 143 1282 q 310 1389 244 1389 q 362 1382 340 1389 q 407 1358 383 1375 q 444 1335 431 1342 q 471 1329 457 1329 q 510 1343 494 1329 q 543 1389 525 1357 l 672 1326 q 592 1190 643 1243 q 474 1138 540 1138 m 344 810 l 307 876 q 275 942 285 917 q 265 999 265 968 q 301 1089 265 1053 q 393 1125 338 1125 q 485 1088 449 1125 q 521 999 521 1051 q 454 894 521 931 l 465 810 l 344 810 z \\\"},\\\"ὰ\\\":{\\\"ha\\\":832,\\\"x_min\\\":24,\\\"x_max\\\":818,\\\"o\\\":\\\"m 343 769 q 485 723 431 769 q 557 597 539 676 l 572 742 l 803 742 l 694 369 l 732 247 q 764 192 743 210 q 818 172 785 175 l 732 -26 q 611 13 656 -18 q 551 103 567 43 l 543 136 q 450 11 506 50 q 314 -28 394 -28 q 103 75 182 -28 q 24 365 24 178 q 63 575 24 483 q 174 718 101 667 q 343 769 246 769 m 385 574 q 322 522 346 574 q 297 365 297 471 q 322 215 297 261 q 381 168 346 168 q 447 215 422 168 q 492 382 472 261 q 448 533 471 492 q 385 574 425 574 m 481 838 l 306 808 l 165 1151 l 428 1206 l 481 838 z \\\"},\\\"ά\\\":{\\\"ha\\\":832,\\\"x_min\\\":24,\\\"x_max\\\":818,\\\"o\\\":\\\"m 343 769 q 485 723 431 769 q 557 597 539 676 l 572 742 l 803 742 l 694 369 l 732 247 q 764 192 743 210 q 818 172 785 175 l 732 -26 q 611 13 656 -18 q 551 103 567 43 l 543 136 q 450 11 506 50 q 314 -28 394 -28 q 103 75 182 -28 q 24 365 24 178 q 63 575 24 483 q 174 718 101 667 q 343 769 246 769 m 385 574 q 322 522 346 574 q 297 365 297 471 q 322 215 297 261 q 381 168 346 168 q 447 215 422 168 q 492 382 472 261 q 448 533 471 492 q 385 574 425 574 m 624 1151 l 483 808 l 308 838 l 361 1206 l 624 1151 z \\\"},\\\"ᾶ\\\":{\\\"ha\\\":832,\\\"x_min\\\":24,\\\"x_max\\\":818,\\\"o\\\":\\\"m 343 769 q 485 723 431 769 q 557 597 539 676 l 572 742 l 803 742 l 694 369 l 732 247 q 764 192 743 210 q 818 172 785 175 l 732 -26 q 611 13 656 -18 q 551 103 567 43 l 543 136 q 450 11 506 50 q 314 -28 394 -28 q 103 75 182 -28 q 24 365 24 178 q 63 575 24 483 q 174 718 101 667 q 343 769 246 769 m 385 574 q 322 522 346 574 q 297 365 297 471 q 322 215 297 261 q 381 168 346 168 q 447 215 422 168 q 492 382 472 261 q 448 533 471 492 q 385 574 425 574 z \\\"},\\\"ᾰ\\\":{\\\"ha\\\":832,\\\"x_min\\\":24,\\\"x_max\\\":818,\\\"o\\\":\\\"m 343 769 q 485 723 431 769 q 557 597 539 676 l 572 742 l 803 742 l 694 369 l 732 247 q 764 192 743 210 q 818 172 785 175 l 732 -26 q 611 13 656 -18 q 551 103 567 43 l 543 136 q 450 11 506 50 q 314 -28 394 -28 q 103 75 182 -28 q 24 365 24 178 q 63 575 24 483 q 174 718 101 667 q 343 769 246 769 m 385 574 q 322 522 346 574 q 297 365 297 471 q 322 215 297 261 q 381 168 346 168 q 447 215 422 168 q 492 382 472 261 q 448 533 471 492 q 385 574 425 574 m 393 869 q 210 947 275 869 q 136 1142 146 1025 l 279 1165 q 320 1085 292 1114 q 393 1056 349 1056 q 466 1085 438 1056 q 507 1165 494 1114 l 650 1142 q 576 947 640 1025 q 393 869 511 869 z \\\"},\\\"ᾱ\\\":{\\\"ha\\\":832,\\\"x_min\\\":24,\\\"x_max\\\":818,\\\"o\\\":\\\"m 343 769 q 485 723 431 769 q 557 597 539 676 l 572 742 l 803 742 l 694 369 l 732 247 q 764 192 743 210 q 818 172 785 175 l 732 -26 q 611 13 656 -18 q 551 103 567 43 l 543 136 q 450 11 506 50 q 314 -28 394 -28 q 103 75 182 -28 q 24 365 24 178 q 63 575 24 483 q 174 718 101 667 q 343 769 246 769 m 385 574 q 322 522 346 574 q 297 365 297 471 q 322 215 297 261 q 381 168 346 168 q 447 215 422 168 q 492 382 472 261 q 448 533 471 492 q 385 574 425 574 m 167 900 l 167 1086 l 618 1086 l 618 900 l 167 900 z \\\"},\\\"ᾳ\\\":{\\\"ha\\\":832,\\\"x_min\\\":24,\\\"x_max\\\":818,\\\"o\\\":\\\"m 343 769 q 485 723 431 769 q 557 597 539 676 l 572 742 l 803 742 l 694 369 l 732 247 q 764 192 743 210 q 818 172 785 175 l 732 -26 q 611 13 656 -18 q 551 103 567 43 l 543 136 q 450 11 506 50 q 314 -28 394 -28 q 103 75 182 -28 q 24 365 24 178 q 63 575 24 483 q 174 718 101 667 q 343 769 246 769 m 385 574 q 322 522 346 574 q 297 365 297 471 q 322 215 297 261 q 381 168 346 168 q 447 215 422 168 q 492 382 472 261 q 448 533 471 492 q 385 574 425 574 m 465 -294 q 317 -240 369 -294 q 265 -99 265 -186 l 265 -61 l 450 -61 l 450 -93 q 503 -149 450 -149 q 569 -129 533 -149 l 632 -240 q 465 -294 564 -294 z \\\"},\\\"ᾲ\\\":{\\\"ha\\\":832,\\\"x_min\\\":24,\\\"x_max\\\":818,\\\"o\\\":\\\"m 343 769 q 485 723 431 769 q 557 597 539 676 l 572 742 l 803 742 l 694 369 l 732 247 q 764 192 743 210 q 818 172 785 175 l 732 -26 q 611 13 656 -18 q 551 103 567 43 l 543 136 q 450 11 506 50 q 314 -28 394 -28 q 103 75 182 -28 q 24 365 24 178 q 63 575 24 483 q 174 718 101 667 q 343 769 246 769 m 385 574 q 322 522 346 574 q 297 365 297 471 q 322 215 297 261 q 381 168 346 168 q 447 215 422 168 q 492 382 472 261 q 448 533 471 492 q 385 574 425 574 m 481 838 l 306 808 l 165 1151 l 428 1206 l 481 838 m 465 -294 q 317 -240 369 -294 q 265 -99 265 -186 l 265 -61 l 450 -61 l 450 -93 q 503 -149 450 -149 q 569 -129 533 -149 l 632 -240 q 465 -294 564 -294 z \\\"},\\\"ᾴ\\\":{\\\"ha\\\":832,\\\"x_min\\\":24,\\\"x_max\\\":818,\\\"o\\\":\\\"m 343 769 q 485 723 431 769 q 557 597 539 676 l 572 742 l 803 742 l 694 369 l 732 247 q 764 192 743 210 q 818 172 785 175 l 732 -26 q 611 13 656 -18 q 551 103 567 43 l 543 136 q 450 11 506 50 q 314 -28 394 -28 q 103 75 182 -28 q 24 365 24 178 q 63 575 24 483 q 174 718 101 667 q 343 769 246 769 m 385 574 q 322 522 346 574 q 297 365 297 471 q 322 215 297 261 q 381 168 346 168 q 447 215 422 168 q 492 382 472 261 q 448 533 471 492 q 385 574 425 574 m 624 1151 l 483 808 l 308 838 l 361 1206 l 624 1151 m 465 -294 q 317 -240 369 -294 q 265 -99 265 -186 l 265 -61 l 450 -61 l 450 -93 q 503 -149 450 -149 q 569 -129 533 -149 l 632 -240 q 465 -294 564 -294 z \\\"},\\\"ᾀ\\\":{\\\"ha\\\":832,\\\"x_min\\\":24,\\\"x_max\\\":818,\\\"o\\\":\\\"m 343 769 q 485 723 431 769 q 557 597 539 676 l 572 742 l 803 742 l 694 369 l 732 247 q 764 192 743 210 q 818 172 785 175 l 732 -26 q 611 13 656 -18 q 551 103 567 43 l 543 136 q 450 11 506 50 q 314 -28 394 -28 q 103 75 182 -28 q 24 365 24 178 q 63 575 24 483 q 174 718 101 667 q 343 769 246 769 m 385 574 q 322 522 346 574 q 297 365 297 471 q 322 215 297 261 q 381 168 346 168 q 447 215 422 168 q 492 382 472 261 q 448 533 471 492 q 385 574 425 574 m 465 -294 q 317 -240 369 -294 q 265 -99 265 -186 l 265 -61 l 450 -61 l 450 -93 q 503 -149 450 -149 q 569 -129 533 -149 l 632 -240 q 465 -294 564 -294 z \\\"},\\\"ᾁ\\\":{\\\"ha\\\":832,\\\"x_min\\\":24,\\\"x_max\\\":818,\\\"o\\\":\\\"m 343 769 q 485 723 431 769 q 557 597 539 676 l 572 742 l 803 742 l 694 369 l 732 247 q 764 192 743 210 q 818 172 785 175 l 732 -26 q 611 13 656 -18 q 551 103 567 43 l 543 136 q 450 11 506 50 q 314 -28 394 -28 q 103 75 182 -28 q 24 365 24 178 q 63 575 24 483 q 174 718 101 667 q 343 769 246 769 m 385 574 q 322 522 346 574 q 297 365 297 471 q 322 215 297 261 q 381 168 346 168 q 447 215 422 168 q 492 382 472 261 q 448 533 471 492 q 385 574 425 574 m 351 1192 q 443 1155 407 1192 q 479 1065 479 1118 q 426 961 479 1001 l 461 803 l 331 803 l 261 943 q 232 1011 240 986 q 224 1065 224 1036 q 260 1156 224 1119 q 351 1192 296 1192 m 465 -294 q 317 -240 369 -294 q 265 -99 265 -186 l 265 -61 l 450 -61 l 450 -93 q 503 -149 450 -149 q 569 -129 533 -149 l 632 -240 q 465 -294 564 -294 z \\\"},\\\"ᾂ\\\":{\\\"ha\\\":832,\\\"x_min\\\":24,\\\"x_max\\\":818,\\\"o\\\":\\\"m 343 769 q 485 723 431 769 q 557 597 539 676 l 572 742 l 803 742 l 694 369 l 732 247 q 764 192 743 210 q 818 172 785 175 l 732 -26 q 611 13 656 -18 q 551 103 567 43 l 543 136 q 450 11 506 50 q 314 -28 394 -28 q 103 75 182 -28 q 24 365 24 178 q 63 575 24 483 q 174 718 101 667 q 343 769 246 769 m 385 574 q 322 522 346 574 q 297 365 297 471 q 322 215 297 261 q 381 168 346 168 q 447 215 422 168 q 492 382 472 261 q 448 533 471 492 q 385 574 425 574 m 236 1192 q 328 1156 292 1192 q 364 1065 364 1119 q 356 1011 364 1036 q 326 943 347 986 l 257 803 l 126 803 l 161 961 q 108 1065 108 1001 q 144 1155 108 1118 q 236 1192 181 1192 m 661 825 l 511 796 l 378 1133 l 599 1188 l 661 825 m 465 -294 q 317 -240 369 -294 q 265 -99 265 -186 l 265 -61 l 450 -61 l 450 -93 q 503 -149 450 -149 q 569 -129 533 -149 l 632 -240 q 465 -294 564 -294 z \\\"},\\\"ᾃ\\\":{\\\"ha\\\":832,\\\"x_min\\\":24,\\\"x_max\\\":818,\\\"o\\\":\\\"m 343 769 q 485 723 431 769 q 557 597 539 676 l 572 742 l 803 742 l 694 369 l 732 247 q 764 192 743 210 q 818 172 785 175 l 732 -26 q 611 13 656 -18 q 551 103 567 43 l 543 136 q 450 11 506 50 q 314 -28 394 -28 q 103 75 182 -28 q 24 365 24 178 q 63 575 24 483 q 174 718 101 667 q 343 769 246 769 m 385 574 q 322 522 346 574 q 297 365 297 471 q 322 215 297 261 q 381 168 346 168 q 447 215 422 168 q 492 382 472 261 q 448 533 471 492 q 385 574 425 574 m 217 1192 q 308 1155 272 1192 q 344 1065 344 1118 q 292 961 344 1001 l 326 803 l 196 803 l 126 943 q 97 1011 106 986 q 89 1065 89 1036 q 125 1156 89 1119 q 217 1192 161 1192 m 642 825 l 492 796 l 358 1133 l 579 1188 l 642 825 m 465 -294 q 317 -240 369 -294 q 265 -99 265 -186 l 265 -61 l 450 -61 l 450 -93 q 503 -149 450 -149 q 569 -129 533 -149 l 632 -240 q 465 -294 564 -294 z \\\"},\\\"ᾄ\\\":{\\\"ha\\\":832,\\\"x_min\\\":24,\\\"x_max\\\":818,\\\"o\\\":\\\"m 343 769 q 485 723 431 769 q 557 597 539 676 l 572 742 l 803 742 l 694 369 l 732 247 q 764 192 743 210 q 818 172 785 175 l 732 -26 q 611 13 656 -18 q 551 103 567 43 l 543 136 q 450 11 506 50 q 314 -28 394 -28 q 103 75 182 -28 q 24 365 24 178 q 63 575 24 483 q 174 718 101 667 q 343 769 246 769 m 385 574 q 322 522 346 574 q 297 365 297 471 q 322 215 297 261 q 381 168 346 168 q 447 215 422 168 q 492 382 472 261 q 448 533 471 492 q 385 574 425 574 m 282 1192 q 374 1156 338 1192 q 410 1065 410 1119 q 401 1011 410 1036 q 372 943 393 986 l 303 803 l 172 803 l 207 961 q 154 1065 154 1001 q 190 1155 154 1118 q 282 1192 226 1192 m 707 1133 l 574 796 l 424 825 l 486 1188 l 707 1133 m 465 -294 q 317 -240 369 -294 q 265 -99 265 -186 l 265 -61 l 450 -61 l 450 -93 q 503 -149 450 -149 q 569 -129 533 -149 l 632 -240 q 465 -294 564 -294 z \\\"},\\\"ᾅ\\\":{\\\"ha\\\":832,\\\"x_min\\\":24,\\\"x_max\\\":818,\\\"o\\\":\\\"m 343 769 q 485 723 431 769 q 557 597 539 676 l 572 742 l 803 742 l 694 369 l 732 247 q 764 192 743 210 q 818 172 785 175 l 732 -26 q 611 13 656 -18 q 551 103 567 43 l 543 136 q 450 11 506 50 q 314 -28 394 -28 q 103 75 182 -28 q 24 365 24 178 q 63 575 24 483 q 174 718 101 667 q 343 769 246 769 m 385 574 q 322 522 346 574 q 297 365 297 471 q 322 215 297 261 q 381 168 346 168 q 447 215 422 168 q 492 382 472 261 q 448 533 471 492 q 385 574 425 574 m 244 1192 q 336 1155 300 1192 q 372 1065 372 1118 q 319 961 372 1001 l 354 803 l 224 803 l 154 943 q 125 1011 133 986 q 117 1065 117 1036 q 153 1156 117 1119 q 244 1192 189 1192 m 683 1133 l 550 796 l 400 825 l 463 1188 l 683 1133 m 465 -294 q 317 -240 369 -294 q 265 -99 265 -186 l 265 -61 l 450 -61 l 450 -93 q 503 -149 450 -149 q 569 -129 533 -149 l 632 -240 q 465 -294 564 -294 z \\\"},\\\"ᾆ\\\":{\\\"ha\\\":832,\\\"x_min\\\":24,\\\"x_max\\\":818,\\\"o\\\":\\\"m 343 769 q 485 723 431 769 q 557 597 539 676 l 572 742 l 803 742 l 694 369 l 732 247 q 764 192 743 210 q 818 172 785 175 l 732 -26 q 611 13 656 -18 q 551 103 567 43 l 543 136 q 450 11 506 50 q 314 -28 394 -28 q 103 75 182 -28 q 24 365 24 178 q 63 575 24 483 q 174 718 101 667 q 343 769 246 769 m 385 574 q 322 522 346 574 q 297 365 297 471 q 322 215 297 261 q 381 168 346 168 q 447 215 422 168 q 492 382 472 261 q 448 533 471 492 q 385 574 425 574 m 474 1138 q 424 1144 444 1138 q 382 1167 404 1151 q 344 1191 356 1185 q 317 1197 332 1197 q 276 1183 292 1197 q 243 1138 261 1169 l 114 1200 q 194 1335 143 1282 q 310 1389 244 1389 q 362 1382 340 1389 q 407 1358 383 1375 q 444 1335 431 1342 q 471 1329 457 1329 q 510 1343 494 1329 q 543 1389 525 1357 l 672 1326 q 592 1190 643 1243 q 474 1138 540 1138 m 335 894 q 265 999 265 929 q 301 1088 265 1051 q 393 1125 338 1125 q 485 1089 449 1125 q 521 999 521 1053 q 511 942 521 968 q 479 876 501 917 l 442 810 l 321 810 l 335 894 m 465 -294 q 317 -240 369 -294 q 265 -99 265 -186 l 265 -61 l 450 -61 l 450 -93 q 503 -149 450 -149 q 569 -129 533 -149 l 632 -240 q 465 -294 564 -294 z \\\"},\\\"ᾇ\\\":{\\\"ha\\\":832,\\\"x_min\\\":24,\\\"x_max\\\":818,\\\"o\\\":\\\"m 343 769 q 485 723 431 769 q 557 597 539 676 l 572 742 l 803 742 l 694 369 l 732 247 q 764 192 743 210 q 818 172 785 175 l 732 -26 q 611 13 656 -18 q 551 103 567 43 l 543 136 q 450 11 506 50 q 314 -28 394 -28 q 103 75 182 -28 q 24 365 24 178 q 63 575 24 483 q 174 718 101 667 q 343 769 246 769 m 385 574 q 322 522 346 574 q 297 365 297 471 q 322 215 297 261 q 381 168 346 168 q 447 215 422 168 q 492 382 472 261 q 448 533 471 492 q 385 574 425 574 m 474 1138 q 424 1144 444 1138 q 382 1167 404 1151 q 344 1191 356 1185 q 317 1197 332 1197 q 276 1183 292 1197 q 243 1138 261 1169 l 114 1200 q 194 1335 143 1282 q 310 1389 244 1389 q 362 1382 340 1389 q 407 1358 383 1375 q 444 1335 431 1342 q 471 1329 457 1329 q 510 1343 494 1329 q 543 1389 525 1357 l 672 1326 q 592 1190 643 1243 q 474 1138 540 1138 m 344 810 l 307 876 q 275 942 285 917 q 265 999 265 968 q 301 1089 265 1053 q 393 1125 338 1125 q 485 1088 449 1125 q 521 999 521 1051 q 454 894 521 931 l 465 810 l 344 810 m 465 -294 q 317 -240 369 -294 q 265 -99 265 -186 l 265 -61 l 450 -61 l 450 -93 q 503 -149 450 -149 q 569 -129 533 -149 l 632 -240 q 465 -294 564 -294 z \\\"},\\\"ᾷ\\\":{\\\"ha\\\":832,\\\"x_min\\\":24,\\\"x_max\\\":818,\\\"o\\\":\\\"m 343 769 q 485 723 431 769 q 557 597 539 676 l 572 742 l 803 742 l 694 369 l 732 247 q 764 192 743 210 q 818 172 785 175 l 732 -26 q 611 13 656 -18 q 551 103 567 43 l 543 136 q 450 11 506 50 q 314 -28 394 -28 q 103 75 182 -28 q 24 365 24 178 q 63 575 24 483 q 174 718 101 667 q 343 769 246 769 m 385 574 q 322 522 346 574 q 297 365 297 471 q 322 215 297 261 q 381 168 346 168 q 447 215 422 168 q 492 382 472 261 q 448 533 471 492 q 385 574 425 574 m 465 -294 q 317 -240 369 -294 q 265 -99 265 -186 l 265 -61 l 450 -61 l 450 -93 q 503 -149 450 -149 q 569 -129 533 -149 l 632 -240 q 465 -294 564 -294 z \\\"},\\\"ἐ\\\":{\\\"ha\\\":675,\\\"x_min\\\":21,\\\"x_max\\\":682,\\\"o\\\":\\\"m 364 769 q 663 676 540 769 l 556 540 q 478 575 514 564 q 403 586 443 586 q 347 571 368 586 q 325 528 325 556 q 344 479 325 497 q 404 461 364 461 l 501 461 l 476 294 l 393 294 q 324 277 346 294 q 303 229 303 260 q 404 161 303 161 q 481 173 442 161 q 571 213 519 185 l 682 63 q 358 -28 558 -28 q 115 33 208 -28 q 21 204 21 93 q 226 394 21 369 q 49 564 49 431 q 135 714 49 658 q 364 769 222 769 z \\\"},\\\"ἑ\\\":{\\\"ha\\\":675,\\\"x_min\\\":21,\\\"x_max\\\":682,\\\"o\\\":\\\"m 364 769 q 663 676 540 769 l 556 540 q 478 575 514 564 q 403 586 443 586 q 347 571 368 586 q 325 528 325 556 q 344 479 325 497 q 404 461 364 461 l 501 461 l 476 294 l 393 294 q 324 277 346 294 q 303 229 303 260 q 404 161 303 161 q 481 173 442 161 q 571 213 519 185 l 682 63 q 358 -28 558 -28 q 115 33 208 -28 q 21 204 21 93 q 226 394 21 369 q 49 564 49 431 q 135 714 49 658 q 364 769 222 769 m 322 1192 q 414 1155 378 1192 q 450 1065 450 1118 q 397 961 450 1001 l 432 803 l 301 803 l 232 943 q 203 1011 211 986 q 194 1065 194 1036 q 231 1156 194 1119 q 322 1192 267 1192 z \\\"},\\\"ἒ\\\":{\\\"ha\\\":675,\\\"x_min\\\":21,\\\"x_max\\\":682,\\\"o\\\":\\\"m 364 769 q 663 676 540 769 l 556 540 q 478 575 514 564 q 403 586 443 586 q 347 571 368 586 q 325 528 325 556 q 344 479 325 497 q 404 461 364 461 l 501 461 l 476 294 l 393 294 q 324 277 346 294 q 303 229 303 260 q 404 161 303 161 q 481 173 442 161 q 571 213 519 185 l 682 63 q 358 -28 558 -28 q 115 33 208 -28 q 21 204 21 93 q 226 394 21 369 q 49 564 49 431 q 135 714 49 658 q 364 769 222 769 m 207 1192 q 299 1156 263 1192 q 335 1065 335 1119 q 326 1011 335 1036 q 297 943 318 986 l 228 803 l 97 803 l 132 961 q 79 1065 79 1001 q 115 1155 79 1118 q 207 1192 151 1192 m 632 825 l 482 796 l 349 1133 l 569 1188 l 632 825 z \\\"},\\\"ἓ\\\":{\\\"ha\\\":675,\\\"x_min\\\":21,\\\"x_max\\\":682,\\\"o\\\":\\\"m 364 769 q 663 676 540 769 l 556 540 q 478 575 514 564 q 403 586 443 586 q 347 571 368 586 q 325 528 325 556 q 344 479 325 497 q 404 461 364 461 l 501 461 l 476 294 l 393 294 q 324 277 346 294 q 303 229 303 260 q 404 161 303 161 q 481 173 442 161 q 571 213 519 185 l 682 63 q 358 -28 558 -28 q 115 33 208 -28 q 21 204 21 93 q 226 394 21 369 q 49 564 49 431 q 135 714 49 658 q 364 769 222 769 m 188 1192 q 279 1155 243 1192 q 315 1065 315 1118 q 263 961 315 1001 l 297 803 l 167 803 l 97 943 q 68 1011 76 986 q 60 1065 60 1036 q 96 1156 60 1119 q 188 1192 132 1192 m 613 825 l 463 796 l 329 1133 l 550 1188 l 613 825 z \\\"},\\\"ἔ\\\":{\\\"ha\\\":675,\\\"x_min\\\":21,\\\"x_max\\\":682,\\\"o\\\":\\\"m 364 769 q 663 676 540 769 l 556 540 q 478 575 514 564 q 403 586 443 586 q 347 571 368 586 q 325 528 325 556 q 344 479 325 497 q 404 461 364 461 l 501 461 l 476 294 l 393 294 q 324 277 346 294 q 303 229 303 260 q 404 161 303 161 q 481 173 442 161 q 571 213 519 185 l 682 63 q 358 -28 558 -28 q 115 33 208 -28 q 21 204 21 93 q 226 394 21 369 q 49 564 49 431 q 135 714 49 658 q 364 769 222 769 m 253 1192 q 344 1156 308 1192 q 381 1065 381 1119 q 372 1011 381 1036 q 343 943 364 986 l 274 803 l 143 803 l 178 961 q 125 1065 125 1001 q 161 1155 125 1118 q 253 1192 197 1192 m 678 1133 l 544 796 l 394 825 l 457 1188 l 678 1133 z \\\"},\\\"ἕ\\\":{\\\"ha\\\":675,\\\"x_min\\\":21,\\\"x_max\\\":682,\\\"o\\\":\\\"m 364 769 q 663 676 540 769 l 556 540 q 478 575 514 564 q 403 586 443 586 q 347 571 368 586 q 325 528 325 556 q 344 479 325 497 q 404 461 364 461 l 501 461 l 476 294 l 393 294 q 324 277 346 294 q 303 229 303 260 q 404 161 303 161 q 481 173 442 161 q 571 213 519 185 l 682 63 q 358 -28 558 -28 q 115 33 208 -28 q 21 204 21 93 q 226 394 21 369 q 49 564 49 431 q 135 714 49 658 q 364 769 222 769 m 215 1192 q 307 1155 271 1192 q 343 1065 343 1118 q 290 961 343 1001 l 325 803 l 194 803 l 125 943 q 96 1011 104 986 q 88 1065 88 1036 q 124 1156 88 1119 q 215 1192 160 1192 m 654 1133 l 521 796 l 371 825 l 433 1188 l 654 1133 z \\\"},\\\"ὲ\\\":{\\\"ha\\\":675,\\\"x_min\\\":21,\\\"x_max\\\":682,\\\"o\\\":\\\"m 364 769 q 663 676 540 769 l 556 540 q 478 575 514 564 q 403 586 443 586 q 347 571 368 586 q 325 528 325 556 q 344 479 325 497 q 404 461 364 461 l 501 461 l 476 294 l 393 294 q 324 277 346 294 q 303 229 303 260 q 404 161 303 161 q 481 173 442 161 q 571 213 519 185 l 682 63 q 358 -28 558 -28 q 115 33 208 -28 q 21 204 21 93 q 226 394 21 369 q 49 564 49 431 q 135 714 49 658 q 364 769 222 769 m 451 838 l 276 808 l 136 1151 l 399 1206 l 451 838 z \\\"},\\\"έ\\\":{\\\"ha\\\":675,\\\"x_min\\\":21,\\\"x_max\\\":682,\\\"o\\\":\\\"m 364 769 q 663 676 540 769 l 556 540 q 478 575 514 564 q 403 586 443 586 q 347 571 368 586 q 325 528 325 556 q 344 479 325 497 q 404 461 364 461 l 501 461 l 476 294 l 393 294 q 324 277 346 294 q 303 229 303 260 q 404 161 303 161 q 481 173 442 161 q 571 213 519 185 l 682 63 q 358 -28 558 -28 q 115 33 208 -28 q 21 204 21 93 q 226 394 21 369 q 49 564 49 431 q 135 714 49 658 q 364 769 222 769 m 594 1151 l 454 808 l 279 838 l 332 1206 l 594 1151 z \\\"},\\\"ἠ\\\":{\\\"ha\\\":792,\\\"x_min\\\":38,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 710 636 769 q 743 543 743 651 l 743 -315 l 468 -287 l 468 497 q 458 554 468 539 q 426 569 447 569 q 339 503 382 569 l 339 0 l 64 0 l 64 551 q 38 728 64 650 l 292 761 q 322 669 310 733 q 425 746 372 722 q 543 769 478 769 z \\\"},\\\"ἡ\\\":{\\\"ha\\\":792,\\\"x_min\\\":38,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 710 636 769 q 743 543 743 651 l 743 -315 l 468 -287 l 468 497 q 458 554 468 539 q 426 569 447 569 q 339 503 382 569 l 339 0 l 64 0 l 64 551 q 38 728 64 650 l 292 761 q 322 669 310 733 q 425 746 372 722 q 543 769 478 769 m 358 1192 q 450 1155 414 1192 q 486 1065 486 1118 q 433 961 486 1001 l 468 803 l 338 803 l 268 943 q 239 1011 247 986 q 231 1065 231 1036 q 267 1156 231 1119 q 358 1192 303 1192 z \\\"},\\\"ἢ\\\":{\\\"ha\\\":792,\\\"x_min\\\":38,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 710 636 769 q 743 543 743 651 l 743 -315 l 468 -287 l 468 497 q 458 554 468 539 q 426 569 447 569 q 339 503 382 569 l 339 0 l 64 0 l 64 551 q 38 728 64 650 l 292 761 q 322 669 310 733 q 425 746 372 722 q 543 769 478 769 m 243 1192 q 335 1156 299 1192 q 371 1065 371 1119 q 363 1011 371 1036 q 333 943 354 986 l 264 803 l 133 803 l 168 961 q 115 1065 115 1001 q 151 1155 115 1118 q 243 1192 188 1192 m 668 825 l 518 796 l 385 1133 l 606 1188 l 668 825 z \\\"},\\\"ἣ\\\":{\\\"ha\\\":792,\\\"x_min\\\":38,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 710 636 769 q 743 543 743 651 l 743 -315 l 468 -287 l 468 497 q 458 554 468 539 q 426 569 447 569 q 339 503 382 569 l 339 0 l 64 0 l 64 551 q 38 728 64 650 l 292 761 q 322 669 310 733 q 425 746 372 722 q 543 769 478 769 m 224 1192 q 315 1155 279 1192 q 351 1065 351 1118 q 299 961 351 1001 l 333 803 l 203 803 l 133 943 q 104 1011 113 986 q 96 1065 96 1036 q 132 1156 96 1119 q 224 1192 168 1192 m 649 825 l 499 796 l 365 1133 l 586 1188 l 649 825 z \\\"},\\\"ἤ\\\":{\\\"ha\\\":792,\\\"x_min\\\":38,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 710 636 769 q 743 543 743 651 l 743 -315 l 468 -287 l 468 497 q 458 554 468 539 q 426 569 447 569 q 339 503 382 569 l 339 0 l 64 0 l 64 551 q 38 728 64 650 l 292 761 q 322 669 310 733 q 425 746 372 722 q 543 769 478 769 m 289 1192 q 381 1156 344 1192 q 417 1065 417 1119 q 408 1011 417 1036 q 379 943 400 986 l 310 803 l 179 803 l 214 961 q 161 1065 161 1001 q 197 1155 161 1118 q 289 1192 233 1192 m 714 1133 l 581 796 l 431 825 l 493 1188 l 714 1133 z \\\"},\\\"ἥ\\\":{\\\"ha\\\":792,\\\"x_min\\\":38,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 710 636 769 q 743 543 743 651 l 743 -315 l 468 -287 l 468 497 q 458 554 468 539 q 426 569 447 569 q 339 503 382 569 l 339 0 l 64 0 l 64 551 q 38 728 64 650 l 292 761 q 322 669 310 733 q 425 746 372 722 q 543 769 478 769 m 251 1192 q 343 1155 307 1192 q 379 1065 379 1118 q 326 961 379 1001 l 361 803 l 231 803 l 161 943 q 132 1011 140 986 q 124 1065 124 1036 q 160 1156 124 1119 q 251 1192 196 1192 m 690 1133 l 557 796 l 407 825 l 469 1188 l 690 1133 z \\\"},\\\"ἦ\\\":{\\\"ha\\\":792,\\\"x_min\\\":38,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 710 636 769 q 743 543 743 651 l 743 -315 l 468 -287 l 468 497 q 458 554 468 539 q 426 569 447 569 q 339 503 382 569 l 339 0 l 64 0 l 64 551 q 38 728 64 650 l 292 761 q 322 669 310 733 q 425 746 372 722 q 543 769 478 769 m 481 1138 q 431 1144 451 1138 q 389 1167 411 1151 q 351 1191 363 1185 q 324 1197 339 1197 q 283 1183 299 1197 q 250 1138 268 1169 l 121 1200 q 201 1335 150 1282 q 317 1389 251 1389 q 369 1382 347 1389 q 414 1358 390 1375 q 451 1335 438 1342 q 478 1329 464 1329 q 517 1343 501 1329 q 550 1389 532 1357 l 679 1326 q 599 1190 650 1243 q 481 1138 547 1138 m 342 894 q 272 999 272 929 q 308 1088 272 1051 q 400 1125 344 1125 q 492 1089 456 1125 q 528 999 528 1053 q 518 942 528 968 q 486 876 508 917 l 449 810 l 328 810 l 342 894 z \\\"},\\\"ἧ\\\":{\\\"ha\\\":792,\\\"x_min\\\":38,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 710 636 769 q 743 543 743 651 l 743 -315 l 468 -287 l 468 497 q 458 554 468 539 q 426 569 447 569 q 339 503 382 569 l 339 0 l 64 0 l 64 551 q 38 728 64 650 l 292 761 q 322 669 310 733 q 425 746 372 722 q 543 769 478 769 m 481 1138 q 431 1144 451 1138 q 389 1167 411 1151 q 351 1191 363 1185 q 324 1197 339 1197 q 283 1183 299 1197 q 250 1138 268 1169 l 121 1200 q 201 1335 150 1282 q 317 1389 251 1389 q 369 1382 347 1389 q 414 1358 390 1375 q 451 1335 438 1342 q 478 1329 464 1329 q 517 1343 501 1329 q 550 1389 532 1357 l 679 1326 q 599 1190 650 1243 q 481 1138 547 1138 m 351 810 l 314 876 q 282 942 292 917 q 272 999 272 968 q 308 1089 272 1053 q 400 1125 344 1125 q 492 1088 456 1125 q 528 999 528 1051 q 461 894 528 931 l 472 810 l 351 810 z \\\"},\\\"ὴ\\\":{\\\"ha\\\":792,\\\"x_min\\\":38,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 710 636 769 q 743 543 743 651 l 743 -315 l 468 -287 l 468 497 q 458 554 468 539 q 426 569 447 569 q 339 503 382 569 l 339 0 l 64 0 l 64 551 q 38 728 64 650 l 292 761 q 322 669 310 733 q 425 746 372 722 q 543 769 478 769 m 488 838 l 313 808 l 172 1151 l 435 1206 l 488 838 z \\\"},\\\"ή\\\":{\\\"ha\\\":792,\\\"x_min\\\":38,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 710 636 769 q 743 543 743 651 l 743 -315 l 468 -287 l 468 497 q 458 554 468 539 q 426 569 447 569 q 339 503 382 569 l 339 0 l 64 0 l 64 551 q 38 728 64 650 l 292 761 q 322 669 310 733 q 425 746 372 722 q 543 769 478 769 m 631 1151 l 490 808 l 315 838 l 368 1206 l 631 1151 z \\\"},\\\"ῆ\\\":{\\\"ha\\\":792,\\\"x_min\\\":38,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 710 636 769 q 743 543 743 651 l 743 -315 l 468 -287 l 468 497 q 458 554 468 539 q 426 569 447 569 q 339 503 382 569 l 339 0 l 64 0 l 64 551 q 38 728 64 650 l 292 761 q 322 669 310 733 q 425 746 372 722 q 543 769 478 769 z \\\"},\\\"ῃ\\\":{\\\"ha\\\":792,\\\"x_min\\\":38,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 710 636 769 q 743 543 743 651 l 743 -315 l 468 -287 l 468 497 q 458 554 468 539 q 426 569 447 569 q 339 503 382 569 l 339 0 l 64 0 l 64 551 q 38 728 64 650 l 292 761 q 322 669 310 733 q 425 746 372 722 q 543 769 478 769 m 264 -294 q 116 -240 168 -294 q 64 -99 64 -186 l 64 -61 l 249 -61 l 249 -93 q 301 -149 249 -149 q 368 -129 332 -149 l 431 -240 q 264 -294 363 -294 z \\\"},\\\"ῂ\\\":{\\\"ha\\\":792,\\\"x_min\\\":38,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 710 636 769 q 743 543 743 651 l 743 -315 l 468 -287 l 468 497 q 458 554 468 539 q 426 569 447 569 q 339 503 382 569 l 339 0 l 64 0 l 64 551 q 38 728 64 650 l 292 761 q 322 669 310 733 q 425 746 372 722 q 543 769 478 769 m 488 838 l 313 808 l 172 1151 l 435 1206 l 488 838 m 264 -294 q 116 -240 168 -294 q 64 -99 64 -186 l 64 -61 l 249 -61 l 249 -93 q 301 -149 249 -149 q 368 -129 332 -149 l 431 -240 q 264 -294 363 -294 z \\\"},\\\"ῄ\\\":{\\\"ha\\\":792,\\\"x_min\\\":38,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 710 636 769 q 743 543 743 651 l 743 -315 l 468 -287 l 468 497 q 458 554 468 539 q 426 569 447 569 q 339 503 382 569 l 339 0 l 64 0 l 64 551 q 38 728 64 650 l 292 761 q 322 669 310 733 q 425 746 372 722 q 543 769 478 769 m 631 1151 l 490 808 l 315 838 l 368 1206 l 631 1151 m 264 -294 q 116 -240 168 -294 q 64 -99 64 -186 l 64 -61 l 249 -61 l 249 -93 q 301 -149 249 -149 q 368 -129 332 -149 l 431 -240 q 264 -294 363 -294 z \\\"},\\\"ᾐ\\\":{\\\"ha\\\":792,\\\"x_min\\\":38,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 710 636 769 q 743 543 743 651 l 743 -315 l 468 -287 l 468 497 q 458 554 468 539 q 426 569 447 569 q 339 503 382 569 l 339 0 l 64 0 l 64 551 q 38 728 64 650 l 292 761 q 322 669 310 733 q 425 746 372 722 q 543 769 478 769 m 264 -294 q 116 -240 168 -294 q 64 -99 64 -186 l 64 -61 l 249 -61 l 249 -93 q 301 -149 249 -149 q 368 -129 332 -149 l 431 -240 q 264 -294 363 -294 z \\\"},\\\"ᾑ\\\":{\\\"ha\\\":792,\\\"x_min\\\":38,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 710 636 769 q 743 543 743 651 l 743 -315 l 468 -287 l 468 497 q 458 554 468 539 q 426 569 447 569 q 339 503 382 569 l 339 0 l 64 0 l 64 551 q 38 728 64 650 l 292 761 q 322 669 310 733 q 425 746 372 722 q 543 769 478 769 m 358 1192 q 450 1155 414 1192 q 486 1065 486 1118 q 433 961 486 1001 l 468 803 l 338 803 l 268 943 q 239 1011 247 986 q 231 1065 231 1036 q 267 1156 231 1119 q 358 1192 303 1192 m 264 -294 q 116 -240 168 -294 q 64 -99 64 -186 l 64 -61 l 249 -61 l 249 -93 q 301 -149 249 -149 q 368 -129 332 -149 l 431 -240 q 264 -294 363 -294 z \\\"},\\\"ᾒ\\\":{\\\"ha\\\":792,\\\"x_min\\\":38,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 710 636 769 q 743 543 743 651 l 743 -315 l 468 -287 l 468 497 q 458 554 468 539 q 426 569 447 569 q 339 503 382 569 l 339 0 l 64 0 l 64 551 q 38 728 64 650 l 292 761 q 322 669 310 733 q 425 746 372 722 q 543 769 478 769 m 243 1192 q 335 1156 299 1192 q 371 1065 371 1119 q 363 1011 371 1036 q 333 943 354 986 l 264 803 l 133 803 l 168 961 q 115 1065 115 1001 q 151 1155 115 1118 q 243 1192 188 1192 m 668 825 l 518 796 l 385 1133 l 606 1188 l 668 825 m 264 -294 q 116 -240 168 -294 q 64 -99 64 -186 l 64 -61 l 249 -61 l 249 -93 q 301 -149 249 -149 q 368 -129 332 -149 l 431 -240 q 264 -294 363 -294 z \\\"},\\\"ᾓ\\\":{\\\"ha\\\":792,\\\"x_min\\\":38,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 710 636 769 q 743 543 743 651 l 743 -315 l 468 -287 l 468 497 q 458 554 468 539 q 426 569 447 569 q 339 503 382 569 l 339 0 l 64 0 l 64 551 q 38 728 64 650 l 292 761 q 322 669 310 733 q 425 746 372 722 q 543 769 478 769 m 224 1192 q 315 1155 279 1192 q 351 1065 351 1118 q 299 961 351 1001 l 333 803 l 203 803 l 133 943 q 104 1011 113 986 q 96 1065 96 1036 q 132 1156 96 1119 q 224 1192 168 1192 m 649 825 l 499 796 l 365 1133 l 586 1188 l 649 825 m 264 -294 q 116 -240 168 -294 q 64 -99 64 -186 l 64 -61 l 249 -61 l 249 -93 q 301 -149 249 -149 q 368 -129 332 -149 l 431 -240 q 264 -294 363 -294 z \\\"},\\\"ᾔ\\\":{\\\"ha\\\":792,\\\"x_min\\\":38,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 710 636 769 q 743 543 743 651 l 743 -315 l 468 -287 l 468 497 q 458 554 468 539 q 426 569 447 569 q 339 503 382 569 l 339 0 l 64 0 l 64 551 q 38 728 64 650 l 292 761 q 322 669 310 733 q 425 746 372 722 q 543 769 478 769 m 289 1192 q 381 1156 344 1192 q 417 1065 417 1119 q 408 1011 417 1036 q 379 943 400 986 l 310 803 l 179 803 l 214 961 q 161 1065 161 1001 q 197 1155 161 1118 q 289 1192 233 1192 m 714 1133 l 581 796 l 431 825 l 493 1188 l 714 1133 m 264 -294 q 116 -240 168 -294 q 64 -99 64 -186 l 64 -61 l 249 -61 l 249 -93 q 301 -149 249 -149 q 368 -129 332 -149 l 431 -240 q 264 -294 363 -294 z \\\"},\\\"ᾕ\\\":{\\\"ha\\\":792,\\\"x_min\\\":38,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 710 636 769 q 743 543 743 651 l 743 -315 l 468 -287 l 468 497 q 458 554 468 539 q 426 569 447 569 q 339 503 382 569 l 339 0 l 64 0 l 64 551 q 38 728 64 650 l 292 761 q 322 669 310 733 q 425 746 372 722 q 543 769 478 769 m 251 1192 q 343 1155 307 1192 q 379 1065 379 1118 q 326 961 379 1001 l 361 803 l 231 803 l 161 943 q 132 1011 140 986 q 124 1065 124 1036 q 160 1156 124 1119 q 251 1192 196 1192 m 690 1133 l 557 796 l 407 825 l 469 1188 l 690 1133 m 264 -294 q 116 -240 168 -294 q 64 -99 64 -186 l 64 -61 l 249 -61 l 249 -93 q 301 -149 249 -149 q 368 -129 332 -149 l 431 -240 q 264 -294 363 -294 z \\\"},\\\"ᾖ\\\":{\\\"ha\\\":792,\\\"x_min\\\":38,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 710 636 769 q 743 543 743 651 l 743 -315 l 468 -287 l 468 497 q 458 554 468 539 q 426 569 447 569 q 339 503 382 569 l 339 0 l 64 0 l 64 551 q 38 728 64 650 l 292 761 q 322 669 310 733 q 425 746 372 722 q 543 769 478 769 m 481 1138 q 431 1144 451 1138 q 389 1167 411 1151 q 351 1191 363 1185 q 324 1197 339 1197 q 283 1183 299 1197 q 250 1138 268 1169 l 121 1200 q 201 1335 150 1282 q 317 1389 251 1389 q 369 1382 347 1389 q 414 1358 390 1375 q 451 1335 438 1342 q 478 1329 464 1329 q 517 1343 501 1329 q 550 1389 532 1357 l 679 1326 q 599 1190 650 1243 q 481 1138 547 1138 m 342 894 q 272 999 272 929 q 308 1088 272 1051 q 400 1125 344 1125 q 492 1089 456 1125 q 528 999 528 1053 q 518 942 528 968 q 486 876 508 917 l 449 810 l 328 810 l 342 894 m 264 -294 q 116 -240 168 -294 q 64 -99 64 -186 l 64 -61 l 249 -61 l 249 -93 q 301 -149 249 -149 q 368 -129 332 -149 l 431 -240 q 264 -294 363 -294 z \\\"},\\\"ᾗ\\\":{\\\"ha\\\":792,\\\"x_min\\\":38,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 710 636 769 q 743 543 743 651 l 743 -315 l 468 -287 l 468 497 q 458 554 468 539 q 426 569 447 569 q 339 503 382 569 l 339 0 l 64 0 l 64 551 q 38 728 64 650 l 292 761 q 322 669 310 733 q 425 746 372 722 q 543 769 478 769 m 481 1138 q 431 1144 451 1138 q 389 1167 411 1151 q 351 1191 363 1185 q 324 1197 339 1197 q 283 1183 299 1197 q 250 1138 268 1169 l 121 1200 q 201 1335 150 1282 q 317 1389 251 1389 q 369 1382 347 1389 q 414 1358 390 1375 q 451 1335 438 1342 q 478 1329 464 1329 q 517 1343 501 1329 q 550 1389 532 1357 l 679 1326 q 599 1190 650 1243 q 481 1138 547 1138 m 351 810 l 314 876 q 282 942 292 917 q 272 999 272 968 q 308 1089 272 1053 q 400 1125 344 1125 q 492 1088 456 1125 q 528 999 528 1051 q 461 894 528 931 l 472 810 l 351 810 m 264 -294 q 116 -240 168 -294 q 64 -99 64 -186 l 64 -61 l 249 -61 l 249 -93 q 301 -149 249 -149 q 368 -129 332 -149 l 431 -240 q 264 -294 363 -294 z \\\"},\\\"ῇ\\\":{\\\"ha\\\":792,\\\"x_min\\\":38,\\\"x_max\\\":743,\\\"o\\\":\\\"m 543 769 q 690 710 636 769 q 743 543 743 651 l 743 -315 l 468 -287 l 468 497 q 458 554 468 539 q 426 569 447 569 q 339 503 382 569 l 339 0 l 64 0 l 64 551 q 38 728 64 650 l 292 761 q 322 669 310 733 q 425 746 372 722 q 543 769 478 769 m 264 -294 q 116 -240 168 -294 q 64 -99 64 -186 l 64 -61 l 249 -61 l 249 -93 q 301 -149 249 -149 q 368 -129 332 -149 l 431 -240 q 264 -294 363 -294 z \\\"},\\\"ἰ\\\":{\\\"ha\\\":388,\\\"x_min\\\":49,\\\"x_max\\\":381,\\\"o\\\":\\\"m 324 281 q 336 209 324 233 q 381 168 349 185 l 303 -28 q 114 55 179 -10 q 49 244 49 119 l 49 742 l 324 742 l 324 281 z \\\"},\\\"ἱ\\\":{\\\"ha\\\":388,\\\"x_min\\\":17,\\\"x_max\\\":381,\\\"o\\\":\\\"m 324 281 q 336 209 324 233 q 381 168 349 185 l 303 -28 q 114 55 179 -10 q 49 244 49 119 l 49 742 l 324 742 l 324 281 m 144 1192 q 236 1155 200 1192 q 272 1065 272 1118 q 219 961 272 1001 l 254 803 l 124 803 l 54 943 q 25 1011 33 986 q 17 1065 17 1036 q 53 1156 17 1119 q 144 1192 89 1192 z \\\"},\\\"ἲ\\\":{\\\"ha\\\":388,\\\"x_min\\\":-99,\\\"x_max\\\":454,\\\"o\\\":\\\"m 324 281 q 336 209 324 233 q 381 168 349 185 l 303 -28 q 114 55 179 -10 q 49 244 49 119 l 49 742 l 324 742 l 324 281 m 29 1192 q 121 1156 85 1192 q 157 1065 157 1119 q 149 1011 157 1036 q 119 943 140 986 l 50 803 l -81 803 l -46 961 q -99 1065 -99 1001 q -62 1155 -99 1118 q 29 1192 -26 1192 m 454 825 l 304 796 l 171 1133 l 392 1188 l 454 825 z \\\"},\\\"ἳ\\\":{\\\"ha\\\":388,\\\"x_min\\\":-118,\\\"x_max\\\":435,\\\"o\\\":\\\"m 324 281 q 336 209 324 233 q 381 168 349 185 l 303 -28 q 114 55 179 -10 q 49 244 49 119 l 49 742 l 324 742 l 324 281 m 10 1192 q 101 1155 65 1192 q 138 1065 138 1118 q 85 961 138 1001 l 119 803 l -11 803 l -81 943 q -110 1011 -101 986 q -118 1065 -118 1036 q -82 1156 -118 1119 q 10 1192 -46 1192 m 435 825 l 285 796 l 151 1133 l 372 1188 l 435 825 z \\\"},\\\"ἴ\\\":{\\\"ha\\\":388,\\\"x_min\\\":-53,\\\"x_max\\\":500,\\\"o\\\":\\\"m 324 281 q 336 209 324 233 q 381 168 349 185 l 303 -28 q 114 55 179 -10 q 49 244 49 119 l 49 742 l 324 742 l 324 281 m 75 1192 q 167 1156 131 1192 q 203 1065 203 1119 q 194 1011 203 1036 q 165 943 186 986 l 96 803 l -35 803 l 0 961 q -53 1065 -53 1001 q -17 1155 -53 1118 q 75 1192 19 1192 m 500 1133 l 367 796 l 217 825 l 279 1188 l 500 1133 z \\\"},\\\"ἵ\\\":{\\\"ha\\\":388,\\\"x_min\\\":-90,\\\"x_max\\\":476,\\\"o\\\":\\\"m 324 281 q 336 209 324 233 q 381 168 349 185 l 303 -28 q 114 55 179 -10 q 49 244 49 119 l 49 742 l 324 742 l 324 281 m 38 1192 q 129 1155 93 1192 q 165 1065 165 1118 q 113 961 165 1001 l 147 803 l 17 803 l -53 943 q -82 1011 -74 986 q -90 1065 -90 1036 q -54 1156 -90 1119 q 38 1192 -18 1192 m 476 1133 l 343 796 l 193 825 l 256 1188 l 476 1133 z \\\"},\\\"ἶ\\\":{\\\"ha\\\":388,\\\"x_min\\\":-93,\\\"x_max\\\":465,\\\"o\\\":\\\"m 324 281 q 336 209 324 233 q 381 168 349 185 l 303 -28 q 114 55 179 -10 q 49 244 49 119 l 49 742 l 324 742 l 324 281 m 267 1138 q 217 1144 238 1138 q 175 1167 197 1151 q 137 1191 149 1185 q 110 1197 125 1197 q 69 1183 85 1197 q 36 1138 54 1169 l -93 1200 q -13 1335 -64 1282 q 103 1389 38 1389 q 155 1382 133 1389 q 200 1358 176 1375 q 237 1335 224 1342 q 264 1329 250 1329 q 303 1343 288 1329 q 336 1389 318 1357 l 465 1326 q 385 1190 436 1243 q 267 1138 333 1138 m 128 894 q 58 999 58 929 q 94 1088 58 1051 q 186 1125 131 1125 q 278 1089 242 1125 q 314 999 314 1053 q 304 942 314 968 q 272 876 294 917 l 235 810 l 114 810 l 128 894 z \\\"},\\\"ἷ\\\":{\\\"ha\\\":388,\\\"x_min\\\":-93,\\\"x_max\\\":465,\\\"o\\\":\\\"m 324 281 q 336 209 324 233 q 381 168 349 185 l 303 -28 q 114 55 179 -10 q 49 244 49 119 l 49 742 l 324 742 l 324 281 m 267 1138 q 217 1144 238 1138 q 175 1167 197 1151 q 137 1191 149 1185 q 110 1197 125 1197 q 69 1183 85 1197 q 36 1138 54 1169 l -93 1200 q -13 1335 -64 1282 q 103 1389 38 1389 q 155 1382 133 1389 q 200 1358 176 1375 q 237 1335 224 1342 q 264 1329 250 1329 q 303 1343 288 1329 q 336 1389 318 1357 l 465 1326 q 385 1190 436 1243 q 267 1138 333 1138 m 138 810 l 100 876 q 68 942 78 917 q 58 999 58 968 q 94 1089 58 1053 q 186 1125 131 1125 q 278 1088 242 1125 q 314 999 314 1051 q 247 894 314 931 l 258 810 l 138 810 z \\\"},\\\"ὶ\\\":{\\\"ha\\\":388,\\\"x_min\\\":-42,\\\"x_max\\\":381,\\\"o\\\":\\\"m 324 281 q 336 209 324 233 q 381 168 349 185 l 303 -28 q 114 55 179 -10 q 49 244 49 119 l 49 742 l 324 742 l 324 281 m 274 838 l 99 808 l -42 1151 l 221 1206 l 274 838 z \\\"},\\\"ί\\\":{\\\"ha\\\":388,\\\"x_min\\\":49,\\\"x_max\\\":417,\\\"o\\\":\\\"m 324 281 q 336 209 324 233 q 381 168 349 185 l 303 -28 q 114 55 179 -10 q 49 244 49 119 l 49 742 l 324 742 l 324 281 m 417 1151 l 276 808 l 101 838 l 154 1206 l 417 1151 z \\\"},\\\"ῖ\\\":{\\\"ha\\\":388,\\\"x_min\\\":-93,\\\"x_max\\\":465,\\\"o\\\":\\\"m 324 281 q 336 209 324 233 q 381 168 349 185 l 303 -28 q 114 55 179 -10 q 49 244 49 119 l 49 742 l 324 742 l 324 281 z \\\"},\\\"ῐ\\\":{\\\"ha\\\":388,\\\"x_min\\\":-71,\\\"x_max\\\":443,\\\"o\\\":\\\"m 324 281 q 336 209 324 233 q 381 168 349 185 l 303 -28 q 114 55 179 -10 q 49 244 49 119 l 49 742 l 324 742 l 324 281 m 186 869 q 3 947 68 869 q -71 1142 -61 1025 l 72 1165 q 113 1085 85 1114 q 186 1056 142 1056 q 259 1085 231 1056 q 300 1165 288 1114 l 443 1142 q 369 947 433 1025 q 186 869 304 869 z \\\"},\\\"ῑ\\\":{\\\"ha\\\":388,\\\"x_min\\\":-40,\\\"x_max\\\":411,\\\"o\\\":\\\"m 324 281 q 336 209 324 233 q 381 168 349 185 l 303 -28 q 114 55 179 -10 q 49 244 49 119 l 49 742 l 324 742 l 324 281 m -40 900 l -40 1086 l 411 1086 l 411 900 l -40 900 z \\\"},\\\"ῒ\\\":{\\\"ha\\\":388,\\\"x_min\\\":-131,\\\"x_max\\\":501,\\\"o\\\":\\\"m 324 281 q 336 209 324 233 q 381 168 349 185 l 303 -28 q 114 55 179 -10 q 49 244 49 119 l 49 742 l 324 742 l 324 281 m 293 1108 l 192 1018 l -46 1225 l 99 1367 l 293 1108 m 1 1072 q 95 1035 57 1072 q 133 944 133 997 q 95 853 133 890 q 1 815 57 815 q -92 853 -53 815 q -131 944 -131 890 q -92 1035 -131 997 q 1 1072 -53 1072 m 369 1072 q 463 1035 425 1072 q 501 944 501 997 q 463 853 501 890 q 369 815 425 815 q 276 853 315 815 q 238 944 238 890 q 276 1035 238 997 q 369 1072 315 1072 z \\\"},\\\"ΐ\\\":{\\\"ha\\\":388,\\\"x_min\\\":-131,\\\"x_max\\\":501,\\\"o\\\":\\\"m 324 281 q 336 209 324 233 q 381 168 349 185 l 303 -28 q 114 55 179 -10 q 49 244 49 119 l 49 742 l 324 742 l 324 281 m 419 1225 l 182 1018 l 81 1108 l 275 1367 l 419 1225 m 1 1072 q 94 1035 56 1072 q 133 944 133 997 q 94 853 133 890 q 1 815 56 815 q -92 853 -54 815 q -131 944 -131 890 q -92 1035 -131 997 q 1 1072 -54 1072 m 369 1072 q 463 1035 424 1072 q 501 944 501 997 q 463 853 501 890 q 369 815 424 815 q 276 853 314 815 q 238 944 238 890 q 276 1035 238 997 q 369 1072 314 1072 z \\\"},\\\"ῗ\\\":{\\\"ha\\\":388,\\\"x_min\\\":-121,\\\"x_max\\\":483,\\\"o\\\":\\\"m 324 281 q 336 209 324 233 q 381 168 349 185 l 303 -28 q 114 55 179 -10 q 49 244 49 119 l 49 742 l 324 742 l 324 281 z \\\"},\\\"ὀ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 z \\\"},\\\"ὁ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 m 364 1192 q 456 1155 419 1192 q 492 1065 492 1118 q 439 961 492 1001 l 474 803 l 343 803 l 274 943 q 244 1011 253 986 q 236 1065 236 1036 q 272 1156 236 1119 q 364 1192 308 1192 z \\\"},\\\"ὂ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 m 249 1192 q 340 1156 304 1192 q 376 1065 376 1119 q 368 1011 376 1036 q 339 943 360 986 l 269 803 l 139 803 l 174 961 q 121 1065 121 1001 q 157 1155 121 1118 q 249 1192 193 1192 m 674 825 l 524 796 l 390 1133 l 611 1188 l 674 825 z \\\"},\\\"ὃ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 m 229 1192 q 321 1155 285 1192 q 357 1065 357 1118 q 304 961 357 1001 l 339 803 l 208 803 l 139 943 q 110 1011 118 986 q 101 1065 101 1036 q 138 1156 101 1119 q 229 1192 174 1192 m 654 825 l 504 796 l 371 1133 l 592 1188 l 654 825 z \\\"},\\\"ὄ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 m 294 1192 q 386 1156 350 1192 q 422 1065 422 1119 q 414 1011 422 1036 q 385 943 406 986 l 315 803 l 185 803 l 219 961 q 167 1065 167 1001 q 203 1155 167 1118 q 294 1192 239 1192 m 719 1133 l 586 796 l 436 825 l 499 1188 l 719 1133 z \\\"},\\\"ὅ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 m 257 1192 q 349 1155 313 1192 q 385 1065 385 1118 q 332 961 385 1001 l 367 803 l 236 803 l 167 943 q 138 1011 146 986 q 129 1065 129 1036 q 165 1156 129 1119 q 257 1192 201 1192 m 696 1133 l 563 796 l 413 825 l 475 1188 l 696 1133 z \\\"},\\\"ὸ\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 m 493 838 l 318 808 l 178 1151 l 440 1206 l 493 838 z \\\"},\\\"ό\\\":{\\\"ha\\\":811,\\\"x_min\\\":24,\\\"x_max\\\":788,\\\"o\\\":\\\"m 406 769 q 685 665 583 769 q 788 369 788 561 q 741 160 788 250 q 608 21 694 69 q 406 -28 522 -28 q 126 76 228 -28 q 24 372 24 181 q 70 582 24 492 q 203 721 117 672 q 406 769 289 769 m 406 572 q 329 525 353 572 q 306 372 306 478 q 329 216 306 263 q 406 169 353 169 q 482 217 458 169 q 506 369 506 264 q 482 526 506 479 q 406 572 458 572 m 636 1151 l 496 808 l 321 838 l 374 1206 l 636 1151 z \\\"},\\\"ῤ\\\":{\\\"ha\\\":815,\\\"x_min\\\":42,\\\"x_max\\\":785,\\\"o\\\":\\\"m 408 769 q 688 669 590 769 q 785 374 785 568 q 748 167 785 258 q 644 24 711 76 q 489 -28 576 -28 q 395 -8 438 -28 q 317 56 353 11 l 317 -287 l 42 -315 l 42 385 q 133 670 42 571 q 408 769 224 769 m 404 168 q 503 369 503 168 q 478 531 503 489 q 408 574 454 574 q 338 526 358 574 q 317 365 317 479 l 317 228 q 356 181 335 194 q 404 168 376 168 z \\\"},\\\"ῥ\\\":{\\\"ha\\\":815,\\\"x_min\\\":42,\\\"x_max\\\":785,\\\"o\\\":\\\"m 408 769 q 688 669 590 769 q 785 374 785 568 q 748 167 785 258 q 644 24 711 76 q 489 -28 576 -28 q 395 -8 438 -28 q 317 56 353 11 l 317 -287 l 42 -315 l 42 385 q 133 670 42 571 q 408 769 224 769 m 404 168 q 503 369 503 168 q 478 531 503 489 q 408 574 454 574 q 338 526 358 574 q 317 365 317 479 l 317 228 q 356 181 335 194 q 404 168 376 168 m 367 1192 q 458 1155 422 1192 q 494 1065 494 1118 q 442 961 494 1001 l 476 803 l 346 803 l 276 943 q 247 1011 256 986 q 239 1065 239 1036 q 275 1156 239 1119 q 367 1192 311 1192 z \\\"},\\\"ὐ\\\":{\\\"ha\\\":776,\\\"x_min\\\":49,\\\"x_max\\\":742,\\\"o\\\":\\\"m 699 742 q 730 544 718 640 q 742 339 742 447 q 688 131 742 214 q 547 10 633 49 q 358 -28 460 -28 q 136 44 224 -28 q 49 265 49 117 l 49 742 l 324 742 l 324 264 q 338 190 324 211 q 381 169 353 169 q 443 215 419 169 q 467 360 467 261 q 429 742 467 517 l 699 742 z \\\"},\\\"ὑ\\\":{\\\"ha\\\":776,\\\"x_min\\\":49,\\\"x_max\\\":742,\\\"o\\\":\\\"m 699 742 q 730 544 718 640 q 742 339 742 447 q 688 131 742 214 q 547 10 633 49 q 358 -28 460 -28 q 136 44 224 -28 q 49 265 49 117 l 49 742 l 324 742 l 324 264 q 338 190 324 211 q 381 169 353 169 q 443 215 419 169 q 467 360 467 261 q 429 742 467 517 l 699 742 m 336 1192 q 428 1155 392 1192 q 464 1065 464 1118 q 411 961 464 1001 l 446 803 l 315 803 l 246 943 q 217 1011 225 986 q 208 1065 208 1036 q 244 1156 208 1119 q 336 1192 281 1192 z \\\"},\\\"ὒ\\\":{\\\"ha\\\":776,\\\"x_min\\\":49,\\\"x_max\\\":742,\\\"o\\\":\\\"m 699 742 q 730 544 718 640 q 742 339 742 447 q 688 131 742 214 q 547 10 633 49 q 358 -28 460 -28 q 136 44 224 -28 q 49 265 49 117 l 49 742 l 324 742 l 324 264 q 338 190 324 211 q 381 169 353 169 q 443 215 419 169 q 467 360 467 261 q 429 742 467 517 l 699 742 m 221 1192 q 313 1156 276 1192 q 349 1065 349 1119 q 340 1011 349 1036 q 311 943 332 986 l 242 803 l 111 803 l 146 961 q 93 1065 93 1001 q 129 1155 93 1118 q 221 1192 165 1192 m 646 825 l 496 796 l 363 1133 l 583 1188 l 646 825 z \\\"},\\\"ὓ\\\":{\\\"ha\\\":776,\\\"x_min\\\":49,\\\"x_max\\\":742,\\\"o\\\":\\\"m 699 742 q 730 544 718 640 q 742 339 742 447 q 688 131 742 214 q 547 10 633 49 q 358 -28 460 -28 q 136 44 224 -28 q 49 265 49 117 l 49 742 l 324 742 l 324 264 q 338 190 324 211 q 381 169 353 169 q 443 215 419 169 q 467 360 467 261 q 429 742 467 517 l 699 742 m 201 1192 q 293 1155 257 1192 q 329 1065 329 1118 q 276 961 329 1001 l 311 803 l 181 803 l 111 943 q 82 1011 90 986 q 74 1065 74 1036 q 110 1156 74 1119 q 201 1192 146 1192 m 626 825 l 476 796 l 343 1133 l 564 1188 l 626 825 z \\\"},\\\"ὔ\\\":{\\\"ha\\\":776,\\\"x_min\\\":49,\\\"x_max\\\":742,\\\"o\\\":\\\"m 699 742 q 730 544 718 640 q 742 339 742 447 q 688 131 742 214 q 547 10 633 49 q 358 -28 460 -28 q 136 44 224 -28 q 49 265 49 117 l 49 742 l 324 742 l 324 264 q 338 190 324 211 q 381 169 353 169 q 443 215 419 169 q 467 360 467 261 q 429 742 467 517 l 699 742 m 267 1192 q 358 1156 322 1192 q 394 1065 394 1119 q 386 1011 394 1036 q 357 943 378 986 l 288 803 l 157 803 l 192 961 q 139 1065 139 1001 q 175 1155 139 1118 q 267 1192 211 1192 m 692 1133 l 558 796 l 408 825 l 471 1188 l 692 1133 z \\\"},\\\"ὕ\\\":{\\\"ha\\\":776,\\\"x_min\\\":49,\\\"x_max\\\":742,\\\"o\\\":\\\"m 699 742 q 730 544 718 640 q 742 339 742 447 q 688 131 742 214 q 547 10 633 49 q 358 -28 460 -28 q 136 44 224 -28 q 49 265 49 117 l 49 742 l 324 742 l 324 264 q 338 190 324 211 q 381 169 353 169 q 443 215 419 169 q 467 360 467 261 q 429 742 467 517 l 699 742 m 229 1192 q 321 1155 285 1192 q 357 1065 357 1118 q 304 961 357 1001 l 339 803 l 208 803 l 139 943 q 110 1011 118 986 q 101 1065 101 1036 q 138 1156 101 1119 q 229 1192 174 1192 m 668 1133 l 535 796 l 385 825 l 447 1188 l 668 1133 z \\\"},\\\"ὖ\\\":{\\\"ha\\\":776,\\\"x_min\\\":49,\\\"x_max\\\":742,\\\"o\\\":\\\"m 699 742 q 730 544 718 640 q 742 339 742 447 q 688 131 742 214 q 547 10 633 49 q 358 -28 460 -28 q 136 44 224 -28 q 49 265 49 117 l 49 742 l 324 742 l 324 264 q 338 190 324 211 q 381 169 353 169 q 443 215 419 169 q 467 360 467 261 q 429 742 467 517 l 699 742 m 458 1138 q 409 1144 429 1138 q 367 1167 389 1151 q 328 1191 340 1185 q 301 1197 317 1197 q 261 1183 276 1197 q 228 1138 246 1169 l 99 1200 q 178 1335 128 1282 q 294 1389 229 1389 q 347 1382 325 1389 q 392 1358 368 1375 q 428 1335 415 1342 q 456 1329 442 1329 q 494 1343 479 1329 q 528 1389 510 1357 l 657 1326 q 576 1190 628 1243 q 458 1138 525 1138 m 319 894 q 250 999 250 929 q 286 1088 250 1051 q 378 1125 322 1125 q 469 1089 433 1125 q 506 999 506 1053 q 496 942 506 968 q 464 876 486 917 l 426 810 l 306 810 l 319 894 z \\\"},\\\"ὗ\\\":{\\\"ha\\\":776,\\\"x_min\\\":49,\\\"x_max\\\":742,\\\"o\\\":\\\"m 699 742 q 730 544 718 640 q 742 339 742 447 q 688 131 742 214 q 547 10 633 49 q 358 -28 460 -28 q 136 44 224 -28 q 49 265 49 117 l 49 742 l 324 742 l 324 264 q 338 190 324 211 q 381 169 353 169 q 443 215 419 169 q 467 360 467 261 q 429 742 467 517 l 699 742 m 458 1138 q 409 1144 429 1138 q 367 1167 389 1151 q 328 1191 340 1185 q 301 1197 317 1197 q 261 1183 276 1197 q 228 1138 246 1169 l 99 1200 q 178 1335 128 1282 q 294 1389 229 1389 q 347 1382 325 1389 q 392 1358 368 1375 q 428 1335 415 1342 q 456 1329 442 1329 q 494 1343 479 1329 q 528 1389 510 1357 l 657 1326 q 576 1190 628 1243 q 458 1138 525 1138 m 329 810 l 292 876 q 260 942 269 917 q 250 999 250 968 q 286 1089 250 1053 q 378 1125 322 1125 q 469 1088 433 1125 q 506 999 506 1051 q 439 894 506 931 l 450 810 l 329 810 z \\\"},\\\"ὺ\\\":{\\\"ha\\\":776,\\\"x_min\\\":49,\\\"x_max\\\":742,\\\"o\\\":\\\"m 699 742 q 730 544 718 640 q 742 339 742 447 q 688 131 742 214 q 547 10 633 49 q 358 -28 460 -28 q 136 44 224 -28 q 49 265 49 117 l 49 742 l 324 742 l 324 264 q 338 190 324 211 q 381 169 353 169 q 443 215 419 169 q 467 360 467 261 q 429 742 467 517 l 699 742 m 465 838 l 290 808 l 150 1151 l 413 1206 l 465 838 z \\\"},\\\"ύ\\\":{\\\"ha\\\":776,\\\"x_min\\\":49,\\\"x_max\\\":742,\\\"o\\\":\\\"m 699 742 q 730 544 718 640 q 742 339 742 447 q 688 131 742 214 q 547 10 633 49 q 358 -28 460 -28 q 136 44 224 -28 q 49 265 49 117 l 49 742 l 324 742 l 324 264 q 338 190 324 211 q 381 169 353 169 q 443 215 419 169 q 467 360 467 261 q 429 742 467 517 l 699 742 m 608 1151 l 468 808 l 293 838 l 346 1206 l 608 1151 z \\\"},\\\"ῦ\\\":{\\\"ha\\\":776,\\\"x_min\\\":49,\\\"x_max\\\":742,\\\"o\\\":\\\"m 699 742 q 730 544 718 640 q 742 339 742 447 q 688 131 742 214 q 547 10 633 49 q 358 -28 460 -28 q 136 44 224 -28 q 49 265 49 117 l 49 742 l 324 742 l 324 264 q 338 190 324 211 q 381 169 353 169 q 443 215 419 169 q 467 360 467 261 q 429 742 467 517 l 699 742 z \\\"},\\\"ῠ\\\":{\\\"ha\\\":776,\\\"x_min\\\":49,\\\"x_max\\\":742,\\\"o\\\":\\\"m 699 742 q 730 544 718 640 q 742 339 742 447 q 688 131 742 214 q 547 10 633 49 q 358 -28 460 -28 q 136 44 224 -28 q 49 265 49 117 l 49 742 l 324 742 l 324 264 q 338 190 324 211 q 381 169 353 169 q 443 215 419 169 q 467 360 467 261 q 429 742 467 517 l 699 742 m 378 869 q 195 947 260 869 q 121 1142 131 1025 l 264 1165 q 305 1085 276 1114 q 378 1056 333 1056 q 451 1085 422 1056 q 492 1165 479 1114 l 635 1142 q 560 947 625 1025 q 378 869 496 869 z \\\"},\\\"ῡ\\\":{\\\"ha\\\":776,\\\"x_min\\\":49,\\\"x_max\\\":742,\\\"o\\\":\\\"m 699 742 q 730 544 718 640 q 742 339 742 447 q 688 131 742 214 q 547 10 633 49 q 358 -28 460 -28 q 136 44 224 -28 q 49 265 49 117 l 49 742 l 324 742 l 324 264 q 338 190 324 211 q 381 169 353 169 q 443 215 419 169 q 467 360 467 261 q 429 742 467 517 l 699 742 m 151 900 l 151 1086 l 603 1086 l 603 900 l 151 900 z \\\"},\\\"ῢ\\\":{\\\"ha\\\":776,\\\"x_min\\\":49,\\\"x_max\\\":742,\\\"o\\\":\\\"m 699 742 q 730 544 718 640 q 742 339 742 447 q 688 131 742 214 q 547 10 633 49 q 358 -28 460 -28 q 136 44 224 -28 q 49 265 49 117 l 49 742 l 324 742 l 324 264 q 338 190 324 211 q 381 169 353 169 q 443 215 419 169 q 467 360 467 261 q 429 742 467 517 l 699 742 m 485 1108 l 383 1018 l 146 1225 l 290 1367 l 485 1108 m 193 1072 q 287 1035 249 1072 q 325 944 325 997 q 287 853 325 890 q 193 815 249 815 q 100 853 139 815 q 61 944 61 890 q 100 1035 61 997 q 193 1072 139 1072 m 561 1072 q 655 1035 617 1072 q 693 944 693 997 q 655 853 693 890 q 561 815 617 815 q 468 853 507 815 q 429 944 429 890 q 468 1035 429 997 q 561 1072 507 1072 z \\\"},\\\"ΰ\\\":{\\\"ha\\\":776,\\\"x_min\\\":49,\\\"x_max\\\":742,\\\"o\\\":\\\"m 699 742 q 730 544 718 640 q 742 339 742 447 q 688 131 742 214 q 547 10 633 49 q 358 -28 460 -28 q 136 44 224 -28 q 49 265 49 117 l 49 742 l 324 742 l 324 264 q 338 190 324 211 q 381 169 353 169 q 443 215 419 169 q 467 360 467 261 q 429 742 467 517 l 699 742 m 611 1225 l 374 1018 l 272 1108 l 467 1367 l 611 1225 m 193 1072 q 286 1035 247 1072 q 325 944 325 997 q 286 853 325 890 q 193 815 247 815 q 99 853 138 815 q 61 944 61 890 q 99 1035 61 997 q 193 1072 138 1072 m 561 1072 q 654 1035 615 1072 q 693 944 693 997 q 654 853 693 890 q 561 815 615 815 q 467 853 506 815 q 429 944 429 890 q 467 1035 429 997 q 561 1072 506 1072 z \\\"},\\\"ῧ\\\":{\\\"ha\\\":776,\\\"x_min\\\":49,\\\"x_max\\\":742,\\\"o\\\":\\\"m 699 742 q 730 544 718 640 q 742 339 742 447 q 688 131 742 214 q 547 10 633 49 q 358 -28 460 -28 q 136 44 224 -28 q 49 265 49 117 l 49 742 l 324 742 l 324 264 q 338 190 324 211 q 381 169 353 169 q 443 215 419 169 q 467 360 467 261 q 429 742 467 517 l 699 742 z \\\"},\\\"ὠ\\\":{\\\"ha\\\":1072,\\\"x_min\\\":28,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 956 742 q 1044 339 1044 554 q 967 65 1044 157 q 760 -28 890 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 103 64 179 -28 q 28 339 28 156 q 117 742 28 554 l 360 742 q 311 535 328 624 q 294 356 294 447 q 311 213 294 257 q 361 169 328 169 q 398 188 386 169 q 410 264 410 207 l 410 493 l 663 526 l 663 264 q 676 188 663 207 q 715 169 689 169 q 763 213 747 169 q 778 356 778 256 q 761 536 778 447 q 713 742 744 625 l 956 742 z \\\"},\\\"ὡ\\\":{\\\"ha\\\":1072,\\\"x_min\\\":28,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 956 742 q 1044 339 1044 554 q 967 65 1044 157 q 760 -28 890 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 103 64 179 -28 q 28 339 28 156 q 117 742 28 554 l 360 742 q 311 535 328 624 q 294 356 294 447 q 311 213 294 257 q 361 169 328 169 q 398 188 386 169 q 410 264 410 207 l 410 493 l 663 526 l 663 264 q 676 188 663 207 q 715 169 689 169 q 763 213 747 169 q 778 356 778 256 q 761 536 778 447 q 713 742 744 625 l 956 742 m 494 1192 q 586 1155 550 1192 q 622 1065 622 1118 q 569 961 622 1001 l 604 803 l 474 803 l 404 943 q 375 1011 383 986 q 367 1065 367 1036 q 403 1156 367 1119 q 494 1192 439 1192 z \\\"},\\\"ὢ\\\":{\\\"ha\\\":1072,\\\"x_min\\\":28,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 956 742 q 1044 339 1044 554 q 967 65 1044 157 q 760 -28 890 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 103 64 179 -28 q 28 339 28 156 q 117 742 28 554 l 360 742 q 311 535 328 624 q 294 356 294 447 q 311 213 294 257 q 361 169 328 169 q 398 188 386 169 q 410 264 410 207 l 410 493 l 663 526 l 663 264 q 676 188 663 207 q 715 169 689 169 q 763 213 747 169 q 778 356 778 256 q 761 536 778 447 q 713 742 744 625 l 956 742 m 379 1192 q 471 1156 435 1192 q 507 1065 507 1119 q 499 1011 507 1036 q 469 943 490 986 l 400 803 l 269 803 l 304 961 q 251 1065 251 1001 q 288 1155 251 1118 q 379 1192 324 1192 m 804 825 l 654 796 l 521 1133 l 742 1188 l 804 825 z \\\"},\\\"ὣ\\\":{\\\"ha\\\":1072,\\\"x_min\\\":28,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 956 742 q 1044 339 1044 554 q 967 65 1044 157 q 760 -28 890 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 103 64 179 -28 q 28 339 28 156 q 117 742 28 554 l 360 742 q 311 535 328 624 q 294 356 294 447 q 311 213 294 257 q 361 169 328 169 q 398 188 386 169 q 410 264 410 207 l 410 493 l 663 526 l 663 264 q 676 188 663 207 q 715 169 689 169 q 763 213 747 169 q 778 356 778 256 q 761 536 778 447 q 713 742 744 625 l 956 742 m 360 1192 q 451 1155 415 1192 q 488 1065 488 1118 q 435 961 488 1001 l 469 803 l 339 803 l 269 943 q 240 1011 249 986 q 232 1065 232 1036 q 268 1156 232 1119 q 360 1192 304 1192 m 785 825 l 635 796 l 501 1133 l 722 1188 l 785 825 z \\\"},\\\"ὤ\\\":{\\\"ha\\\":1072,\\\"x_min\\\":28,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 956 742 q 1044 339 1044 554 q 967 65 1044 157 q 760 -28 890 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 103 64 179 -28 q 28 339 28 156 q 117 742 28 554 l 360 742 q 311 535 328 624 q 294 356 294 447 q 311 213 294 257 q 361 169 328 169 q 398 188 386 169 q 410 264 410 207 l 410 493 l 663 526 l 663 264 q 676 188 663 207 q 715 169 689 169 q 763 213 747 169 q 778 356 778 256 q 761 536 778 447 q 713 742 744 625 l 956 742 m 425 1192 q 517 1156 481 1192 q 553 1065 553 1119 q 544 1011 553 1036 q 515 943 536 986 l 446 803 l 315 803 l 350 961 q 297 1065 297 1001 q 333 1155 297 1118 q 425 1192 369 1192 m 850 1133 l 717 796 l 567 825 l 629 1188 l 850 1133 z \\\"},\\\"ὥ\\\":{\\\"ha\\\":1072,\\\"x_min\\\":28,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 956 742 q 1044 339 1044 554 q 967 65 1044 157 q 760 -28 890 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 103 64 179 -28 q 28 339 28 156 q 117 742 28 554 l 360 742 q 311 535 328 624 q 294 356 294 447 q 311 213 294 257 q 361 169 328 169 q 398 188 386 169 q 410 264 410 207 l 410 493 l 663 526 l 663 264 q 676 188 663 207 q 715 169 689 169 q 763 213 747 169 q 778 356 778 256 q 761 536 778 447 q 713 742 744 625 l 956 742 m 388 1192 q 479 1155 443 1192 q 515 1065 515 1118 q 463 961 515 1001 l 497 803 l 367 803 l 297 943 q 268 1011 276 986 q 260 1065 260 1036 q 296 1156 260 1119 q 388 1192 332 1192 m 826 1133 l 693 796 l 543 825 l 606 1188 l 826 1133 z \\\"},\\\"ὦ\\\":{\\\"ha\\\":1072,\\\"x_min\\\":28,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 956 742 q 1044 339 1044 554 q 967 65 1044 157 q 760 -28 890 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 103 64 179 -28 q 28 339 28 156 q 117 742 28 554 l 360 742 q 311 535 328 624 q 294 356 294 447 q 311 213 294 257 q 361 169 328 169 q 398 188 386 169 q 410 264 410 207 l 410 493 l 663 526 l 663 264 q 676 188 663 207 q 715 169 689 169 q 763 213 747 169 q 778 356 778 256 q 761 536 778 447 q 713 742 744 625 l 956 742 m 617 1138 q 567 1144 588 1138 q 525 1167 547 1151 q 487 1191 499 1185 q 460 1197 475 1197 q 419 1183 435 1197 q 386 1138 404 1169 l 257 1200 q 337 1335 286 1282 q 453 1389 388 1389 q 505 1382 483 1389 q 550 1358 526 1375 q 587 1335 574 1342 q 614 1329 600 1329 q 653 1343 638 1329 q 686 1389 668 1357 l 815 1326 q 735 1190 786 1243 q 617 1138 683 1138 m 478 894 q 408 999 408 929 q 444 1088 408 1051 q 536 1125 481 1125 q 628 1089 592 1125 q 664 999 664 1053 q 654 942 664 968 q 622 876 644 917 l 585 810 l 464 810 l 478 894 z \\\"},\\\"ὧ\\\":{\\\"ha\\\":1072,\\\"x_min\\\":28,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 956 742 q 1044 339 1044 554 q 967 65 1044 157 q 760 -28 890 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 103 64 179 -28 q 28 339 28 156 q 117 742 28 554 l 360 742 q 311 535 328 624 q 294 356 294 447 q 311 213 294 257 q 361 169 328 169 q 398 188 386 169 q 410 264 410 207 l 410 493 l 663 526 l 663 264 q 676 188 663 207 q 715 169 689 169 q 763 213 747 169 q 778 356 778 256 q 761 536 778 447 q 713 742 744 625 l 956 742 m 617 1138 q 567 1144 588 1138 q 525 1167 547 1151 q 487 1191 499 1185 q 460 1197 475 1197 q 419 1183 435 1197 q 386 1138 404 1169 l 257 1200 q 337 1335 286 1282 q 453 1389 388 1389 q 505 1382 483 1389 q 550 1358 526 1375 q 587 1335 574 1342 q 614 1329 600 1329 q 653 1343 638 1329 q 686 1389 668 1357 l 815 1326 q 735 1190 786 1243 q 617 1138 683 1138 m 488 810 l 450 876 q 418 942 428 917 q 408 999 408 968 q 444 1089 408 1053 q 536 1125 481 1125 q 628 1088 592 1125 q 664 999 664 1051 q 597 894 664 931 l 608 810 l 488 810 z \\\"},\\\"ὼ\\\":{\\\"ha\\\":1072,\\\"x_min\\\":28,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 956 742 q 1044 339 1044 554 q 967 65 1044 157 q 760 -28 890 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 103 64 179 -28 q 28 339 28 156 q 117 742 28 554 l 360 742 q 311 535 328 624 q 294 356 294 447 q 311 213 294 257 q 361 169 328 169 q 398 188 386 169 q 410 264 410 207 l 410 493 l 663 526 l 663 264 q 676 188 663 207 q 715 169 689 169 q 763 213 747 169 q 778 356 778 256 q 761 536 778 447 q 713 742 744 625 l 956 742 m 624 838 l 449 808 l 308 1151 l 571 1206 l 624 838 z \\\"},\\\"ώ\\\":{\\\"ha\\\":1072,\\\"x_min\\\":28,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 956 742 q 1044 339 1044 554 q 967 65 1044 157 q 760 -28 890 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 103 64 179 -28 q 28 339 28 156 q 117 742 28 554 l 360 742 q 311 535 328 624 q 294 356 294 447 q 311 213 294 257 q 361 169 328 169 q 398 188 386 169 q 410 264 410 207 l 410 493 l 663 526 l 663 264 q 676 188 663 207 q 715 169 689 169 q 763 213 747 169 q 778 356 778 256 q 761 536 778 447 q 713 742 744 625 l 956 742 m 767 1151 l 626 808 l 451 838 l 504 1206 l 767 1151 z \\\"},\\\"ῶ\\\":{\\\"ha\\\":1072,\\\"x_min\\\":28,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 956 742 q 1044 339 1044 554 q 967 65 1044 157 q 760 -28 890 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 103 64 179 -28 q 28 339 28 156 q 117 742 28 554 l 360 742 q 311 535 328 624 q 294 356 294 447 q 311 213 294 257 q 361 169 328 169 q 398 188 386 169 q 410 264 410 207 l 410 493 l 663 526 l 663 264 q 676 188 663 207 q 715 169 689 169 q 763 213 747 169 q 778 356 778 256 q 761 536 778 447 q 713 742 744 625 l 956 742 z \\\"},\\\"ῳ\\\":{\\\"ha\\\":1072,\\\"x_min\\\":28,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 956 742 q 1044 339 1044 554 q 967 65 1044 157 q 760 -28 890 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 103 64 179 -28 q 28 339 28 156 q 117 742 28 554 l 360 742 q 311 535 328 624 q 294 356 294 447 q 311 213 294 257 q 361 169 328 169 q 398 188 386 169 q 410 264 410 207 l 410 493 l 663 526 l 663 264 q 676 188 663 207 q 715 169 689 169 q 763 213 747 169 q 778 356 778 256 q 761 536 778 447 q 713 742 744 625 l 956 742 m 644 -294 q 497 -240 549 -294 q 444 -99 444 -186 l 444 -61 l 629 -61 l 629 -93 q 682 -149 629 -149 q 749 -129 713 -149 l 811 -240 q 644 -294 743 -294 z \\\"},\\\"ῲ\\\":{\\\"ha\\\":1072,\\\"x_min\\\":28,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 956 742 q 1044 339 1044 554 q 967 65 1044 157 q 760 -28 890 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 103 64 179 -28 q 28 339 28 156 q 117 742 28 554 l 360 742 q 311 535 328 624 q 294 356 294 447 q 311 213 294 257 q 361 169 328 169 q 398 188 386 169 q 410 264 410 207 l 410 493 l 663 526 l 663 264 q 676 188 663 207 q 715 169 689 169 q 763 213 747 169 q 778 356 778 256 q 761 536 778 447 q 713 742 744 625 l 956 742 m 624 838 l 449 808 l 308 1151 l 571 1206 l 624 838 m 644 -294 q 497 -240 549 -294 q 444 -99 444 -186 l 444 -61 l 629 -61 l 629 -93 q 682 -149 629 -149 q 749 -129 713 -149 l 811 -240 q 644 -294 743 -294 z \\\"},\\\"ῴ\\\":{\\\"ha\\\":1072,\\\"x_min\\\":28,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 956 742 q 1044 339 1044 554 q 967 65 1044 157 q 760 -28 890 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 103 64 179 -28 q 28 339 28 156 q 117 742 28 554 l 360 742 q 311 535 328 624 q 294 356 294 447 q 311 213 294 257 q 361 169 328 169 q 398 188 386 169 q 410 264 410 207 l 410 493 l 663 526 l 663 264 q 676 188 663 207 q 715 169 689 169 q 763 213 747 169 q 778 356 778 256 q 761 536 778 447 q 713 742 744 625 l 956 742 m 767 1151 l 626 808 l 451 838 l 504 1206 l 767 1151 m 644 -294 q 497 -240 549 -294 q 444 -99 444 -186 l 444 -61 l 629 -61 l 629 -93 q 682 -149 629 -149 q 749 -129 713 -149 l 811 -240 q 644 -294 743 -294 z \\\"},\\\"ᾠ\\\":{\\\"ha\\\":1072,\\\"x_min\\\":28,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 956 742 q 1044 339 1044 554 q 967 65 1044 157 q 760 -28 890 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 103 64 179 -28 q 28 339 28 156 q 117 742 28 554 l 360 742 q 311 535 328 624 q 294 356 294 447 q 311 213 294 257 q 361 169 328 169 q 398 188 386 169 q 410 264 410 207 l 410 493 l 663 526 l 663 264 q 676 188 663 207 q 715 169 689 169 q 763 213 747 169 q 778 356 778 256 q 761 536 778 447 q 713 742 744 625 l 956 742 m 644 -294 q 497 -240 549 -294 q 444 -99 444 -186 l 444 -61 l 629 -61 l 629 -93 q 682 -149 629 -149 q 749 -129 713 -149 l 811 -240 q 644 -294 743 -294 z \\\"},\\\"ᾡ\\\":{\\\"ha\\\":1072,\\\"x_min\\\":28,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 956 742 q 1044 339 1044 554 q 967 65 1044 157 q 760 -28 890 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 103 64 179 -28 q 28 339 28 156 q 117 742 28 554 l 360 742 q 311 535 328 624 q 294 356 294 447 q 311 213 294 257 q 361 169 328 169 q 398 188 386 169 q 410 264 410 207 l 410 493 l 663 526 l 663 264 q 676 188 663 207 q 715 169 689 169 q 763 213 747 169 q 778 356 778 256 q 761 536 778 447 q 713 742 744 625 l 956 742 m 494 1192 q 586 1155 550 1192 q 622 1065 622 1118 q 569 961 622 1001 l 604 803 l 474 803 l 404 943 q 375 1011 383 986 q 367 1065 367 1036 q 403 1156 367 1119 q 494 1192 439 1192 m 644 -294 q 497 -240 549 -294 q 444 -99 444 -186 l 444 -61 l 629 -61 l 629 -93 q 682 -149 629 -149 q 749 -129 713 -149 l 811 -240 q 644 -294 743 -294 z \\\"},\\\"ᾢ\\\":{\\\"ha\\\":1072,\\\"x_min\\\":28,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 956 742 q 1044 339 1044 554 q 967 65 1044 157 q 760 -28 890 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 103 64 179 -28 q 28 339 28 156 q 117 742 28 554 l 360 742 q 311 535 328 624 q 294 356 294 447 q 311 213 294 257 q 361 169 328 169 q 398 188 386 169 q 410 264 410 207 l 410 493 l 663 526 l 663 264 q 676 188 663 207 q 715 169 689 169 q 763 213 747 169 q 778 356 778 256 q 761 536 778 447 q 713 742 744 625 l 956 742 m 379 1192 q 471 1156 435 1192 q 507 1065 507 1119 q 499 1011 507 1036 q 469 943 490 986 l 400 803 l 269 803 l 304 961 q 251 1065 251 1001 q 288 1155 251 1118 q 379 1192 324 1192 m 804 825 l 654 796 l 521 1133 l 742 1188 l 804 825 m 644 -294 q 497 -240 549 -294 q 444 -99 444 -186 l 444 -61 l 629 -61 l 629 -93 q 682 -149 629 -149 q 749 -129 713 -149 l 811 -240 q 644 -294 743 -294 z \\\"},\\\"ᾣ\\\":{\\\"ha\\\":1072,\\\"x_min\\\":28,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 956 742 q 1044 339 1044 554 q 967 65 1044 157 q 760 -28 890 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 103 64 179 -28 q 28 339 28 156 q 117 742 28 554 l 360 742 q 311 535 328 624 q 294 356 294 447 q 311 213 294 257 q 361 169 328 169 q 398 188 386 169 q 410 264 410 207 l 410 493 l 663 526 l 663 264 q 676 188 663 207 q 715 169 689 169 q 763 213 747 169 q 778 356 778 256 q 761 536 778 447 q 713 742 744 625 l 956 742 m 360 1192 q 451 1155 415 1192 q 488 1065 488 1118 q 435 961 488 1001 l 469 803 l 339 803 l 269 943 q 240 1011 249 986 q 232 1065 232 1036 q 268 1156 232 1119 q 360 1192 304 1192 m 785 825 l 635 796 l 501 1133 l 722 1188 l 785 825 m 644 -294 q 497 -240 549 -294 q 444 -99 444 -186 l 444 -61 l 629 -61 l 629 -93 q 682 -149 629 -149 q 749 -129 713 -149 l 811 -240 q 644 -294 743 -294 z \\\"},\\\"ᾤ\\\":{\\\"ha\\\":1072,\\\"x_min\\\":28,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 956 742 q 1044 339 1044 554 q 967 65 1044 157 q 760 -28 890 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 103 64 179 -28 q 28 339 28 156 q 117 742 28 554 l 360 742 q 311 535 328 624 q 294 356 294 447 q 311 213 294 257 q 361 169 328 169 q 398 188 386 169 q 410 264 410 207 l 410 493 l 663 526 l 663 264 q 676 188 663 207 q 715 169 689 169 q 763 213 747 169 q 778 356 778 256 q 761 536 778 447 q 713 742 744 625 l 956 742 m 425 1192 q 517 1156 481 1192 q 553 1065 553 1119 q 544 1011 553 1036 q 515 943 536 986 l 446 803 l 315 803 l 350 961 q 297 1065 297 1001 q 333 1155 297 1118 q 425 1192 369 1192 m 850 1133 l 717 796 l 567 825 l 629 1188 l 850 1133 m 644 -294 q 497 -240 549 -294 q 444 -99 444 -186 l 444 -61 l 629 -61 l 629 -93 q 682 -149 629 -149 q 749 -129 713 -149 l 811 -240 q 644 -294 743 -294 z \\\"},\\\"ᾥ\\\":{\\\"ha\\\":1072,\\\"x_min\\\":28,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 956 742 q 1044 339 1044 554 q 967 65 1044 157 q 760 -28 890 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 103 64 179 -28 q 28 339 28 156 q 117 742 28 554 l 360 742 q 311 535 328 624 q 294 356 294 447 q 311 213 294 257 q 361 169 328 169 q 398 188 386 169 q 410 264 410 207 l 410 493 l 663 526 l 663 264 q 676 188 663 207 q 715 169 689 169 q 763 213 747 169 q 778 356 778 256 q 761 536 778 447 q 713 742 744 625 l 956 742 m 388 1192 q 479 1155 443 1192 q 515 1065 515 1118 q 463 961 515 1001 l 497 803 l 367 803 l 297 943 q 268 1011 276 986 q 260 1065 260 1036 q 296 1156 260 1119 q 388 1192 332 1192 m 826 1133 l 693 796 l 543 825 l 606 1188 l 826 1133 m 644 -294 q 497 -240 549 -294 q 444 -99 444 -186 l 444 -61 l 629 -61 l 629 -93 q 682 -149 629 -149 q 749 -129 713 -149 l 811 -240 q 644 -294 743 -294 z \\\"},\\\"ᾦ\\\":{\\\"ha\\\":1072,\\\"x_min\\\":28,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 956 742 q 1044 339 1044 554 q 967 65 1044 157 q 760 -28 890 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 103 64 179 -28 q 28 339 28 156 q 117 742 28 554 l 360 742 q 311 535 328 624 q 294 356 294 447 q 311 213 294 257 q 361 169 328 169 q 398 188 386 169 q 410 264 410 207 l 410 493 l 663 526 l 663 264 q 676 188 663 207 q 715 169 689 169 q 763 213 747 169 q 778 356 778 256 q 761 536 778 447 q 713 742 744 625 l 956 742 m 617 1138 q 567 1144 588 1138 q 525 1167 547 1151 q 487 1191 499 1185 q 460 1197 475 1197 q 419 1183 435 1197 q 386 1138 404 1169 l 257 1200 q 337 1335 286 1282 q 453 1389 388 1389 q 505 1382 483 1389 q 550 1358 526 1375 q 587 1335 574 1342 q 614 1329 600 1329 q 653 1343 638 1329 q 686 1389 668 1357 l 815 1326 q 735 1190 786 1243 q 617 1138 683 1138 m 478 894 q 408 999 408 929 q 444 1088 408 1051 q 536 1125 481 1125 q 628 1089 592 1125 q 664 999 664 1053 q 654 942 664 968 q 622 876 644 917 l 585 810 l 464 810 l 478 894 m 644 -294 q 497 -240 549 -294 q 444 -99 444 -186 l 444 -61 l 629 -61 l 629 -93 q 682 -149 629 -149 q 749 -129 713 -149 l 811 -240 q 644 -294 743 -294 z \\\"},\\\"ᾧ\\\":{\\\"ha\\\":1072,\\\"x_min\\\":28,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 956 742 q 1044 339 1044 554 q 967 65 1044 157 q 760 -28 890 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 103 64 179 -28 q 28 339 28 156 q 117 742 28 554 l 360 742 q 311 535 328 624 q 294 356 294 447 q 311 213 294 257 q 361 169 328 169 q 398 188 386 169 q 410 264 410 207 l 410 493 l 663 526 l 663 264 q 676 188 663 207 q 715 169 689 169 q 763 213 747 169 q 778 356 778 256 q 761 536 778 447 q 713 742 744 625 l 956 742 m 617 1138 q 567 1144 588 1138 q 525 1167 547 1151 q 487 1191 499 1185 q 460 1197 475 1197 q 419 1183 435 1197 q 386 1138 404 1169 l 257 1200 q 337 1335 286 1282 q 453 1389 388 1389 q 505 1382 483 1389 q 550 1358 526 1375 q 587 1335 574 1342 q 614 1329 600 1329 q 653 1343 638 1329 q 686 1389 668 1357 l 815 1326 q 735 1190 786 1243 q 617 1138 683 1138 m 488 810 l 450 876 q 418 942 428 917 q 408 999 408 968 q 444 1089 408 1053 q 536 1125 481 1125 q 628 1088 592 1125 q 664 999 664 1051 q 597 894 664 931 l 608 810 l 488 810 m 644 -294 q 497 -240 549 -294 q 444 -99 444 -186 l 444 -61 l 629 -61 l 629 -93 q 682 -149 629 -149 q 749 -129 713 -149 l 811 -240 q 644 -294 743 -294 z \\\"},\\\"ῷ\\\":{\\\"ha\\\":1072,\\\"x_min\\\":28,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 956 742 q 1044 339 1044 554 q 967 65 1044 157 q 760 -28 890 -28 q 611 10 665 -28 q 535 138 557 49 q 458 10 510 49 q 315 -28 407 -28 q 103 64 179 -28 q 28 339 28 156 q 117 742 28 554 l 360 742 q 311 535 328 624 q 294 356 294 447 q 311 213 294 257 q 361 169 328 169 q 398 188 386 169 q 410 264 410 207 l 410 493 l 663 526 l 663 264 q 676 188 663 207 q 715 169 689 169 q 763 213 747 169 q 778 356 778 256 q 761 536 778 447 q 713 742 744 625 l 956 742 m 644 -294 q 497 -240 549 -294 q 444 -99 444 -186 l 444 -61 l 629 -61 l 629 -93 q 682 -149 629 -149 q 749 -129 713 -149 l 811 -240 q 644 -294 743 -294 z \\\"},\\\"ͺ\\\":{\\\"ha\\\":558,\\\"x_min\\\":42,\\\"x_max\\\":408,\\\"o\\\":\\\"m 242 -294 q 94 -240 146 -294 q 42 -99 42 -186 l 42 -61 l 226 -61 l 226 -93 q 279 -149 226 -149 q 346 -129 310 -149 l 408 -240 q 242 -294 340 -294 z \\\"},\\\"ℊ\\\":{\\\"ha\\\":822,\\\"x_min\\\":21,\\\"x_max\\\":767,\\\"o\\\":\\\"m 767 742 l 767 44 q 660 -225 767 -135 q 365 -315 554 -315 q 65 -242 190 -315 l 146 -76 q 235 -108 185 -96 q 338 -121 285 -121 q 453 -90 414 -121 q 492 6 492 -60 l 492 79 q 310 0 421 0 q 94 105 167 0 q 21 389 21 210 q 60 583 21 496 q 168 719 99 669 q 324 769 238 769 q 514 690 436 769 l 526 742 l 767 742 m 399 197 q 492 263 454 197 l 492 531 q 449 563 469 553 q 403 574 428 574 q 303 386 303 574 q 328 235 303 274 q 399 197 353 197 z \\\"},\\\"ᵊ\\\":{\\\"ha\\\":458,\\\"x_min\\\":42,\\\"x_max\\\":417,\\\"o\\\":\\\"m 226 935 q 367 885 317 935 q 417 740 417 835 q 366 595 417 647 q 225 543 315 543 q 91 592 140 543 q 42 735 42 640 q 44 779 42 760 l 306 779 q 224 850 299 850 q 115 822 167 850 l 76 889 q 226 935 140 935 m 225 629 q 307 707 301 629 l 147 707 l 147 699 q 225 629 147 629 z \\\"},\\\"ᶿ\\\":{\\\"ha\\\":463,\\\"x_min\\\":42,\\\"x_max\\\":421,\\\"o\\\":\\\"m 233 1082 q 421 813 421 1082 q 376 613 421 682 q 228 543 332 543 q 86 612 131 543 q 42 810 42 681 q 88 1013 42 944 q 233 1082 135 1082 m 233 994 q 175 963 192 994 q 156 850 158 931 l 307 850 q 289 963 304 932 q 233 994 274 994 m 228 631 q 286 665 268 631 q 307 775 304 699 l 154 775 q 174 665 157 700 q 228 631 192 631 z \\\"},\\\"₀\\\":{\\\"ha\\\":556,\\\"x_min\\\":19,\\\"x_max\\\":535,\\\"o\\\":\\\"m 278 317 q 468 236 401 317 q 535 6 535 156 q 467 -225 535 -143 q 278 -307 400 -307 q 87 -225 154 -307 q 19 6 19 -143 q 87 236 19 156 q 278 317 154 317 m 278 174 q 245 160 256 174 q 230 111 235 146 q 225 6 225 76 q 230 -100 225 -65 q 245 -149 235 -135 q 278 -162 256 -162 q 310 -150 299 -162 q 326 -102 321 -137 q 331 6 331 -67 q 326 115 331 79 q 310 162 321 150 q 278 174 300 174 z \\\"},\\\"₁\\\":{\\\"ha\\\":556,\\\"x_min\\\":33,\\\"x_max\\\":438,\\\"o\\\":\\\"m 438 -287 l 243 -287 l 243 121 l 121 43 l 33 172 l 258 301 l 438 301 l 438 -287 z \\\"},\\\"₂\\\":{\\\"ha\\\":556,\\\"x_min\\\":35,\\\"x_max\\\":519,\\\"o\\\":\\\"m 269 317 q 400 292 346 317 q 481 226 454 267 q 507 138 507 185 q 490 60 507 96 q 426 -24 474 24 q 283 -140 378 -71 l 519 -140 l 500 -287 l 63 -287 l 63 -153 q 214 -16 164 -65 q 283 63 264 33 q 303 119 303 93 q 288 158 303 144 q 246 172 272 172 q 192 158 217 172 q 144 115 168 144 l 35 201 q 134 285 74 254 q 269 317 194 317 z \\\"},\\\"₃\\\":{\\\"ha\\\":556,\\\"x_min\\\":29,\\\"x_max\\\":526,\\\"o\\\":\\\"m 278 317 q 445 273 386 317 q 504 160 504 229 q 472 76 504 113 q 369 22 439 39 q 484 -17 442 18 q 526 -119 526 -53 q 497 -213 526 -171 q 410 -281 468 -256 q 267 -307 351 -307 q 29 -207 115 -307 l 136 -104 q 190 -146 163 -133 q 251 -158 217 -158 q 301 -146 282 -158 q 321 -106 321 -133 q 301 -60 321 -75 q 240 -46 282 -46 l 185 -46 l 207 85 l 246 85 q 313 129 313 85 q 296 163 313 151 q 250 174 279 174 q 136 126 188 174 l 39 226 q 278 317 133 317 z \\\"},\\\"₄\\\":{\\\"ha\\\":556,\\\"x_min\\\":19,\\\"x_max\\\":535,\\\"o\\\":\\\"m 535 -181 l 475 -181 l 475 -287 l 290 -287 l 290 -181 l 19 -181 l 19 -51 l 182 317 l 347 257 l 221 -39 l 292 -39 l 333 83 l 475 83 l 475 -39 l 535 -39 l 535 -181 z \\\"},\\\"₅\\\":{\\\"ha\\\":556,\\\"x_min\\\":29,\\\"x_max\\\":525,\\\"o\\\":\\\"m 469 171 l 249 171 l 249 90 q 346 111 301 111 q 474 59 424 111 q 525 -86 525 7 q 453 -247 525 -186 q 258 -307 381 -307 q 29 -201 113 -307 l 139 -104 q 246 -161 182 -161 q 321 -86 321 -161 q 305 -31 321 -47 q 258 -14 289 -14 q 199 -35 231 -14 l 69 -35 l 69 301 l 490 301 l 469 171 z \\\"},\\\"₆\\\":{\\\"ha\\\":556,\\\"x_min\\\":22,\\\"x_max\\\":532,\\\"o\\\":\\\"m 349 113 q 482 60 432 113 q 532 -85 532 7 q 503 -192 532 -142 q 417 -275 474 -243 q 282 -307 361 -307 q 88 -232 153 -307 q 22 -26 22 -157 q 103 223 22 129 q 325 317 185 317 q 478 275 417 317 l 407 161 q 370 177 386 172 q 332 182 354 182 q 232 72 244 182 q 349 113 283 113 m 285 -169 q 331 -86 331 -169 q 320 -26 331 -42 q 283 -10 310 -10 q 235 -22 257 -10 q 244 -139 233 -108 q 285 -169 254 -169 z \\\"},\\\"₇\\\":{\\\"ha\\\":556,\\\"x_min\\\":58,\\\"x_max\\\":496,\\\"o\\\":\\\"m 496 172 l 274 -307 l 99 -240 l 296 160 l 58 160 l 58 301 l 496 301 l 496 172 z \\\"},\\\"₈\\\":{\\\"ha\\\":556,\\\"x_min\\\":15,\\\"x_max\\\":540,\\\"o\\\":\\\"m 419 28 q 512 -41 483 -3 q 540 -126 540 -79 q 510 -215 540 -174 q 419 -281 479 -256 q 274 -307 360 -307 q 133 -282 192 -307 q 45 -217 75 -257 q 15 -129 15 -176 q 44 -47 15 -82 q 128 10 74 -11 q 39 151 39 63 q 67 234 39 196 q 150 294 96 272 q 278 317 204 317 q 454 274 390 317 q 518 163 518 232 q 494 92 518 128 q 419 28 469 56 m 279 193 q 229 149 229 193 q 268 90 229 107 l 292 81 q 320 113 314 97 q 326 150 326 129 q 314 181 326 169 q 279 193 301 193 m 281 -172 q 330 -158 314 -172 q 346 -124 346 -144 q 332 -87 346 -100 q 286 -61 318 -74 l 246 -47 q 220 -78 229 -60 q 211 -117 211 -97 q 230 -157 211 -142 q 281 -172 249 -172 z \\\"},\\\"₉\\\":{\\\"ha\\\":556,\\\"x_min\\\":18,\\\"x_max\\\":536,\\\"o\\\":\\\"m 276 317 q 469 253 401 317 q 536 89 536 190 q 430 -188 536 -89 q 100 -318 324 -287 l 60 -182 q 237 -132 182 -160 q 322 -44 292 -104 q 265 -76 292 -67 q 199 -86 238 -86 q 70 -36 122 -86 q 18 104 18 14 q 51 214 18 165 q 144 290 85 263 q 276 317 203 317 m 219 117 q 233 49 219 65 q 269 32 246 32 q 329 61 306 32 q 320 160 331 135 q 275 186 310 186 q 235 169 250 186 q 219 117 219 153 z \\\"},\\\"⁰\\\":{\\\"ha\\\":556,\\\"x_min\\\":19,\\\"x_max\\\":535,\\\"o\\\":\\\"m 278 1049 q 468 968 401 1049 q 535 738 535 888 q 467 507 535 589 q 278 425 400 425 q 87 507 154 425 q 19 738 19 589 q 87 968 19 888 q 278 1049 154 1049 m 278 906 q 245 892 256 906 q 230 843 235 878 q 225 738 225 808 q 230 632 225 667 q 245 583 235 597 q 278 569 256 569 q 310 582 299 569 q 326 630 321 594 q 331 738 331 665 q 326 847 331 811 q 310 894 321 882 q 278 906 300 906 z \\\"},\\\"¹\\\":{\\\"ha\\\":556,\\\"x_min\\\":33,\\\"x_max\\\":438,\\\"o\\\":\\\"m 438 444 l 243 444 l 243 853 l 121 775 l 33 904 l 258 1033 l 438 1033 l 438 444 z \\\"},\\\"²\\\":{\\\"ha\\\":556,\\\"x_min\\\":35,\\\"x_max\\\":519,\\\"o\\\":\\\"m 269 1049 q 400 1024 346 1049 q 481 958 454 999 q 507 869 507 917 q 490 792 507 828 q 426 708 474 756 q 283 592 378 661 l 519 592 l 500 444 l 63 444 l 63 579 q 214 716 164 667 q 283 795 264 765 q 303 851 303 825 q 288 890 303 876 q 246 904 272 904 q 192 890 217 904 q 144 847 168 876 l 35 933 q 134 1017 74 986 q 269 1049 194 1049 z \\\"},\\\"³\\\":{\\\"ha\\\":556,\\\"x_min\\\":29,\\\"x_max\\\":526,\\\"o\\\":\\\"m 278 1049 q 445 1005 386 1049 q 504 892 504 961 q 472 808 504 844 q 369 754 439 771 q 484 715 442 750 q 526 613 526 679 q 497 519 526 561 q 410 451 468 476 q 267 425 351 425 q 29 525 115 425 l 136 628 q 190 586 163 599 q 251 574 217 574 q 301 586 282 574 q 321 626 321 599 q 301 672 321 657 q 240 686 282 686 l 185 686 l 207 817 l 246 817 q 313 861 313 817 q 296 894 313 883 q 250 906 279 906 q 136 858 188 906 l 39 958 q 278 1049 133 1049 z \\\"},\\\"⁴\\\":{\\\"ha\\\":556,\\\"x_min\\\":19,\\\"x_max\\\":535,\\\"o\\\":\\\"m 535 551 l 475 551 l 475 444 l 290 444 l 290 551 l 19 551 l 19 681 l 182 1049 l 347 989 l 221 693 l 292 693 l 333 815 l 475 815 l 475 693 l 535 693 l 535 551 z \\\"},\\\"⁵\\\":{\\\"ha\\\":556,\\\"x_min\\\":29,\\\"x_max\\\":525,\\\"o\\\":\\\"m 469 903 l 249 903 l 249 822 q 346 843 301 843 q 474 791 424 843 q 525 646 525 739 q 453 485 525 546 q 258 425 381 425 q 29 531 113 425 l 139 628 q 246 571 182 571 q 321 646 321 571 q 305 701 321 685 q 258 718 289 718 q 199 697 231 718 l 69 697 l 69 1033 l 490 1033 l 469 903 z \\\"},\\\"⁶\\\":{\\\"ha\\\":556,\\\"x_min\\\":22,\\\"x_max\\\":532,\\\"o\\\":\\\"m 349 844 q 482 792 432 844 q 532 647 532 739 q 503 540 532 590 q 417 457 474 489 q 282 425 361 425 q 88 500 153 425 q 22 706 22 575 q 103 955 22 861 q 325 1049 185 1049 q 478 1007 417 1049 l 407 893 q 370 909 386 904 q 332 914 354 914 q 232 804 244 914 q 349 844 283 844 m 285 563 q 331 646 331 563 q 320 706 331 690 q 283 722 310 722 q 235 710 257 722 q 244 593 233 624 q 285 563 254 563 z \\\"},\\\"⁷\\\":{\\\"ha\\\":556,\\\"x_min\\\":58,\\\"x_max\\\":496,\\\"o\\\":\\\"m 496 904 l 274 425 l 99 492 l 296 892 l 58 892 l 58 1033 l 496 1033 l 496 904 z \\\"},\\\"⁸\\\":{\\\"ha\\\":556,\\\"x_min\\\":15,\\\"x_max\\\":540,\\\"o\\\":\\\"m 419 760 q 512 691 483 729 q 540 606 540 653 q 510 517 540 558 q 419 451 479 476 q 274 425 360 425 q 133 450 192 425 q 45 515 75 475 q 15 603 15 556 q 44 685 15 650 q 128 742 74 721 q 39 883 39 794 q 67 966 39 928 q 150 1026 96 1004 q 278 1049 204 1049 q 454 1006 390 1049 q 518 894 518 964 q 494 824 518 860 q 419 760 469 788 m 279 925 q 229 881 229 925 q 268 822 229 839 l 292 813 q 320 845 314 829 q 326 882 326 861 q 314 913 326 901 q 279 925 301 925 m 281 560 q 330 574 314 560 q 346 608 346 588 q 332 645 346 632 q 286 671 318 658 l 246 685 q 220 653 229 672 q 211 615 211 635 q 230 575 211 590 q 281 560 249 560 z \\\"},\\\"⁹\\\":{\\\"ha\\\":556,\\\"x_min\\\":18,\\\"x_max\\\":536,\\\"o\\\":\\\"m 276 1049 q 469 985 401 1049 q 536 821 536 922 q 430 544 536 643 q 100 414 324 444 l 60 550 q 237 600 182 572 q 322 688 292 628 q 265 656 292 665 q 199 646 238 646 q 70 696 122 646 q 18 836 18 746 q 51 946 18 897 q 144 1022 85 994 q 276 1049 203 1049 m 219 849 q 233 781 219 797 q 269 764 246 764 q 329 793 306 764 q 320 892 331 867 q 275 918 310 918 q 235 901 250 918 q 219 849 219 885 z \\\"},\\\"⁄\\\":{\\\"ha\\\":265,\\\"x_min\\\":-232,\\\"x_max\\\":497,\\\"o\\\":\\\"m 497 985 l -78 -125 l -232 -49 l 343 1061 l 497 985 z \\\"},\\\"⅟\\\":{\\\"ha\\\":821,\\\"x_min\\\":33,\\\"x_max\\\":1053,\\\"o\\\":\\\"m 438 378 l 243 378 l 243 786 l 121 708 l 33 838 l 258 967 l 438 967 l 438 378 m 1053 985 l 478 -125 l 324 -49 l 899 1061 l 1053 985 z \\\"},\\\"½\\\":{\\\"ha\\\":1376,\\\"x_min\\\":33,\\\"x_max\\\":1340,\\\"o\\\":\\\"m 438 378 l 243 378 l 243 786 l 121 708 l 33 838 l 258 967 l 438 967 l 438 378 m 1053 985 l 478 -125 l 324 -49 l 899 1061 l 1053 985 m 1090 604 q 1221 579 1167 604 q 1301 513 1275 554 q 1328 425 1328 472 q 1311 347 1328 383 q 1247 264 1294 311 q 1104 147 1199 217 l 1340 147 l 1321 0 l 883 0 l 883 135 q 1035 272 985 222 q 1104 351 1085 321 q 1124 407 1124 381 q 1108 446 1124 432 q 1067 460 1093 460 q 1013 446 1038 460 q 965 403 989 432 l 856 489 q 955 573 894 542 q 1090 604 1015 604 z \\\"},\\\"⅓\\\":{\\\"ha\\\":1376,\\\"x_min\\\":33,\\\"x_max\\\":1347,\\\"o\\\":\\\"m 438 378 l 243 378 l 243 786 l 121 708 l 33 838 l 258 967 l 438 967 l 438 378 m 1053 985 l 478 -125 l 324 -49 l 899 1061 l 1053 985 m 1099 604 q 1266 560 1207 604 q 1325 447 1325 517 q 1292 363 1325 400 q 1190 310 1260 326 q 1305 270 1263 306 q 1347 168 1347 235 q 1318 74 1347 117 q 1231 6 1289 32 q 1088 -19 1172 -19 q 850 81 936 -19 l 957 183 q 1010 142 983 154 q 1072 129 1038 129 q 1122 142 1103 129 q 1142 182 1142 154 q 1122 227 1142 213 q 1061 242 1103 242 l 1006 242 l 1028 372 l 1067 372 q 1133 417 1133 372 q 1117 450 1133 439 q 1071 461 1100 461 q 957 414 1008 461 l 860 514 q 1099 604 954 604 z \\\"},\\\"⅔\\\":{\\\"ha\\\":1376,\\\"x_min\\\":35,\\\"x_max\\\":1347,\\\"o\\\":\\\"m 269 989 q 400 964 346 989 q 481 898 454 939 q 507 810 507 857 q 490 732 507 768 q 426 649 474 696 q 283 532 378 601 l 519 532 l 500 385 l 63 385 l 63 519 q 214 656 164 607 q 283 735 264 706 q 303 792 303 765 q 288 831 303 817 q 246 844 272 844 q 192 831 217 844 q 144 788 168 817 l 35 874 q 134 958 74 926 q 269 989 194 989 m 1053 985 l 478 -125 l 324 -49 l 899 1061 l 1053 985 m 1099 604 q 1266 560 1207 604 q 1325 447 1325 517 q 1292 363 1325 400 q 1190 310 1260 326 q 1305 270 1263 306 q 1347 168 1347 235 q 1318 74 1347 117 q 1231 6 1289 32 q 1088 -19 1172 -19 q 850 81 936 -19 l 957 183 q 1010 142 983 154 q 1072 129 1038 129 q 1122 142 1103 129 q 1142 182 1142 154 q 1122 227 1142 213 q 1061 242 1103 242 l 1006 242 l 1028 372 l 1067 372 q 1133 417 1133 372 q 1117 450 1133 439 q 1071 461 1100 461 q 957 414 1008 461 l 860 514 q 1099 604 954 604 z \\\"},\\\"¼\\\":{\\\"ha\\\":1376,\\\"x_min\\\":33,\\\"x_max\\\":1356,\\\"o\\\":\\\"m 438 378 l 243 378 l 243 786 l 121 708 l 33 838 l 258 967 l 438 967 l 438 378 m 1053 985 l 478 -125 l 324 -49 l 899 1061 l 1053 985 m 1356 107 l 1296 107 l 1296 0 l 1111 0 l 1111 107 l 840 107 l 840 236 l 1003 604 l 1168 544 l 1042 249 l 1113 249 l 1154 371 l 1296 371 l 1296 249 l 1356 249 l 1356 107 z \\\"},\\\"¾\\\":{\\\"ha\\\":1376,\\\"x_min\\\":29,\\\"x_max\\\":1356,\\\"o\\\":\\\"m 278 982 q 445 938 386 982 q 504 825 504 894 q 472 741 504 778 q 369 688 439 704 q 484 648 442 683 q 526 546 526 613 q 497 452 526 494 q 410 384 468 410 q 267 358 351 358 q 29 458 115 358 l 136 561 q 190 519 163 532 q 251 507 217 507 q 301 519 282 507 q 321 560 321 532 q 301 605 321 590 q 240 619 282 619 l 185 619 l 207 750 l 246 750 q 313 794 313 750 q 296 828 313 817 q 250 839 279 839 q 136 792 188 839 l 39 892 q 278 982 133 982 m 1053 985 l 478 -125 l 324 -49 l 899 1061 l 1053 985 m 1356 107 l 1296 107 l 1296 0 l 1111 0 l 1111 107 l 840 107 l 840 236 l 1003 604 l 1168 544 l 1042 249 l 1113 249 l 1154 371 l 1296 371 l 1296 249 l 1356 249 l 1356 107 z \\\"},\\\"⅕\\\":{\\\"ha\\\":1376,\\\"x_min\\\":33,\\\"x_max\\\":1346,\\\"o\\\":\\\"m 438 378 l 243 378 l 243 786 l 121 708 l 33 838 l 258 967 l 438 967 l 438 378 m 1053 985 l 478 -125 l 324 -49 l 899 1061 l 1053 985 m 1290 458 l 1069 458 l 1069 378 q 1167 399 1122 399 q 1295 347 1244 399 q 1346 201 1346 294 q 1274 41 1346 101 q 1079 -19 1201 -19 q 850 86 933 -19 l 960 183 q 1067 126 1003 126 q 1142 201 1142 126 q 1126 257 1142 240 q 1079 274 1110 274 q 1019 253 1051 274 l 890 253 l 890 589 l 1311 589 l 1290 458 z \\\"},\\\"⅖\\\":{\\\"ha\\\":1376,\\\"x_min\\\":35,\\\"x_max\\\":1346,\\\"o\\\":\\\"m 269 989 q 400 964 346 989 q 481 898 454 939 q 507 810 507 857 q 490 732 507 768 q 426 649 474 696 q 283 532 378 601 l 519 532 l 500 385 l 63 385 l 63 519 q 214 656 164 607 q 283 735 264 706 q 303 792 303 765 q 288 831 303 817 q 246 844 272 844 q 192 831 217 844 q 144 788 168 817 l 35 874 q 134 958 74 926 q 269 989 194 989 m 1053 985 l 478 -125 l 324 -49 l 899 1061 l 1053 985 m 1290 458 l 1069 458 l 1069 378 q 1167 399 1122 399 q 1295 347 1244 399 q 1346 201 1346 294 q 1274 41 1346 101 q 1079 -19 1201 -19 q 850 86 933 -19 l 960 183 q 1067 126 1003 126 q 1142 201 1142 126 q 1126 257 1142 240 q 1079 274 1110 274 q 1019 253 1051 274 l 890 253 l 890 589 l 1311 589 l 1290 458 z \\\"},\\\"⅗\\\":{\\\"ha\\\":1376,\\\"x_min\\\":29,\\\"x_max\\\":1346,\\\"o\\\":\\\"m 278 982 q 445 938 386 982 q 504 825 504 894 q 472 741 504 778 q 369 688 439 704 q 484 648 442 683 q 526 546 526 613 q 497 452 526 494 q 410 384 468 410 q 267 358 351 358 q 29 458 115 358 l 136 561 q 190 519 163 532 q 251 507 217 507 q 301 519 282 507 q 321 560 321 532 q 301 605 321 590 q 240 619 282 619 l 185 619 l 207 750 l 246 750 q 313 794 313 750 q 296 828 313 817 q 250 839 279 839 q 136 792 188 839 l 39 892 q 278 982 133 982 m 1053 985 l 478 -125 l 324 -49 l 899 1061 l 1053 985 m 1290 458 l 1069 458 l 1069 378 q 1167 399 1122 399 q 1295 347 1244 399 q 1346 201 1346 294 q 1274 41 1346 101 q 1079 -19 1201 -19 q 850 86 933 -19 l 960 183 q 1067 126 1003 126 q 1142 201 1142 126 q 1126 257 1142 240 q 1079 274 1110 274 q 1019 253 1051 274 l 890 253 l 890 589 l 1311 589 l 1290 458 z \\\"},\\\"⅘\\\":{\\\"ha\\\":1376,\\\"x_min\\\":19,\\\"x_max\\\":1346,\\\"o\\\":\\\"m 535 485 l 475 485 l 475 378 l 290 378 l 290 485 l 19 485 l 19 614 l 182 982 l 347 922 l 221 626 l 292 626 l 333 749 l 475 749 l 475 626 l 535 626 l 535 485 m 1053 985 l 478 -125 l 324 -49 l 899 1061 l 1053 985 m 1290 458 l 1069 458 l 1069 378 q 1167 399 1122 399 q 1295 347 1244 399 q 1346 201 1346 294 q 1274 41 1346 101 q 1079 -19 1201 -19 q 850 86 933 -19 l 960 183 q 1067 126 1003 126 q 1142 201 1142 126 q 1126 257 1142 240 q 1079 274 1110 274 q 1019 253 1051 274 l 890 253 l 890 589 l 1311 589 l 1290 458 z \\\"},\\\"⅙\\\":{\\\"ha\\\":1376,\\\"x_min\\\":33,\\\"x_max\\\":1353,\\\"o\\\":\\\"m 438 378 l 243 378 l 243 786 l 121 708 l 33 838 l 258 967 l 438 967 l 438 378 m 1053 985 l 478 -125 l 324 -49 l 899 1061 l 1053 985 m 1169 400 q 1303 347 1253 400 q 1353 203 1353 294 q 1324 95 1353 146 q 1238 13 1294 44 q 1103 -19 1182 -19 q 908 56 974 -19 q 843 261 843 131 q 924 510 843 417 q 1146 604 1006 604 q 1299 563 1238 604 l 1228 449 q 1191 465 1207 460 q 1153 469 1175 469 q 1053 360 1065 469 q 1169 400 1104 400 m 1106 118 q 1151 201 1151 118 q 1141 262 1151 246 q 1104 278 1131 278 q 1056 265 1078 278 q 1065 149 1054 179 q 1106 118 1075 118 z \\\"},\\\"⅚\\\":{\\\"ha\\\":1376,\\\"x_min\\\":29,\\\"x_max\\\":1353,\\\"o\\\":\\\"m 469 836 l 249 836 l 249 756 q 346 776 301 776 q 474 724 424 776 q 525 579 525 672 q 453 419 525 479 q 258 358 381 358 q 29 464 113 358 l 139 561 q 246 504 182 504 q 321 579 321 504 q 305 635 321 618 q 258 651 289 651 q 199 631 231 651 l 69 631 l 69 967 l 490 967 l 469 836 m 1053 985 l 478 -125 l 324 -49 l 899 1061 l 1053 985 m 1169 400 q 1303 347 1253 400 q 1353 203 1353 294 q 1324 95 1353 146 q 1238 13 1294 44 q 1103 -19 1182 -19 q 908 56 974 -19 q 843 261 843 131 q 924 510 843 417 q 1146 604 1006 604 q 1299 563 1238 604 l 1228 449 q 1191 465 1207 460 q 1153 469 1175 469 q 1053 360 1065 469 q 1169 400 1104 400 m 1106 118 q 1151 201 1151 118 q 1141 262 1151 246 q 1104 278 1131 278 q 1056 265 1078 278 q 1065 149 1054 179 q 1106 118 1075 118 z \\\"},\\\"⅛\\\":{\\\"ha\\\":1376,\\\"x_min\\\":33,\\\"x_max\\\":1361,\\\"o\\\":\\\"m 438 378 l 243 378 l 243 786 l 121 708 l 33 838 l 258 967 l 438 967 l 438 378 m 1053 985 l 478 -125 l 324 -49 l 899 1061 l 1053 985 m 1240 315 q 1333 247 1304 285 q 1361 161 1361 208 q 1331 73 1361 114 q 1240 6 1300 32 q 1094 -19 1181 -19 q 954 6 1013 -19 q 866 71 896 31 q 836 158 836 111 q 865 241 836 206 q 949 297 894 276 q 860 439 860 350 q 888 522 860 483 q 971 582 917 560 q 1099 604 1025 604 q 1275 562 1211 604 q 1339 450 1339 519 q 1315 379 1339 415 q 1240 315 1290 343 m 1100 481 q 1050 436 1050 481 q 1089 378 1050 394 l 1113 368 q 1141 401 1135 385 q 1147 438 1147 417 q 1135 469 1147 457 q 1100 481 1122 481 m 1101 115 q 1151 129 1135 115 q 1167 164 1167 143 q 1153 201 1167 188 q 1107 226 1139 214 l 1067 240 q 1041 209 1050 228 q 1032 171 1032 190 q 1051 131 1032 146 q 1101 115 1069 115 z \\\"},\\\"⅜\\\":{\\\"ha\\\":1376,\\\"x_min\\\":29,\\\"x_max\\\":1361,\\\"o\\\":\\\"m 278 982 q 445 938 386 982 q 504 825 504 894 q 472 741 504 778 q 369 688 439 704 q 484 648 442 683 q 526 546 526 613 q 497 452 526 494 q 410 384 468 410 q 267 358 351 358 q 29 458 115 358 l 136 561 q 190 519 163 532 q 251 507 217 507 q 301 519 282 507 q 321 560 321 532 q 301 605 321 590 q 240 619 282 619 l 185 619 l 207 750 l 246 750 q 313 794 313 750 q 296 828 313 817 q 250 839 279 839 q 136 792 188 839 l 39 892 q 278 982 133 982 m 1053 985 l 478 -125 l 324 -49 l 899 1061 l 1053 985 m 1240 315 q 1333 247 1304 285 q 1361 161 1361 208 q 1331 73 1361 114 q 1240 6 1300 32 q 1094 -19 1181 -19 q 954 6 1013 -19 q 866 71 896 31 q 836 158 836 111 q 865 241 836 206 q 949 297 894 276 q 860 439 860 350 q 888 522 860 483 q 971 582 917 560 q 1099 604 1025 604 q 1275 562 1211 604 q 1339 450 1339 519 q 1315 379 1339 415 q 1240 315 1290 343 m 1100 481 q 1050 436 1050 481 q 1089 378 1050 394 l 1113 368 q 1141 401 1135 385 q 1147 438 1147 417 q 1135 469 1147 457 q 1100 481 1122 481 m 1101 115 q 1151 129 1135 115 q 1167 164 1167 143 q 1153 201 1167 188 q 1107 226 1139 214 l 1067 240 q 1041 209 1050 228 q 1032 171 1032 190 q 1051 131 1032 146 q 1101 115 1069 115 z \\\"},\\\"⅝\\\":{\\\"ha\\\":1376,\\\"x_min\\\":29,\\\"x_max\\\":1361,\\\"o\\\":\\\"m 469 836 l 249 836 l 249 756 q 346 776 301 776 q 474 724 424 776 q 525 579 525 672 q 453 419 525 479 q 258 358 381 358 q 29 464 113 358 l 139 561 q 246 504 182 504 q 321 579 321 504 q 305 635 321 618 q 258 651 289 651 q 199 631 231 651 l 69 631 l 69 967 l 490 967 l 469 836 m 1053 985 l 478 -125 l 324 -49 l 899 1061 l 1053 985 m 1240 315 q 1333 247 1304 285 q 1361 161 1361 208 q 1331 73 1361 114 q 1240 6 1300 32 q 1094 -19 1181 -19 q 954 6 1013 -19 q 866 71 896 31 q 836 158 836 111 q 865 241 836 206 q 949 297 894 276 q 860 439 860 350 q 888 522 860 483 q 971 582 917 560 q 1099 604 1025 604 q 1275 562 1211 604 q 1339 450 1339 519 q 1315 379 1339 415 q 1240 315 1290 343 m 1100 481 q 1050 436 1050 481 q 1089 378 1050 394 l 1113 368 q 1141 401 1135 385 q 1147 438 1147 417 q 1135 469 1147 457 q 1100 481 1122 481 m 1101 115 q 1151 129 1135 115 q 1167 164 1167 143 q 1153 201 1167 188 q 1107 226 1139 214 l 1067 240 q 1041 209 1050 228 q 1032 171 1032 190 q 1051 131 1032 146 q 1101 115 1069 115 z \\\"},\\\"⅞\\\":{\\\"ha\\\":1276,\\\"x_min\\\":58,\\\"x_max\\\":1261,\\\"o\\\":\\\"m 496 838 l 274 358 l 99 425 l 296 825 l 58 825 l 58 967 l 496 967 l 496 838 m 956 985 l 381 -125 l 226 -49 l 801 1061 l 956 985 m 1140 315 q 1233 247 1204 285 q 1261 161 1261 208 q 1231 73 1261 114 q 1140 6 1200 32 q 994 -19 1081 -19 q 854 6 913 -19 q 766 71 796 31 q 736 158 736 111 q 765 241 736 206 q 849 297 794 276 q 760 439 760 350 q 788 522 760 483 q 871 582 817 560 q 999 604 925 604 q 1175 562 1111 604 q 1239 450 1239 519 q 1215 379 1239 415 q 1140 315 1190 343 m 1000 481 q 950 436 950 481 q 989 378 950 394 l 1013 368 q 1041 401 1035 385 q 1047 438 1047 417 q 1035 469 1047 457 q 1000 481 1022 481 m 1001 115 q 1051 129 1035 115 q 1067 164 1067 143 q 1053 201 1067 188 q 1007 226 1039 214 l 967 240 q 941 209 950 228 q 932 171 932 190 q 951 131 932 146 q 1001 115 969 115 z \\\"},\\\".\\\":{\\\"ha\\\":333,\\\"x_min\\\":24,\\\"x_max\\\":310,\\\"o\\\":\\\"m 167 258 q 268 216 226 258 q 310 115 310 174 q 268 15 310 57 q 167 -28 226 -28 q 65 15 107 -28 q 24 115 24 57 q 65 216 24 174 q 167 258 107 258 z \\\"},\\\",\\\":{\\\"ha\\\":333,\\\"x_min\\\":24,\\\"x_max\\\":310,\\\"o\\\":\\\"m 167 258 q 269 217 228 258 q 310 115 310 176 q 298 47 310 82 q 254 -61 286 11 l 168 -256 l 26 -256 l 88 -1 q 40 49 57 18 q 24 117 24 79 q 65 218 24 178 q 167 258 106 258 z \\\"},\\\":\\\":{\\\"ha\\\":333,\\\"x_min\\\":24,\\\"x_max\\\":310,\\\"o\\\":\\\"m 167 258 q 268 216 226 258 q 310 115 310 174 q 268 15 310 57 q 167 -28 226 -28 q 65 15 107 -28 q 24 115 24 57 q 65 216 24 174 q 167 258 107 258 m 167 719 q 268 677 226 719 q 310 576 310 635 q 268 476 310 518 q 167 433 226 433 q 65 476 107 433 q 24 576 24 518 q 65 677 24 635 q 167 719 107 719 z \\\"},\\\";\\\":{\\\"ha\\\":333,\\\"x_min\\\":24,\\\"x_max\\\":310,\\\"o\\\":\\\"m 167 258 q 269 217 228 258 q 310 115 310 176 q 298 47 310 82 q 254 -61 286 11 l 168 -256 l 26 -256 l 88 -1 q 40 49 57 18 q 24 117 24 79 q 65 218 24 178 q 167 258 106 258 m 167 719 q 268 677 226 719 q 310 576 310 635 q 268 476 310 518 q 167 433 226 433 q 65 476 107 433 q 24 576 24 518 q 65 677 24 635 q 167 719 107 719 z \\\"},\\\"…\\\":{\\\"ha\\\":1000,\\\"x_min\\\":24,\\\"x_max\\\":976,\\\"o\\\":\\\"m 500 258 q 601 216 560 258 q 643 115 643 174 q 601 15 643 57 q 500 -28 560 -28 q 399 15 440 -28 q 357 115 357 57 q 399 216 357 174 q 500 258 440 258 m 833 258 q 935 216 893 258 q 976 115 976 174 q 935 15 976 57 q 833 -28 893 -28 q 732 15 774 -28 q 690 115 690 57 q 732 216 690 174 q 833 258 774 258 m 167 258 q 268 216 226 258 q 310 115 310 174 q 268 15 310 57 q 167 -28 226 -28 q 65 15 107 -28 q 24 115 24 57 q 65 216 24 174 q 167 258 107 258 z \\\"},\\\"!\\\":{\\\"ha\\\":333,\\\"x_min\\\":22,\\\"x_max\\\":311,\\\"o\\\":\\\"m 275 375 l 58 375 l 22 967 l 311 967 l 275 375 m 167 258 q 268 216 226 258 q 310 115 310 174 q 268 15 310 57 q 167 -28 226 -28 q 65 15 107 -28 q 24 115 24 57 q 65 216 24 174 q 167 258 107 258 z \\\"},\\\"¡\\\":{\\\"ha\\\":333,\\\"x_min\\\":22,\\\"x_max\\\":311,\\\"o\\\":\\\"m 167 719 q 268 677 226 719 q 310 576 310 635 q 268 476 310 518 q 167 433 226 433 q 65 476 107 433 q 24 576 24 518 q 65 677 24 635 q 167 719 107 719 m 311 -299 l 22 -299 l 58 317 l 275 317 l 311 -299 z \\\"},\\\"?\\\":{\\\"ha\\\":688,\\\"x_min\\\":7,\\\"x_max\\\":681,\\\"o\\\":\\\"m 353 994 q 533 962 458 994 q 644 874 607 929 q 681 753 681 819 q 660 651 681 693 q 610 583 639 610 q 533 525 581 557 q 456 460 481 488 q 432 393 432 433 l 432 375 l 188 375 l 188 401 q 208 518 188 471 q 257 592 229 565 q 326 647 285 619 q 378 687 363 671 q 393 726 393 703 q 375 767 393 753 q 322 781 357 781 q 178 706 249 781 l 7 839 q 353 994 139 994 m 311 258 q 413 216 371 258 q 454 115 454 174 q 413 15 454 57 q 311 -28 371 -28 q 210 15 251 -28 q 168 115 168 57 q 210 216 168 174 q 311 258 251 258 z \\\"},\\\"¿\\\":{\\\"ha\\\":688,\\\"x_min\\\":7,\\\"x_max\\\":681,\\\"o\\\":\\\"m 376 433 q 275 476 317 433 q 233 576 233 518 q 275 677 233 635 q 376 719 317 719 q 478 677 436 719 q 519 576 519 635 q 478 476 519 518 q 376 433 436 433 m 335 -315 q 155 -283 229 -315 q 44 -195 81 -250 q 7 -74 7 -140 q 28 28 7 -14 q 78 96 49 69 q 154 154 107 122 q 231 219 207 192 q 256 286 256 246 l 256 318 l 500 318 l 500 278 q 479 161 500 208 q 431 87 458 114 q 361 32 403 60 q 310 -8 326 8 q 294 -47 294 -24 q 313 -87 294 -74 q 365 -101 331 -101 q 510 -26 439 -101 l 681 -160 q 335 -315 549 -315 z \\\"},\\\"·\\\":{\\\"ha\\\":333,\\\"x_min\\\":24,\\\"x_max\\\":310,\\\"o\\\":\\\"m 167 568 q 268 526 226 568 q 310 425 310 483 q 268 324 310 367 q 167 282 226 282 q 65 324 107 282 q 24 425 24 367 q 65 526 24 483 q 167 568 107 568 z \\\"},\\\"•\\\":{\\\"ha\\\":500,\\\"x_min\\\":36,\\\"x_max\\\":464,\\\"o\\\":\\\"m 250 688 q 359 660 310 688 q 436 583 408 632 q 464 474 464 533 q 436 365 464 414 q 359 289 408 317 q 250 261 310 261 q 141 290 190 261 q 64 367 92 318 q 36 475 36 415 q 64 583 36 535 q 141 660 92 632 q 250 688 190 688 z \\\"},\\\"*\\\":{\\\"ha\\\":632,\\\"x_min\\\":0,\\\"x_max\\\":632,\\\"o\\\":\\\"m 446 697 l 583 568 l 399 433 l 317 604 l 236 432 l 51 567 l 188 697 l 0 721 l 71 933 l 236 844 l 203 1033 l 431 1033 l 397 844 l 561 935 l 632 722 l 446 697 z \\\"},\\\"‖\\\":{\\\"ha\\\":840,\\\"x_min\\\":121,\\\"x_max\\\":719,\\\"o\\\":\\\"m 379 -149 l 121 -149 l 121 1128 l 379 1128 l 379 -149 m 719 -149 l 461 -149 l 461 1128 l 719 1128 l 719 -149 z \\\"},\\\"#\\\":{\\\"ha\\\":806,\\\"x_min\\\":21,\\\"x_max\\\":785,\\\"o\\\":\\\"m 694 606 l 661 357 l 733 357 l 733 182 l 638 182 l 614 0 l 388 0 l 411 182 l 317 182 l 293 0 l 67 0 l 90 182 l 21 182 l 21 357 l 114 357 l 147 606 l 72 606 l 72 781 l 169 781 l 192 944 l 418 944 l 396 781 l 490 781 l 513 944 l 739 944 l 717 781 l 785 781 l 785 606 l 694 606 m 468 606 l 374 606 l 340 357 l 435 357 l 468 606 z \\\"},\\\"/\\\":{\\\"ha\\\":722,\\\"x_min\\\":75,\\\"x_max\\\":647,\\\"o\\\":\\\"m 647 1086 l 318 -162 l 75 -107 l 406 1142 l 647 1086 z \\\"},\\\"\\\\\\\\\\\":{\\\"ha\\\":722,\\\"x_min\\\":75,\\\"x_max\\\":647,\\\"o\\\":\\\"m 647 -107 l 404 -162 l 75 1086 l 317 1142 l 647 -107 z \\\"},\\\"⁊\\\":{\\\"ha\\\":774,\\\"x_min\\\":42,\\\"x_max\\\":704,\\\"o\\\":\\\"m 704 554 l 361 -300 l 113 -217 l 415 532 l 42 532 l 42 742 l 704 742 l 704 554 z \\\"},\\\"‿\\\":{\\\"ha\\\":958,\\\"x_min\\\":0,\\\"x_max\\\":958,\\\"o\\\":\\\"m 958 -151 q 742 -276 854 -231 q 479 -322 631 -322 q 216 -276 328 -322 q 0 -151 104 -231 l 78 -37 q 479 -124 279 -124 q 879 -37 678 -124 l 958 -151 z \\\"},\\\"₍\\\":{\\\"ha\\\":553,\\\"x_min\\\":132,\\\"x_max\\\":421,\\\"o\\\":\\\"m 421 368 q 344 192 369 286 q 318 -18 318 99 q 344 -228 318 -135 q 421 -404 369 -322 l 304 -482 q 177 -263 222 -368 q 132 -18 132 -158 q 177 227 132 122 q 304 446 222 332 l 421 368 z \\\"},\\\"₎\\\":{\\\"ha\\\":553,\\\"x_min\\\":132,\\\"x_max\\\":421,\\\"o\\\":\\\"m 249 446 q 376 227 331 332 q 421 -18 421 122 q 376 -263 421 -158 q 249 -482 331 -368 l 132 -404 q 209 -228 183 -322 q 235 -18 235 -135 q 209 192 235 99 q 132 368 183 286 l 249 446 z \\\"},\\\"(\\\":{\\\"ha\\\":451,\\\"x_min\\\":7,\\\"x_max\\\":458,\\\"o\\\":\\\"m 458 1086 q 322 809 363 953 q 282 486 282 665 q 322 163 282 307 q 458 -114 363 19 l 282 -232 q 137 -16 193 -111 q 44 205 81 79 q 7 486 7 331 q 44 767 7 642 q 137 988 81 893 q 282 1204 193 1083 l 458 1086 z \\\"},\\\")\\\":{\\\"ha\\\":451,\\\"x_min\\\":-7,\\\"x_max\\\":444,\\\"o\\\":\\\"m 169 1204 q 315 988 258 1083 q 408 767 371 893 q 444 486 444 642 q 408 205 444 331 q 315 -16 371 79 q 169 -232 258 -111 l -7 -114 q 129 163 89 19 q 169 486 169 307 q 129 809 169 665 q -7 1086 89 953 l 169 1204 z \\\"},\\\"{\\\":{\\\"ha\\\":451,\\\"x_min\\\":0,\\\"x_max\\\":431,\\\"o\\\":\\\"m 431 983 q 358 967 375 983 q 342 908 342 951 l 342 694 q 301 550 342 596 q 174 485 260 504 q 300 422 257 471 q 343 278 343 374 l 343 64 q 360 5 343 21 q 431 -11 376 -11 l 431 -197 q 217 -169 292 -197 q 114 -90 142 -142 q 86 44 86 -39 l 86 257 q 69 348 86 322 q 0 374 51 374 l 0 599 q 69 624 51 599 q 86 715 86 650 l 86 928 q 114 1063 86 1011 q 217 1142 142 1115 q 431 1169 292 1169 l 431 983 z \\\"},\\\"}\\\":{\\\"ha\\\":451,\\\"x_min\\\":21,\\\"x_max\\\":451,\\\"o\\\":\\\"m 21 1169 q 235 1142 160 1169 q 338 1063 310 1115 q 365 928 365 1011 l 365 715 q 383 624 365 650 q 451 599 400 599 l 451 374 q 383 348 400 374 q 365 257 365 322 l 365 44 q 338 -90 365 -39 q 235 -169 310 -142 q 21 -197 160 -197 l 21 -11 q 92 5 75 -11 q 108 64 108 21 l 108 278 q 151 422 108 374 q 278 485 194 471 q 151 550 192 504 q 110 694 110 596 l 110 908 q 93 967 110 951 q 21 983 76 983 l 21 1169 z \\\"},\\\"[\\\":{\\\"ha\\\":451,\\\"x_min\\\":21,\\\"x_max\\\":438,\\\"o\\\":\\\"m 438 950 l 282 950 l 282 21 l 438 21 l 438 -176 l 21 -176 l 21 1149 l 438 1149 l 438 950 z \\\"},\\\"]\\\":{\\\"ha\\\":451,\\\"x_min\\\":14,\\\"x_max\\\":431,\\\"o\\\":\\\"m 431 -176 l 14 -176 l 14 22 l 169 22 l 169 951 l 14 951 l 14 1149 l 431 1149 l 431 -176 z \\\"},\\\"⁽\\\":{\\\"ha\\\":553,\\\"x_min\\\":132,\\\"x_max\\\":421,\\\"o\\\":\\\"m 421 1040 q 344 865 369 958 q 318 654 318 771 q 344 444 318 538 q 421 268 369 350 l 304 190 q 177 409 222 304 q 132 654 132 514 q 177 899 132 794 q 304 1118 222 1004 l 421 1040 z \\\"},\\\"⁾\\\":{\\\"ha\\\":553,\\\"x_min\\\":132,\\\"x_max\\\":421,\\\"o\\\":\\\"m 249 1118 q 376 899 331 1004 q 421 654 421 794 q 376 409 421 514 q 249 190 331 304 l 132 268 q 209 444 183 350 q 235 654 235 538 q 209 865 235 771 q 132 1040 183 958 l 249 1118 z \\\"},\\\"-\\\":{\\\"ha\\\":569,\\\"x_min\\\":49,\\\"x_max\\\":521,\\\"o\\\":\\\"m 49 539 l 521 539 l 521 331 l 49 331 l 49 539 z \\\"},\\\"­\\\":{\\\"ha\\\":569,\\\"x_min\\\":49,\\\"x_max\\\":521,\\\"o\\\":\\\"m 49 539 l 521 539 l 521 331 l 49 331 l 49 539 z \\\"},\\\"–\\\":{\\\"ha\\\":722,\\\"x_min\\\":21,\\\"x_max\\\":701,\\\"o\\\":\\\"m 21 539 l 701 539 l 701 331 l 21 331 l 21 539 z \\\"},\\\"—\\\":{\\\"ha\\\":1111,\\\"x_min\\\":21,\\\"x_max\\\":1090,\\\"o\\\":\\\"m 21 539 l 1090 539 l 1090 331 l 21 331 l 21 539 z \\\"},\\\"‒\\\":{\\\"ha\\\":778,\\\"x_min\\\":14,\\\"x_max\\\":764,\\\"o\\\":\\\"m 14 567 l 764 567 l 764 358 l 14 358 l 14 567 z \\\"},\\\"―\\\":{\\\"ha\\\":722,\\\"x_min\\\":21,\\\"x_max\\\":701,\\\"o\\\":\\\"m 21 539 l 701 539 l 701 331 l 21 331 l 21 539 z \\\"},\\\"‐\\\":{\\\"ha\\\":569,\\\"x_min\\\":49,\\\"x_max\\\":521,\\\"o\\\":\\\"m 49 539 l 521 539 l 521 331 l 49 331 l 49 539 z \\\"},\\\"‑\\\":{\\\"ha\\\":569,\\\"x_min\\\":49,\\\"x_max\\\":521,\\\"o\\\":\\\"m 49 539 l 521 539 l 521 331 l 49 331 l 49 539 z \\\"},\\\"_\\\":{\\\"ha\\\":722,\\\"x_min\\\":7,\\\"x_max\\\":715,\\\"o\\\":\\\"m 7 -53 l 715 -53 l 715 -261 l 7 -261 l 7 -53 z \\\"},\\\"‚\\\":{\\\"ha\\\":350,\\\"x_min\\\":35,\\\"x_max\\\":301,\\\"o\\\":\\\"m 169 228 q 264 192 226 228 q 301 100 301 156 q 290 31 301 67 q 251 -60 279 -4 l 167 -233 l 36 -233 l 94 -10 q 35 101 35 32 q 74 192 35 156 q 169 228 113 228 z \\\"},\\\"„\\\":{\\\"ha\\\":658,\\\"x_min\\\":35,\\\"x_max\\\":610,\\\"o\\\":\\\"m 169 228 q 264 192 226 228 q 301 100 301 156 q 290 31 301 67 q 251 -60 279 -4 l 167 -233 l 36 -233 l 94 -10 q 35 101 35 32 q 74 192 35 156 q 169 228 113 228 m 478 228 q 572 192 535 228 q 610 100 610 156 q 599 31 610 67 q 560 -60 588 -4 l 475 -233 l 344 -233 l 403 -10 q 343 101 343 32 q 382 192 343 156 q 478 228 421 228 z \\\"},\\\"“\\\":{\\\"ha\\\":658,\\\"x_min\\\":49,\\\"x_max\\\":624,\\\"o\\\":\\\"m 181 615 q 86 651 124 615 q 49 743 49 688 q 60 812 49 776 q 99 903 71 847 l 183 1076 l 314 1076 l 256 853 q 315 742 315 811 q 276 651 315 688 q 181 615 238 615 m 489 615 q 394 651 432 615 q 357 743 357 688 q 368 812 357 776 q 407 903 379 847 l 492 1076 l 622 1076 l 564 853 q 624 742 624 811 q 585 651 624 688 q 489 615 546 615 z \\\"},\\\"”\\\":{\\\"ha\\\":658,\\\"x_min\\\":35,\\\"x_max\\\":610,\\\"o\\\":\\\"m 169 1075 q 264 1039 226 1075 q 301 947 301 1003 q 290 878 301 914 q 251 788 279 843 l 167 614 l 36 614 l 94 838 q 35 949 35 879 q 74 1039 35 1003 q 169 1075 113 1075 m 478 1075 q 572 1039 535 1075 q 610 947 610 1003 q 599 878 610 914 q 560 788 588 843 l 475 614 l 344 614 l 403 838 q 343 949 343 879 q 382 1039 343 1003 q 478 1075 421 1075 z \\\"},\\\"‘\\\":{\\\"ha\\\":350,\\\"x_min\\\":49,\\\"x_max\\\":315,\\\"o\\\":\\\"m 181 615 q 86 651 124 615 q 49 743 49 688 q 60 812 49 776 q 99 903 71 847 l 183 1076 l 314 1076 l 256 853 q 315 742 315 811 q 276 651 315 688 q 181 615 238 615 z \\\"},\\\"’\\\":{\\\"ha\\\":350,\\\"x_min\\\":35,\\\"x_max\\\":301,\\\"o\\\":\\\"m 169 1075 q 264 1039 226 1075 q 301 947 301 1003 q 290 878 301 914 q 251 788 279 843 l 167 614 l 36 614 l 94 838 q 35 949 35 879 q 74 1039 35 1003 q 169 1075 113 1075 z \\\"},\\\"«\\\":{\\\"ha\\\":917,\\\"x_min\\\":35,\\\"x_max\\\":882,\\\"o\\\":\\\"m 481 678 l 307 393 l 481 108 l 310 -4 l 35 308 l 35 478 l 310 790 l 481 678 m 882 678 l 708 393 l 882 108 l 711 -4 l 436 308 l 436 478 l 711 790 l 882 678 z \\\"},\\\"»\\\":{\\\"ha\\\":918,\\\"x_min\\\":35,\\\"x_max\\\":883,\\\"o\\\":\\\"m 481 478 l 481 308 l 206 -4 l 35 108 l 208 393 l 35 678 l 206 790 l 481 478 m 883 478 l 883 308 l 608 -4 l 438 108 l 611 393 l 438 678 l 608 790 l 883 478 z \\\"},\\\"‹\\\":{\\\"ha\\\":515,\\\"x_min\\\":35,\\\"x_max\\\":481,\\\"o\\\":\\\"m 481 678 l 307 393 l 481 108 l 310 -4 l 35 308 l 35 478 l 310 790 l 481 678 z \\\"},\\\"›\\\":{\\\"ha\\\":515,\\\"x_min\\\":35,\\\"x_max\\\":481,\\\"o\\\":\\\"m 481 478 l 481 308 l 206 -4 l 35 108 l 208 393 l 35 678 l 206 790 l 481 478 z \\\"},\\\"\\\\\\\"\\\":{\\\"ha\\\":644,\\\"x_min\\\":56,\\\"x_max\\\":589,\\\"o\\\":\\\"m 56 967 l 292 967 l 261 564 l 86 564 l 56 967 m 353 967 l 589 967 l 558 564 l 383 564 l 353 967 z \\\"},\\\"'\\\":{\\\"ha\\\":347,\\\"x_min\\\":56,\\\"x_max\\\":292,\\\"o\\\":\\\"m 56 967 l 292 967 l 261 564 l 86 564 l 56 967 z \\\"},\\\"·\\\":{\\\"ha\\\":333,\\\"x_min\\\":24,\\\"x_max\\\":310,\\\"o\\\":\\\"m 167 568 q 268 526 226 568 q 310 425 310 483 q 268 324 310 367 q 167 282 226 282 q 65 324 107 282 q 24 425 24 367 q 65 526 24 483 q 167 568 107 568 z \\\"},\\\";\\\":{\\\"ha\\\":333,\\\"x_min\\\":24,\\\"x_max\\\":310,\\\"o\\\":\\\"m 167 258 q 269 217 228 258 q 310 115 310 176 q 298 47 310 82 q 254 -61 286 11 l 168 -256 l 26 -256 l 88 -1 q 40 49 57 18 q 24 117 24 79 q 65 218 24 178 q 167 258 106 258 m 167 719 q 268 677 226 719 q 310 576 310 635 q 268 476 310 518 q 167 433 226 433 q 65 476 107 433 q 24 576 24 518 q 65 677 24 635 q 167 719 107 719 z \\\"},\\\" \\\":{\\\"ha\\\":778,\\\"x_min\\\":0,\\\"x_max\\\":0,\\\"o\\\":\\\"\\\"},\\\" \\\":{\\\"ha\\\":333,\\\"x_min\\\":0,\\\"x_max\\\":0,\\\"o\\\":\\\"\\\"},\\\" \\\":{\\\"ha\\\":306,\\\"x_min\\\":0,\\\"x_max\\\":0,\\\"o\\\":\\\"\\\"},\\\"​\\\":{\\\"ha\\\":0,\\\"x_min\\\":0,\\\"x_max\\\":0,\\\"o\\\":\\\"\\\"},\\\"‎\\\":{\\\"ha\\\":0,\\\"x_min\\\":-11,\\\"x_max\\\":178,\\\"o\\\":\\\"m 178 1042 l 101 942 l 83 954 l 143 1031 l 11 1031 l 11 -208 l -11 -208 l -11 1053 l 143 1053 l 83 1129 l 101 1142 l 178 1042 z \\\"},\\\"‏\\\":{\\\"ha\\\":0,\\\"x_min\\\":-178,\\\"x_max\\\":11,\\\"o\\\":\\\"m -83 1129 l -143 1053 l 11 1053 l 11 -208 l -11 -208 l -11 1031 l -143 1031 l -83 954 l -101 942 l -178 1042 l -101 1142 l -83 1129 z \\\"},\\\"‍\\\":{\\\"ha\\\":0,\\\"x_min\\\":-94,\\\"x_max\\\":94,\\\"o\\\":\\\"m 90 1117 l 15 1042 l 94 963 l 79 947 l 11 1015 l 11 -208 l -11 -208 l -11 1015 l -79 947 l -94 963 l -15 1042 l -90 1117 l -75 1132 l 0 1057 l 75 1132 l 90 1117 z \\\"},\\\"‌\\\":{\\\"ha\\\":0,\\\"x_min\\\":-11,\\\"x_max\\\":11,\\\"o\\\":\\\"m 11 -208 l -11 -208 l -11 1042 l 11 1042 l 11 -208 z \\\"},\\\"﻿\\\":{\\\"ha\\\":0,\\\"x_min\\\":0,\\\"x_max\\\":0,\\\"o\\\":\\\"\\\"},\\\"฿\\\":{\\\"ha\\\":840,\\\"x_min\\\":60,\\\"x_max\\\":819,\\\"o\\\":\\\"m 819 281 q 736 83 819 146 q 499 4 653 19 l 499 -229 l 311 -229 l 311 0 l 60 0 l 60 943 l 311 943 l 311 1158 l 499 1158 l 499 935 q 708 862 636 918 q 781 701 781 806 q 732 567 781 615 q 610 500 683 518 q 761 430 703 479 q 819 281 819 381 m 499 672 q 471 734 499 715 q 378 753 443 753 l 338 753 l 338 578 l 383 578 q 473 600 447 578 q 499 672 499 622 m 390 196 q 497 217 461 196 q 533 299 533 239 q 500 378 533 353 q 401 403 467 403 l 338 403 l 338 196 l 390 196 z \\\"},\\\"¢\\\":{\\\"ha\\\":665,\\\"x_min\\\":24,\\\"x_max\\\":679,\\\"o\\\":\\\"m 679 64 q 494 -21 596 -4 l 494 -229 l 307 -229 l 307 -15 q 99 117 174 15 q 24 365 24 218 q 100 622 24 515 q 308 758 176 728 l 308 967 l 494 967 l 494 763 q 679 671 599 743 l 565 511 q 435 563 501 563 q 340 518 371 563 q 310 365 310 474 q 341 223 310 261 q 432 185 372 185 q 492 195 464 185 q 561 232 519 206 l 679 64 z \\\"},\\\"₡\\\":{\\\"ha\\\":788,\\\"x_min\\\":28,\\\"x_max\\\":788,\\\"o\\\":\\\"m 788 104 q 674 21 740 56 q 532 -24 608 -14 l 510 -229 l 426 -229 l 449 -25 q 408 -22 433 -25 l 386 -229 l 303 -229 l 326 -6 q 108 158 186 36 q 28 472 29 281 q 78 724 28 617 q 219 893 128 832 q 429 965 310 954 l 450 1158 l 533 1158 l 513 965 l 553 961 l 574 1158 l 657 1158 l 633 940 q 778 856 714 911 l 650 718 q 613 743 632 732 l 553 176 q 667 243 601 192 l 788 104 m 429 176 q 468 169 442 172 l 533 776 q 493 781 515 781 l 429 176 m 289 472 q 351 225 289 299 l 408 765 q 318 668 347 740 q 289 472 289 596 z \\\"},\\\"¤\\\":{\\\"ha\\\":778,\\\"x_min\\\":14,\\\"x_max\\\":765,\\\"o\\\":\\\"m 704 475 q 661 314 704 385 l 765 210 l 656 100 l 547 206 q 390 167 476 167 q 233 206 304 167 l 124 100 l 14 210 l 119 314 q 76 475 76 388 q 119 635 76 561 l 14 742 l 124 851 l 232 744 q 390 783 303 783 q 549 743 479 783 l 656 851 l 765 742 l 661 636 q 704 475 704 563 m 390 343 q 476 377 447 343 q 504 475 504 411 q 476 571 504 538 q 390 604 447 604 q 306 571 335 604 q 276 475 276 538 q 306 378 276 413 q 390 343 335 343 z \\\"},\\\"$\\\":{\\\"ha\\\":778,\\\"x_min\\\":0,\\\"x_max\\\":757,\\\"o\\\":\\\"m 757 289 q 688 103 757 181 q 497 0 619 26 l 497 -229 l 310 -229 l 310 -10 q 0 126 122 7 l 133 272 q 360 183 238 183 q 445 206 417 183 q 474 265 474 228 q 461 312 474 293 q 417 346 449 331 q 325 381 386 361 q 102 501 165 431 q 39 678 39 572 q 113 860 39 788 q 310 951 188 932 l 310 1158 l 497 1158 l 497 950 q 733 833 639 928 l 614 692 q 417 765 521 765 q 343 748 368 765 q 318 700 318 731 q 332 661 318 676 q 378 632 346 646 q 483 596 411 618 q 692 479 628 549 q 757 289 757 410 z \\\"},\\\"₫\\\":{\\\"ha\\\":849,\\\"x_min\\\":24,\\\"x_max\\\":849,\\\"o\\\":\\\"m 849 918 l 849 778 l 769 778 l 769 0 l 525 0 l 515 74 q 306 -26 438 -26 q 94 75 165 -26 q 24 356 24 176 q 63 549 24 464 q 172 683 101 635 q 333 731 242 731 q 494 676 429 731 l 494 778 l 329 778 l 329 918 l 494 918 l 494 1008 l 769 982 l 769 918 l 849 918 m 399 161 q 494 224 456 161 l 494 506 q 455 535 474 525 q 413 544 436 544 q 335 499 364 544 q 306 354 306 454 q 330 200 306 239 q 399 161 354 161 m 194 -94 l 646 -94 l 646 -281 l 194 -281 l 194 -94 z \\\"},\\\"₯\\\":{\\\"ha\\\":1856,\\\"x_min\\\":0,\\\"x_max\\\":1825,\\\"o\\\":\\\"m 518 953 q 885 851 746 953 q 1025 482 1025 749 q 535 0 1025 0 l 172 0 l 172 192 q 251 227 226 206 q 283 274 276 249 q 289 346 289 300 l 289 668 l 558 665 l 558 374 q 537 276 558 315 q 451 201 515 238 l 551 201 q 653 228 614 201 q 712 315 693 254 q 731 482 731 376 q 688 694 731 633 q 553 754 644 754 l 271 754 q 214 703 214 754 q 219 665 214 683 q 235 618 224 646 l 64 546 q 17 634 35 592 q 0 722 0 676 q 78 892 0 831 q 286 953 157 953 l 518 953 m 1449 769 q 1728 669 1631 769 q 1825 374 1825 568 q 1788 167 1825 258 q 1684 24 1751 76 q 1529 -28 1617 -28 q 1435 -8 1478 -28 q 1357 56 1393 11 l 1357 -287 l 1082 -315 l 1082 385 q 1173 670 1082 571 q 1449 769 1264 769 m 1444 168 q 1543 369 1543 168 q 1519 531 1543 489 q 1449 574 1494 574 q 1378 526 1399 574 q 1357 365 1357 479 l 1357 228 q 1396 181 1375 194 q 1444 168 1417 168 z \\\"},\\\"€\\\":{\\\"ha\\\":833,\\\"x_min\\\":0,\\\"x_max\\\":833,\\\"o\\\":\\\"m 393 296 q 576 164 435 164 q 681 180 628 164 q 783 225 735 196 l 783 24 q 669 -16 722 -4 q 554 -28 615 -28 q 269 58 383 -28 q 118 296 156 144 l 0 296 l 35 428 l 111 428 l 111 511 l 0 511 l 35 643 l 121 643 q 285 879 165 792 q 563 967 404 967 q 713 944 649 967 q 833 886 778 922 l 739 725 q 572 776 665 776 q 465 742 511 776 q 396 643 419 708 l 719 643 l 685 511 l 383 511 l 383 428 l 667 428 l 632 296 l 393 296 z \\\"},\\\"ƒ\\\":{\\\"ha\\\":542,\\\"x_min\\\":-51,\\\"x_max\\\":658,\\\"o\\\":\\\"m 469 864 q 398 844 417 864 q 379 771 379 824 l 379 742 l 551 742 l 521 556 l 379 556 l 379 107 q 290 -169 379 -74 q 43 -315 201 -264 l -51 -115 q 35 -67 3 -90 q 85 -6 67 -43 q 104 90 104 32 l 104 556 l -7 556 l -7 742 l 104 742 l 104 785 q 185 983 104 906 q 418 1061 265 1061 q 547 1047 485 1061 q 658 1010 610 1032 l 586 836 q 469 864 524 864 z \\\"},\\\"₴\\\":{\\\"ha\\\":833,\\\"x_min\\\":14,\\\"x_max\\\":819,\\\"o\\\":\\\"m 693 501 q 614 451 663 476 l 819 451 l 819 325 l 351 325 q 331 257 331 300 q 356 194 331 217 q 449 172 382 172 q 679 264 572 172 l 815 114 q 438 -28 665 -28 q 231 11 317 -28 q 100 119 144 50 q 56 279 56 188 q 58 325 56 297 l 14 325 l 14 451 l 121 451 q 192 501 150 479 l 14 501 l 14 628 l 467 628 q 497 658 489 642 q 504 701 504 675 q 482 752 504 735 q 403 769 460 769 q 201 693 297 769 l 79 838 q 425 967 211 967 q 603 931 522 967 q 730 831 683 896 q 776 679 776 765 q 772 628 776 653 l 819 628 l 819 501 l 693 501 z \\\"},\\\"₺\\\":{\\\"ha\\\":840,\\\"x_min\\\":28,\\\"x_max\\\":840,\\\"o\\\":\\\"m 840 294 q 701 74 807 149 q 418 0 594 0 l 156 0 l 156 238 l 81 203 l 28 318 l 156 378 l 156 454 l 82 419 l 28 535 l 156 594 l 156 944 l 425 944 l 425 719 l 600 801 l 653 686 l 425 579 l 425 504 l 599 585 l 653 469 l 425 364 l 425 204 l 464 204 q 585 242 539 204 q 660 358 632 281 l 840 294 z \\\"},\\\"₦\\\":{\\\"ha\\\":904,\\\"x_min\\\":14,\\\"x_max\\\":890,\\\"o\\\":\\\"m 833 501 l 833 451 l 890 451 l 890 339 l 833 339 l 833 0 l 500 0 l 392 339 l 297 339 l 297 292 l 297 0 l 72 0 l 72 339 l 14 339 l 14 451 l 72 451 l 72 501 l 14 501 l 14 614 l 72 614 l 72 944 l 399 944 l 507 614 l 606 614 l 606 638 l 606 944 l 833 944 l 833 614 l 890 614 l 890 501 l 833 501 m 279 614 l 304 614 l 267 733 l 279 614 m 357 451 l 340 501 l 289 501 l 293 451 l 357 451 m 613 451 q 610 501 610 485 l 543 501 l 560 451 l 613 451 m 633 253 q 624 339 629 283 l 596 339 l 639 208 l 633 253 z \\\"},\\\"₽\\\":{\\\"ha\\\":857,\\\"x_min\\\":42,\\\"x_max\\\":836,\\\"o\\\":\\\"m 403 279 l 617 279 l 617 147 l 403 147 l 403 0 l 131 0 l 131 147 l 42 147 l 42 279 l 131 279 l 131 349 l 42 349 l 42 501 l 131 501 l 131 944 l 444 944 q 729 865 622 944 q 836 640 836 785 q 733 420 836 492 q 449 349 629 349 l 403 349 l 403 279 m 403 760 l 403 501 l 449 501 q 528 538 499 501 q 558 638 558 575 q 528 728 558 696 q 440 760 499 760 l 403 760 z \\\"},\\\"₹\\\":{\\\"ha\\\":761,\\\"x_min\\\":56,\\\"x_max\\\":733,\\\"o\\\":\\\"m 733 813 l 533 813 q 636 707 606 782 l 733 707 l 733 575 l 654 575 q 607 455 649 507 q 486 363 565 403 l 721 0 l 418 0 l 232 322 l 56 322 l 56 468 l 247 468 q 337 490 307 468 q 375 575 367 513 l 56 575 l 56 707 l 371 707 q 329 778 360 757 q 247 799 299 799 l 56 799 l 56 944 l 733 944 l 733 813 z \\\"},\\\"₪\\\":{\\\"ha\\\":1307,\\\"x_min\\\":38,\\\"x_max\\\":1269,\\\"o\\\":\\\"m 324 597 q 317 417 317 551 l 317 0 l 82 0 l 82 308 q 192 597 82 507 l 38 597 l 38 793 l 547 793 q 777 763 692 793 q 903 658 863 732 q 943 450 943 583 l 943 292 l 721 290 l 721 394 q 702 527 721 483 q 647 584 683 571 q 542 597 611 597 l 324 597 m 1269 793 l 1269 343 q 1239 149 1269 222 q 1129 38 1208 75 q 906 0 1050 0 l 406 0 l 406 503 l 631 503 l 631 196 l 864 196 q 963 211 926 196 q 1015 265 999 226 q 1032 372 1032 303 l 1032 793 l 1269 793 z \\\"},\\\"£\\\":{\\\"ha\\\":765,\\\"x_min\\\":28,\\\"x_max\\\":765,\\\"o\\\":\\\"m 414 365 q 395 270 414 308 q 322 203 376 232 l 738 203 l 707 0 l 28 0 l 28 193 q 107 228 82 207 q 138 276 132 250 q 144 347 144 301 l 144 422 l 49 422 l 49 554 l 144 554 l 144 660 q 226 882 144 797 q 461 967 307 967 q 639 929 565 967 q 765 815 713 892 l 600 696 q 551 751 576 735 q 493 767 525 767 q 432 738 450 767 q 414 657 414 710 l 414 554 l 651 554 l 651 422 l 414 422 l 414 365 z \\\"},\\\"₩\\\":{\\\"ha\\\":1199,\\\"x_min\\\":21,\\\"x_max\\\":1178,\\\"o\\\":\\\"m 1128 600 l 1178 600 l 1178 488 l 1113 488 l 1104 438 l 1178 438 l 1178 325 l 1089 325 l 1042 0 l 681 0 l 640 325 l 549 325 l 504 0 l 151 0 l 107 325 l 21 325 l 21 438 l 90 438 l 83 488 l 21 488 l 21 600 l 68 600 l 21 944 l 299 944 l 326 600 l 411 600 l 457 944 l 747 944 l 786 600 l 874 600 l 911 944 l 1178 944 l 1128 600 m 586 600 l 607 600 l 597 681 l 586 600 m 339 438 l 390 438 l 396 488 l 335 488 l 339 438 m 626 438 l 621 488 l 571 488 l 564 438 l 626 438 m 861 488 l 799 488 l 804 438 l 856 438 l 861 488 m 375 325 l 349 325 l 358 201 l 375 325 m 844 325 l 817 325 l 831 201 l 844 325 z \\\"},\\\"¥\\\":{\\\"ha\\\":817,\\\"x_min\\\":-21,\\\"x_max\\\":838,\\\"o\\\":\\\"m 603 494 l 726 494 l 726 363 l 546 363 l 546 279 l 726 279 l 726 147 l 546 147 l 546 0 l 274 0 l 274 147 l 96 147 l 96 279 l 274 279 l 274 363 l 96 363 l 96 494 l 215 494 l -21 944 l 268 944 l 414 565 l 556 944 l 838 944 l 603 494 z \\\"},\\\"∙\\\":{\\\"ha\\\":333,\\\"x_min\\\":24,\\\"x_max\\\":310,\\\"o\\\":\\\"m 167 568 q 268 526 226 568 q 310 425 310 483 q 268 324 310 367 q 167 282 226 282 q 65 324 107 282 q 24 425 24 367 q 65 526 24 483 q 167 568 107 568 z \\\"},\\\"∕\\\":{\\\"ha\\\":265,\\\"x_min\\\":-232,\\\"x_max\\\":497,\\\"o\\\":\\\"m 497 985 l -78 -125 l -232 -49 l 343 1061 l 497 985 z \\\"},\\\"⋅\\\":{\\\"ha\\\":333,\\\"x_min\\\":24,\\\"x_max\\\":310,\\\"o\\\":\\\"m 167 568 q 268 526 226 568 q 310 425 310 483 q 268 324 310 367 q 167 282 226 282 q 65 324 107 282 q 24 425 24 367 q 65 526 24 483 q 167 568 107 568 z \\\"},\\\"₌\\\":{\\\"ha\\\":1111,\\\"x_min\\\":67,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 67 49 l 489 49 l 489 -85 l 67 -85 l 67 49 m 622 49 l 1044 49 l 1044 -85 l 622 -85 l 622 49 z \\\"},\\\"⁼\\\":{\\\"ha\\\":1111,\\\"x_min\\\":67,\\\"x_max\\\":1044,\\\"o\\\":\\\"m 67 774 l 489 774 l 489 640 l 67 640 l 67 774 m 622 774 l 1044 774 l 1044 640 l 622 640 l 622 774 z \\\"},\\\"₋\\\":{\\\"ha\\\":556,\\\"x_min\\\":67,\\\"x_max\\\":489,\\\"o\\\":\\\"m 67 67 l 489 67 l 489 -74 l 67 -74 l 67 67 z \\\"},\\\"⁻\\\":{\\\"ha\\\":556,\\\"x_min\\\":67,\\\"x_max\\\":489,\\\"o\\\":\\\"m 67 792 l 489 792 l 489 651 l 67 651 l 67 792 z \\\"},\\\"+\\\":{\\\"ha\\\":764,\\\"x_min\\\":56,\\\"x_max\\\":708,\\\"o\\\":\\\"m 493 565 l 708 565 l 708 357 l 493 357 l 493 135 l 271 135 l 271 357 l 56 357 l 56 565 l 271 565 l 271 788 l 493 788 l 493 565 z \\\"},\\\"−\\\":{\\\"ha\\\":736,\\\"x_min\\\":56,\\\"x_max\\\":681,\\\"o\\\":\\\"m 56 565 l 681 565 l 681 357 l 56 357 l 56 565 z \\\"},\\\"×\\\":{\\\"ha\\\":736,\\\"x_min\\\":64,\\\"x_max\\\":672,\\\"o\\\":\\\"m 672 582 l 514 429 l 672 268 l 525 121 l 371 286 l 211 121 l 64 268 l 221 421 l 64 582 l 211 729 l 364 564 l 525 729 l 672 582 z \\\"},\\\"÷\\\":{\\\"ha\\\":736,\\\"x_min\\\":56,\\\"x_max\\\":681,\\\"o\\\":\\\"m 368 258 q 469 216 428 258 q 511 115 511 174 q 469 15 511 57 q 368 -28 428 -28 q 267 15 308 -28 q 225 115 225 57 q 267 216 225 174 q 368 258 308 258 m 368 950 q 469 908 428 950 q 511 807 511 865 q 469 706 511 749 q 368 664 428 664 q 267 706 308 664 q 225 807 225 749 q 267 908 225 865 q 368 950 308 950 m 56 565 l 681 565 l 681 357 l 56 357 l 56 565 z \\\"},\\\"=\\\":{\\\"ha\\\":736,\\\"x_min\\\":56,\\\"x_max\\\":681,\\\"o\\\":\\\"m 56 718 l 681 718 l 681 510 l 56 510 l 56 718 m 56 413 l 681 413 l 681 204 l 56 204 l 56 413 z \\\"},\\\"≠\\\":{\\\"ha\\\":736,\\\"x_min\\\":56,\\\"x_max\\\":681,\\\"o\\\":\\\"m 490 510 l 432 413 l 681 413 l 681 204 l 307 204 l 199 24 l 63 100 l 125 204 l 56 204 l 56 413 l 250 413 l 308 510 l 56 510 l 56 718 l 433 718 l 538 893 l 674 817 l 614 718 l 681 718 l 681 510 l 490 510 z \\\"},\\\">\\\":{\\\"ha\\\":736,\\\"x_min\\\":35,\\\"x_max\\\":701,\\\"o\\\":\\\"m 701 578 l 701 346 l 118 104 l 35 299 l 464 463 l 35 638 l 118 821 l 701 578 z \\\"},\\\"<\\\":{\\\"ha\\\":736,\\\"x_min\\\":35,\\\"x_max\\\":701,\\\"o\\\":\\\"m 701 638 l 272 463 l 701 299 l 618 104 l 35 346 l 35 578 l 618 821 l 701 638 z \\\"},\\\"≥\\\":{\\\"ha\\\":736,\\\"x_min\\\":35,\\\"x_max\\\":701,\\\"o\\\":\\\"m 701 724 l 701 492 l 118 250 l 35 444 l 464 608 l 35 783 l 118 967 l 701 724 m 56 208 l 681 208 l 681 0 l 56 0 l 56 208 z \\\"},\\\"≤\\\":{\\\"ha\\\":736,\\\"x_min\\\":35,\\\"x_max\\\":701,\\\"o\\\":\\\"m 701 783 l 272 608 l 701 444 l 618 250 l 35 492 l 35 724 l 618 967 l 701 783 m 56 208 l 681 208 l 681 0 l 56 0 l 56 208 z \\\"},\\\"±\\\":{\\\"ha\\\":764,\\\"x_min\\\":56,\\\"x_max\\\":708,\\\"o\\\":\\\"m 69 208 l 694 208 l 694 0 l 69 0 l 69 208 m 493 708 l 708 708 l 708 500 l 493 500 l 493 278 l 271 278 l 271 500 l 56 500 l 56 708 l 271 708 l 271 931 l 493 931 l 493 708 z \\\"},\\\"≈\\\":{\\\"ha\\\":736,\\\"x_min\\\":7,\\\"x_max\\\":729,\\\"o\\\":\\\"m 486 154 q 401 167 435 154 q 325 206 367 181 q 278 231 294 224 q 240 238 261 238 q 193 224 210 238 q 163 192 176 210 q 146 168 150 175 l 7 238 q 108 385 51 331 q 250 439 165 439 q 335 426 301 439 q 411 388 369 413 q 458 363 442 369 q 496 356 475 356 q 542 368 525 356 q 572 397 558 381 q 592 422 585 414 l 729 356 q 628 208 685 263 q 486 154 571 154 m 486 460 q 401 473 435 460 q 325 511 367 486 q 278 536 294 529 q 240 543 261 543 q 193 529 210 543 q 163 498 176 515 q 146 474 150 481 l 7 543 q 108 690 51 636 q 250 744 165 744 q 335 731 301 744 q 411 693 369 718 q 458 668 442 675 q 496 661 475 661 q 542 674 525 661 q 572 703 558 686 q 592 728 585 719 l 729 661 q 628 514 685 568 q 486 460 571 460 z \\\"},\\\"~\\\":{\\\"ha\\\":736,\\\"x_min\\\":7,\\\"x_max\\\":729,\\\"o\\\":\\\"m 486 307 q 401 320 435 307 q 325 358 367 333 q 278 383 294 376 q 240 390 261 390 q 193 376 210 390 q 163 345 176 363 q 146 321 150 328 l 7 390 q 108 538 51 483 q 250 592 165 592 q 335 578 301 592 q 411 540 369 565 q 458 515 442 522 q 496 508 475 508 q 542 521 525 508 q 572 550 558 533 q 592 575 585 567 l 729 508 q 628 361 685 415 q 486 307 571 307 z \\\"},\\\"¬\\\":{\\\"ha\\\":764,\\\"x_min\\\":56,\\\"x_max\\\":708,\\\"o\\\":\\\"m 708 135 l 486 135 l 486 357 l 56 357 l 56 565 l 708 565 l 708 135 z \\\"},\\\"^\\\":{\\\"ha\\\":792,\\\"x_min\\\":7,\\\"x_max\\\":785,\\\"o\\\":\\\"m 785 732 l 522 732 l 394 979 l 275 732 l 7 732 l 269 1176 l 522 1176 l 785 732 z \\\"},\\\"∅\\\":{\\\"ha\\\":1250,\\\"x_min\\\":117,\\\"x_max\\\":1133,\\\"o\\\":\\\"m 975 857 q 1092 690 1050 786 q 1133 485 1133 593 q 1065 228 1133 344 q 881 45 997 113 q 626 -22 765 -22 q 375 42 494 -22 l 332 -17 l 150 -17 l 258 132 q 154 292 192 201 q 117 485 117 382 q 185 742 117 625 q 371 926 254 858 q 626 994 488 994 q 856 940 747 994 l 890 989 l 1072 989 l 975 857 m 275 485 q 296 364 275 422 q 354 260 317 306 l 763 815 q 626 842 697 842 q 449 794 529 842 q 322 664 368 746 q 275 485 275 582 m 626 131 q 803 178 724 131 q 930 306 883 225 q 976 485 976 388 q 951 619 976 556 q 882 731 926 682 l 468 168 q 626 131 543 131 z \\\"},\\\"∞\\\":{\\\"ha\\\":1250,\\\"x_min\\\":28,\\\"x_max\\\":1222,\\\"o\\\":\\\"m 906 769 q 1084 723 1013 769 q 1189 601 1156 676 q 1222 438 1222 525 q 1189 274 1222 349 q 1082 153 1156 199 q 894 107 1008 107 q 607 257 726 107 q 485 142 547 176 q 344 107 422 107 q 166 153 238 107 q 61 276 94 200 q 28 439 28 351 q 61 603 28 528 q 168 724 94 678 q 356 769 242 769 q 640 614 531 769 q 765 734 703 699 q 906 769 826 769 m 389 311 q 463 343 431 311 q 538 444 496 375 q 478 534 515 501 q 392 567 442 567 q 322 533 346 567 q 297 439 297 499 q 321 345 297 379 q 389 311 344 311 m 858 310 q 928 344 904 310 q 953 438 953 378 q 929 531 953 497 q 861 565 906 565 q 786 533 818 565 q 710 424 754 500 q 858 310 769 310 z \\\"},\\\"∫\\\":{\\\"ha\\\":567,\\\"x_min\\\":-111,\\\"x_max\\\":678,\\\"o\\\":\\\"m 447 1206 q 678 1154 567 1206 l 606 981 q 496 1008 544 1008 q 440 987 457 1008 q 422 915 422 965 l 422 -11 q 335 -240 422 -165 q 111 -315 247 -315 q -111 -262 -11 -315 l -39 -89 q 72 -118 24 -118 q 130 -97 113 -118 q 147 -25 147 -76 l 147 901 q 222 1126 147 1047 q 447 1206 296 1206 z \\\"},\\\"Ω\\\":{\\\"ha\\\":958,\\\"x_min\\\":28,\\\"x_max\\\":931,\\\"o\\\":\\\"m 479 994 q 722 933 619 994 q 877 770 824 872 q 931 544 931 668 q 881 338 931 426 q 742 197 832 249 l 901 197 l 901 0 l 518 0 l 518 183 q 597 254 572 210 q 627 361 621 299 q 633 544 633 424 q 479 792 633 792 q 325 544 325 792 q 331 362 325 424 q 362 256 338 300 q 440 183 386 211 l 440 0 l 57 0 l 57 197 l 217 197 q 77 338 126 249 q 28 544 28 426 q 81 770 28 668 q 237 933 135 872 q 479 994 339 994 z \\\"},\\\"∆\\\":{\\\"ha\\\":846,\\\"x_min\\\":-35,\\\"x_max\\\":881,\\\"o\\\":\\\"m 881 0 l -35 0 l 253 967 l 594 967 l 881 0 m 306 203 l 535 203 l 421 763 l 306 203 z \\\"},\\\"∏\\\":{\\\"ha\\\":847,\\\"x_min\\\":21,\\\"x_max\\\":826,\\\"o\\\":\\\"m 736 742 l 736 -287 l 479 -315 l 479 742 l 368 742 l 368 -287 l 111 -315 l 111 742 l 21 742 l 21 944 l 826 944 l 826 742 l 736 742 z \\\"},\\\"∑\\\":{\\\"ha\\\":738,\\\"x_min\\\":28,\\\"x_max\\\":710,\\\"o\\\":\\\"m 710 744 l 324 744 l 539 522 l 539 425 l 324 200 l 710 200 l 710 0 l 28 0 l 28 189 l 289 471 l 28 756 l 28 944 l 710 944 l 710 744 z \\\"},\\\"√\\\":{\\\"ha\\\":778,\\\"x_min\\\":-7,\\\"x_max\\\":1097,\\\"o\\\":\\\"m 1097 1044 l 829 1044 l 542 0 l 228 0 l -7 644 l 250 719 l 375 236 l 624 1247 l 1097 1247 l 1097 1044 z \\\"},\\\"µ\\\":{\\\"ha\\\":804,\\\"x_min\\\":58,\\\"x_max\\\":767,\\\"o\\\":\\\"m 515 -28 q 498 17 504 -4 q 485 79 492 39 q 358 -8 429 -8 q 295 3 324 -8 q 242 44 267 14 q 298 -58 281 -14 q 315 -171 315 -101 l 315 -287 l 58 -312 l 58 742 l 333 742 l 333 240 q 379 181 333 181 q 420 196 399 181 q 460 242 442 211 l 460 742 l 735 742 l 735 256 q 767 0 735 110 l 515 -28 z \\\"},\\\"∂\\\":{\\\"ha\\\":778,\\\"x_min\\\":14,\\\"x_max\\\":750,\\\"o\\\":\\\"m 156 994 q 503 876 372 957 q 692 671 633 796 q 750 365 750 546 q 708 167 750 257 q 583 25 667 78 q 379 -28 500 -28 q 189 15 272 -28 q 60 134 106 57 q 14 313 14 211 q 50 478 14 406 q 147 592 86 551 q 283 633 208 633 q 392 613 349 633 q 469 547 436 593 q 396 677 442 628 q 281 756 350 726 q 97 810 211 785 l 156 994 m 379 161 q 438 187 419 161 q 462 257 457 213 q 467 381 467 301 q 425 424 446 411 q 376 438 404 438 q 313 408 338 438 q 289 299 289 379 q 312 199 289 238 q 379 161 335 161 z \\\"},\\\"%\\\":{\\\"ha\\\":1221,\\\"x_min\\\":28,\\\"x_max\\\":1193,\\\"o\\\":\\\"m 1017 906 l 372 -62 l 210 39 l 853 1007 l 1017 906 m 288 967 q 419 935 360 967 q 513 844 478 903 q 547 708 547 786 q 513 572 547 631 q 419 482 478 514 q 288 450 360 450 q 156 482 215 450 q 63 572 97 514 q 28 708 28 631 q 63 844 28 786 q 156 935 97 903 q 288 967 215 967 m 288 808 q 211 708 211 808 q 288 608 211 608 q 363 708 363 608 q 288 808 363 808 m 933 489 q 1065 457 1006 489 q 1158 367 1124 425 q 1193 231 1193 308 q 1158 94 1193 153 q 1065 4 1124 36 q 933 -28 1006 -28 q 801 4 861 -28 q 707 95 742 36 q 672 231 672 154 q 707 366 672 307 q 801 457 742 425 q 933 489 861 489 m 933 331 q 857 231 857 331 q 933 131 857 131 q 1008 231 1008 131 q 933 331 1008 331 z \\\"},\\\"‰\\\":{\\\"ha\\\":1776,\\\"x_min\\\":28,\\\"x_max\\\":1749,\\\"o\\\":\\\"m 1017 906 l 372 -62 l 210 39 l 853 1007 l 1017 906 m 288 967 q 419 935 360 967 q 513 844 478 903 q 547 708 547 786 q 513 572 547 631 q 419 482 478 514 q 288 450 360 450 q 156 482 215 450 q 63 572 97 514 q 28 708 28 631 q 63 844 28 786 q 156 935 97 903 q 288 967 215 967 m 288 808 q 211 708 211 808 q 288 608 211 608 q 363 708 363 608 q 288 808 363 808 m 933 489 q 1065 457 1006 489 q 1158 367 1124 425 q 1193 231 1193 308 q 1158 94 1193 153 q 1065 4 1124 36 q 933 -28 1006 -28 q 801 4 861 -28 q 707 95 742 36 q 672 231 672 154 q 707 366 672 307 q 801 457 742 425 q 933 489 861 489 m 1489 489 q 1620 457 1561 489 q 1714 367 1679 425 q 1749 231 1749 308 q 1714 94 1749 153 q 1620 4 1679 36 q 1489 -28 1561 -28 q 1357 4 1417 -28 q 1263 95 1297 36 q 1228 231 1228 154 q 1263 366 1228 307 q 1357 457 1297 425 q 1489 489 1417 489 m 933 331 q 857 231 857 331 q 933 131 857 131 q 1008 231 1008 131 q 933 331 1008 331 m 1489 331 q 1413 231 1413 331 q 1489 131 1413 131 q 1564 231 1564 131 q 1489 331 1564 331 z \\\"},\\\"₊\\\":{\\\"ha\\\":556,\\\"x_min\\\":67,\\\"x_max\\\":489,\\\"o\\\":\\\"m 361 67 l 489 67 l 489 -74 l 361 -74 l 361 -193 l 194 -193 l 194 -74 l 67 -74 l 67 67 l 194 67 l 194 186 l 361 186 l 361 67 z \\\"},\\\"⁺\\\":{\\\"ha\\\":556,\\\"x_min\\\":67,\\\"x_max\\\":489,\\\"o\\\":\\\"m 361 792 l 489 792 l 489 651 l 361 651 l 361 532 l 194 532 l 194 651 l 67 651 l 67 792 l 194 792 l 194 911 l 361 911 l 361 792 z \\\"},\\\"⦁\\\":{\\\"ha\\\":872,\\\"x_min\\\":89,\\\"x_max\\\":783,\\\"o\\\":\\\"m 436 88 q 262 134 342 88 q 135 260 182 181 q 89 435 89 340 q 135 609 89 529 q 262 735 182 689 q 436 782 342 782 q 610 735 531 782 q 737 609 690 689 q 783 435 783 529 q 737 260 783 340 q 610 134 690 181 q 436 88 531 88 z \\\"},\\\"↑\\\":{\\\"ha\\\":1250,\\\"x_min\\\":131,\\\"x_max\\\":1119,\\\"o\\\":\\\"m 501 656 q 457 577 481 608 q 386 503 433 546 l 281 406 l 131 560 l 625 1008 l 1119 560 l 969 406 l 864 503 q 793 577 817 546 q 749 656 769 608 l 749 0 l 501 0 l 501 656 z \\\"},\\\"↗\\\":{\\\"ha\\\":1149,\\\"x_min\\\":131,\\\"x_max\\\":1018,\\\"o\\\":\\\"m 131 174 l 638 679 q 521 661 579 661 q 451 664 479 661 l 299 675 l 313 890 l 986 858 l 1018 183 l 781 168 l 772 310 q 771 353 771 325 q 777 430 771 394 q 797 507 783 465 l 297 3 l 131 174 z \\\"},\\\"→\\\":{\\\"ha\\\":1250,\\\"x_min\\\":108,\\\"x_max\\\":1171,\\\"o\\\":\\\"m 1171 457 l 731 -31 l 556 119 l 649 221 q 727 294 692 267 q 808 347 763 322 l 108 347 l 108 567 l 807 567 q 727 619 763 592 q 649 693 692 647 l 556 794 l 731 944 l 1171 457 z \\\"},\\\"↘\\\":{\\\"ha\\\":1149,\\\"x_min\\\":131,\\\"x_max\\\":1018,\\\"o\\\":\\\"m 797 386 q 777 463 783 428 q 771 540 771 499 q 772 583 771 568 l 781 725 l 1018 710 l 986 35 l 313 3 l 299 218 l 451 229 q 521 232 479 232 q 638 214 579 232 l 131 719 l 297 890 l 797 386 z \\\"},\\\"↓\\\":{\\\"ha\\\":1250,\\\"x_min\\\":131,\\\"x_max\\\":1119,\\\"o\\\":\\\"m 749 269 q 793 348 769 317 q 864 422 817 379 l 969 519 l 1119 365 l 625 -83 l 131 365 l 281 519 l 386 422 q 457 348 433 379 q 501 269 481 317 l 501 925 l 749 925 l 749 269 z \\\"},\\\"↙\\\":{\\\"ha\\\":1250,\\\"x_min\\\":181,\\\"x_max\\\":1068,\\\"o\\\":\\\"m 1068 719 l 561 214 q 678 232 619 232 q 747 229 719 232 l 900 218 l 886 3 l 213 35 l 181 710 l 418 725 l 426 583 q 428 540 428 568 q 422 463 428 499 q 401 386 415 428 l 901 890 l 1068 719 z \\\"},\\\"←\\\":{\\\"ha\\\":1250,\\\"x_min\\\":79,\\\"x_max\\\":1142,\\\"o\\\":\\\"m 694 794 l 601 693 q 523 619 558 647 q 443 567 488 592 l 1142 567 l 1142 347 l 442 347 q 523 294 488 322 q 601 221 558 267 l 694 119 l 519 -31 l 79 457 l 519 944 l 694 794 z \\\"},\\\"↖\\\":{\\\"ha\\\":1149,\\\"x_min\\\":131,\\\"x_max\\\":1018,\\\"o\\\":\\\"m 351 457 q 372 380 365 415 q 378 303 378 344 q 376 260 378 275 l 368 118 l 131 133 l 163 808 l 836 840 l 850 625 l 697 614 q 628 611 669 611 q 511 629 569 611 l 1018 124 l 851 -47 l 351 457 z \\\"},\\\"↔\\\":{\\\"ha\\\":1807,\\\"x_min\\\":79,\\\"x_max\\\":1699,\\\"o\\\":\\\"m 1699 457 l 1258 -31 l 1083 119 l 1176 221 q 1255 294 1219 267 q 1336 347 1290 322 l 442 347 q 523 294 488 322 q 601 221 558 267 l 694 119 l 519 -31 l 79 457 l 519 944 l 694 794 l 601 693 q 523 619 558 647 q 443 567 488 592 l 1335 567 q 1255 619 1290 592 q 1176 693 1219 647 l 1083 794 l 1258 944 l 1699 457 z \\\"},\\\"↕\\\":{\\\"ha\\\":1250,\\\"x_min\\\":131,\\\"x_max\\\":1119,\\\"o\\\":\\\"m 1119 806 l 969 651 l 864 749 q 793 823 817 792 q 749 901 769 854 l 749 18 q 793 97 769 65 q 864 171 817 128 l 969 268 l 1119 114 l 625 -335 l 131 114 l 281 268 l 386 171 q 457 97 433 128 q 501 18 481 65 l 501 901 q 457 823 481 854 q 386 749 433 792 l 281 651 l 131 806 l 625 1254 l 1119 806 z \\\"},\\\"⇧\\\":{\\\"ha\\\":1000,\\\"x_min\\\":83,\\\"x_max\\\":917,\\\"o\\\":\\\"m 388 -17 q 338 3 357 -17 q 318 53 318 22 l 318 742 l 83 742 l 500 1156 l 917 742 l 682 742 l 682 53 q 663 3 682 22 q 613 -17 644 -17 l 388 -17 m 617 804 l 765 804 l 500 1067 l 235 804 l 383 804 l 383 44 l 617 44 l 617 804 z \\\"},\\\"⇨\\\":{\\\"ha\\\":1333,\\\"x_min\\\":56,\\\"x_max\\\":1278,\\\"o\\\":\\\"m 56 538 q 75 588 56 569 q 125 607 94 607 l 864 607 l 864 851 l 1278 435 l 864 18 l 864 263 l 125 263 q 75 282 94 263 q 56 332 56 301 l 56 538 m 117 324 l 926 324 l 926 169 l 1189 435 l 926 700 l 926 546 l 117 546 l 117 324 z \\\"},\\\"⇩\\\":{\\\"ha\\\":1000,\\\"x_min\\\":83,\\\"x_max\\\":917,\\\"o\\\":\\\"m 613 1042 q 663 1023 644 1042 q 682 972 682 1004 l 682 283 l 917 283 l 500 -131 l 83 283 l 318 283 l 318 972 q 338 1023 318 1004 q 388 1042 357 1042 l 613 1042 m 383 221 l 235 221 l 500 -42 l 765 221 l 617 221 l 617 981 l 383 981 l 383 221 z \\\"},\\\"⇦\\\":{\\\"ha\\\":1333,\\\"x_min\\\":56,\\\"x_max\\\":1278,\\\"o\\\":\\\"m 1278 332 q 1259 282 1278 301 q 1208 263 1240 263 l 469 263 l 469 18 l 56 435 l 469 851 l 469 607 l 1208 607 q 1259 588 1240 607 q 1278 538 1278 569 l 1278 332 m 407 546 l 407 700 l 144 435 l 407 169 l 407 324 l 1217 324 l 1217 546 l 407 546 z \\\"},\\\"➡\\\":{\\\"ha\\\":1389,\\\"x_min\\\":111,\\\"x_max\\\":1333,\\\"o\\\":\\\"m 111 538 q 131 588 111 569 q 181 607 150 607 l 919 607 l 919 851 l 1333 435 l 919 18 l 919 263 l 181 263 q 131 282 150 263 q 111 332 111 301 l 111 538 z \\\"},\\\"⬆\\\":{\\\"ha\\\":1000,\\\"x_min\\\":83,\\\"x_max\\\":917,\\\"o\\\":\\\"m 388 -17 q 338 3 357 -17 q 318 53 318 22 l 318 742 l 83 742 l 500 1156 l 917 742 l 682 742 l 682 53 q 663 3 682 22 q 613 -17 644 -17 l 388 -17 z \\\"},\\\"⬇\\\":{\\\"ha\\\":1000,\\\"x_min\\\":83,\\\"x_max\\\":917,\\\"o\\\":\\\"m 613 1042 q 663 1023 644 1042 q 682 972 682 1004 l 682 283 l 917 283 l 500 -131 l 83 283 l 318 283 l 318 972 q 338 1023 318 1004 q 388 1042 357 1042 l 613 1042 z \\\"},\\\"⬅\\\":{\\\"ha\\\":1389,\\\"x_min\\\":56,\\\"x_max\\\":1278,\\\"o\\\":\\\"m 1278 332 q 1259 282 1278 301 q 1208 263 1240 263 l 469 263 l 469 18 l 56 435 l 469 851 l 469 607 l 1208 607 q 1259 588 1240 607 q 1278 538 1278 569 l 1278 332 z \\\"},\\\"●\\\":{\\\"ha\\\":1218,\\\"x_min\\\":121,\\\"x_max\\\":1097,\\\"o\\\":\\\"m 610 -17 q 364 49 476 -17 q 186 226 251 114 q 121 472 121 339 q 186 717 121 604 q 364 894 251 829 q 610 960 476 960 q 854 894 742 960 q 1032 717 967 829 q 1097 472 1097 604 q 1032 226 1097 339 q 854 49 967 114 q 610 -17 742 -17 z \\\"},\\\"◊\\\":{\\\"ha\\\":839,\\\"x_min\\\":35,\\\"x_max\\\":804,\\\"o\\\":\\\"m 804 471 l 568 0 l 271 0 l 35 471 l 271 944 l 568 944 l 804 471 m 306 472 l 419 189 l 533 472 l 419 754 l 306 472 z \\\"},\\\"▯\\\":{\\\"ha\\\":818,\\\"x_min\\\":133,\\\"x_max\\\":685,\\\"o\\\":\\\"m 685 0 l 133 0 l 133 957 l 685 957 l 685 0 m 261 829 l 261 128 l 557 128 l 557 829 l 261 829 z \\\"},\\\"▲\\\":{\\\"ha\\\":1219,\\\"x_min\\\":75,\\\"x_max\\\":1144,\\\"o\\\":\\\"m 610 978 l 1144 42 l 75 42 l 610 978 z \\\"},\\\"▶\\\":{\\\"ha\\\":1219,\\\"x_min\\\":164,\\\"x_max\\\":1100,\\\"o\\\":\\\"m 164 1024 l 1100 489 l 164 -46 l 164 1024 z \\\"},\\\"▼\\\":{\\\"ha\\\":1219,\\\"x_min\\\":75,\\\"x_max\\\":1144,\\\"o\\\":\\\"m 75 939 l 1144 939 l 610 3 l 75 939 z \\\"},\\\"◀\\\":{\\\"ha\\\":1219,\\\"x_min\\\":119,\\\"x_max\\\":1056,\\\"o\\\":\\\"m 119 489 l 1056 1024 l 1056 -46 l 119 489 z \\\"},\\\"►\\\":{\\\"ha\\\":833,\\\"x_min\\\":138,\\\"x_max\\\":751,\\\"o\\\":\\\"m 751 474 l 138 151 l 138 794 l 751 474 z \\\"},\\\"◄\\\":{\\\"ha\\\":833,\\\"x_min\\\":82,\\\"x_max\\\":696,\\\"o\\\":\\\"m 696 794 l 696 151 l 82 474 l 696 794 z \\\"},\\\"▴\\\":{\\\"ha\\\":696,\\\"x_min\\\":49,\\\"x_max\\\":647,\\\"o\\\":\\\"m 347 701 l 647 235 l 49 235 l 347 701 z \\\"},\\\"▸\\\":{\\\"ha\\\":694,\\\"x_min\\\":136,\\\"x_max\\\":603,\\\"o\\\":\\\"m 136 736 l 603 438 l 136 138 l 136 736 z \\\"},\\\"▾\\\":{\\\"ha\\\":696,\\\"x_min\\\":49,\\\"x_max\\\":647,\\\"o\\\":\\\"m 49 624 l 647 624 l 347 157 l 49 624 z \\\"},\\\"◂\\\":{\\\"ha\\\":694,\\\"x_min\\\":92,\\\"x_max\\\":558,\\\"o\\\":\\\"m 92 438 l 558 736 l 558 138 l 92 438 z \\\"},\\\"@\\\":{\\\"ha\\\":1417,\\\"x_min\\\":49,\\\"x_max\\\":1368,\\\"o\\\":\\\"m 733 707 q 863 689 793 707 q 988 640 932 671 l 988 308 q 991 218 988 249 q 1004 174 994 188 q 1035 161 1014 161 q 1104 223 1078 161 q 1131 443 1131 285 q 731 801 1131 801 q 403 677 517 801 q 289 339 289 553 q 402 -1 289 118 q 733 -119 515 -119 q 878 -106 800 -119 q 1010 -71 956 -92 l 1072 -254 q 912 -298 1008 -281 q 732 -315 815 -315 q 369 -235 524 -315 q 132 -8 215 -156 q 49 338 49 140 q 138 678 49 528 q 382 911 226 828 q 732 994 538 994 q 1069 918 925 994 q 1291 715 1214 842 q 1368 446 1368 589 q 1326 214 1368 315 q 1211 57 1285 113 q 1047 1 1138 1 q 920 43 971 1 q 858 142 869 85 q 780 43 831 78 q 660 8 729 8 q 460 94 522 8 q 397 325 397 181 q 483 602 397 497 q 733 707 569 707 m 696 174 q 758 213 736 174 l 758 532 q 718 540 739 540 q 660 493 682 540 q 639 324 639 446 q 651 204 639 235 q 696 174 664 174 z \\\"},\\\"&\\\":{\\\"ha\\\":1082,\\\"x_min\\\":65,\\\"x_max\\\":1068,\\\"o\\\":\\\"m 443 994 q 618 965 544 994 q 730 883 692 935 q 768 765 768 831 q 724 622 768 683 q 590 497 679 560 l 744 354 q 800 532 776 424 l 1022 467 q 893 218 969 319 l 1068 68 l 824 -28 l 731 61 q 429 -28 601 -28 q 238 6 321 -28 q 110 103 156 40 q 65 249 65 167 q 108 391 65 331 q 250 517 151 451 q 145 642 172 593 q 118 753 118 692 q 153 871 118 815 q 263 960 189 926 q 443 994 336 994 m 447 824 q 399 805 417 824 q 381 753 381 786 q 392 702 381 725 q 442 640 403 679 q 492 694 478 667 q 507 760 507 722 q 492 806 507 789 q 447 824 476 824 m 406 369 q 356 265 356 328 q 389 190 356 218 q 481 161 422 161 q 599 186 547 161 l 406 369 z \\\"},\\\"¶\\\":{\\\"ha\\\":1139,\\\"x_min\\\":69,\\\"x_max\\\":1000,\\\"o\\\":\\\"m 1000 967 l 1000 -286 l 761 -315 l 761 782 l 653 782 l 653 -286 l 414 -315 l 414 350 q 159 435 249 351 q 69 657 69 519 q 169 884 69 801 q 449 967 268 967 l 1000 967 z \\\"},\\\"§\\\":{\\\"ha\\\":778,\\\"x_min\\\":58,\\\"x_max\\\":719,\\\"o\\\":\\\"m 608 260 q 668 195 650 231 q 686 106 686 160 q 646 -14 686 39 q 531 -97 606 -67 q 356 -126 456 -126 q 69 -47 189 -126 l 154 110 q 335 57 249 57 q 428 100 428 57 q 418 130 428 118 q 374 156 408 142 q 267 193 340 171 q 112 271 165 224 q 58 403 58 318 q 172 575 58 507 q 112 644 129 607 q 94 732 94 681 q 133 851 94 797 q 244 935 171 904 q 417 967 318 967 q 569 946 493 967 q 703 888 644 925 l 615 738 q 436 783 528 783 q 353 739 353 783 q 363 709 353 721 q 406 685 374 697 q 510 651 438 672 q 666 573 613 621 q 719 438 719 525 q 608 260 719 326 m 463 329 q 486 400 486 365 q 460 448 486 428 q 358 492 433 468 l 308 508 q 292 443 292 476 q 311 399 292 417 q 385 360 331 381 l 463 329 z \\\"},\\\"©\\\":{\\\"ha\\\":1125,\\\"x_min\\\":72,\\\"x_max\\\":1053,\\\"o\\\":\\\"m 564 1079 q 812 1018 700 1079 q 988 847 924 957 q 1053 599 1053 738 q 988 351 1053 460 q 812 181 924 242 q 564 119 700 119 q 315 181 428 119 q 138 351 203 242 q 72 599 72 460 q 138 847 72 738 q 315 1018 203 957 q 564 1079 428 1079 m 564 946 q 390 902 467 946 q 270 780 314 858 q 226 599 226 701 q 270 417 226 496 q 390 296 314 339 q 564 253 467 253 q 736 296 660 253 q 856 417 813 339 q 900 599 900 496 q 856 780 900 701 q 736 902 813 858 q 564 946 660 946 m 567 879 q 671 858 619 879 q 760 800 722 838 l 682 704 q 637 730 657 724 q 589 736 617 736 q 524 704 549 736 q 499 600 499 672 q 585 463 499 463 q 694 503 644 463 l 765 399 q 674 340 725 361 q 568 319 624 319 q 378 392 447 319 q 310 600 310 465 q 381 803 310 726 q 567 879 451 879 z \\\"},\\\"®\\\":{\\\"ha\\\":882,\\\"x_min\\\":42,\\\"x_max\\\":840,\\\"o\\\":\\\"m 443 1061 q 647 1011 557 1061 q 789 871 738 961 q 840 665 840 781 q 789 461 840 550 q 647 322 738 372 q 443 272 557 272 q 238 322 329 272 q 94 461 146 372 q 42 665 42 550 q 94 871 42 781 q 238 1011 146 961 q 443 1061 329 1061 m 443 381 q 638 458 564 381 q 713 665 713 535 q 678 817 713 751 q 583 917 644 882 q 443 953 522 953 q 301 917 364 953 q 204 817 239 882 q 169 665 169 751 q 204 515 169 579 q 301 415 239 450 q 443 381 364 381 m 604 754 q 584 690 604 718 q 529 646 564 663 l 631 482 l 504 482 l 426 622 l 399 622 l 399 482 l 288 482 l 288 879 l 410 879 q 604 754 604 879 m 399 714 l 439 714 q 476 725 461 714 q 490 758 490 736 q 476 788 490 778 q 438 797 463 797 l 399 797 l 399 714 z \\\"},\\\"™\\\":{\\\"ha\\\":1278,\\\"x_min\\\":35,\\\"x_max\\\":1222,\\\"o\\\":\\\"m 519 817 l 376 817 l 376 410 l 183 410 l 183 817 l 35 817 l 35 967 l 544 967 l 519 817 m 1222 410 l 1038 410 l 1035 593 q 1037 701 1033 656 q 1049 821 1040 747 l 1044 821 l 964 467 l 818 467 l 728 819 l 724 819 q 735 703 732 751 q 736 593 738 656 l 733 410 l 556 410 l 575 967 l 818 967 l 888 638 l 947 967 l 1203 967 l 1222 410 z \\\"},\\\"°\\\":{\\\"ha\\\":721,\\\"x_min\\\":42,\\\"x_max\\\":561,\\\"o\\\":\\\"m 301 503 q 177 534 238 503 q 79 622 117 565 q 42 751 42 678 q 79 880 42 825 q 176 965 117 935 q 301 994 236 994 q 426 965 367 994 q 524 880 486 935 q 561 751 561 825 q 524 622 561 678 q 426 534 486 565 q 301 503 365 503 m 301 657 q 363 684 342 657 q 383 751 383 711 q 363 818 383 792 q 301 844 342 844 q 240 818 261 844 q 219 751 219 792 q 240 684 219 711 q 301 657 261 657 z \\\"},\\\"|\\\":{\\\"ha\\\":500,\\\"x_min\\\":121,\\\"x_max\\\":379,\\\"o\\\":\\\"m 379 -149 l 121 -149 l 121 1128 l 379 1128 l 379 -149 z \\\"},\\\"¦\\\":{\\\"ha\\\":500,\\\"x_min\\\":121,\\\"x_max\\\":379,\\\"o\\\":\\\"m 379 615 l 121 615 l 121 1128 l 379 1128 l 379 615 m 379 -149 l 121 -149 l 121 364 l 379 364 l 379 -149 z \\\"},\\\"ℓ\\\":{\\\"ha\\\":710,\\\"x_min\\\":14,\\\"x_max\\\":696,\\\"o\\\":\\\"m 696 865 q 431 478 696 682 l 431 225 q 464 188 431 188 q 493 193 479 188 l 542 -3 q 389 -28 476 -28 q 216 35 276 -28 q 156 214 156 99 l 156 297 l 58 242 l 14 318 l 156 404 l 156 753 q 239 987 156 913 q 464 1061 322 1061 q 635 1010 574 1061 q 696 865 696 960 m 483 944 q 431 860 431 944 l 431 622 q 535 861 535 738 q 483 944 535 944 z \\\"},\\\"†\\\":{\\\"ha\\\":750,\\\"x_min\\\":21,\\\"x_max\\\":729,\\\"o\\\":\\\"m 503 756 l 729 756 l 729 535 l 503 535 l 503 0 l 247 0 l 247 535 l 21 535 l 21 756 l 247 756 l 247 944 l 503 944 l 503 756 z \\\"},\\\"‡\\\":{\\\"ha\\\":750,\\\"x_min\\\":21,\\\"x_max\\\":729,\\\"o\\\":\\\"m 503 535 l 503 410 l 729 410 l 729 189 l 503 189 l 503 0 l 247 0 l 247 189 l 21 189 l 21 410 l 247 410 l 247 535 l 21 535 l 21 756 l 247 756 l 247 944 l 503 944 l 503 756 l 729 756 l 729 535 l 503 535 z \\\"},\\\"℮\\\":{\\\"ha\\\":1314,\\\"x_min\\\":99,\\\"x_max\\\":1215,\\\"o\\\":\\\"m 656 994 q 933 928 804 994 q 1138 741 1061 861 q 1215 471 1215 621 l 304 471 l 303 168 q 447 69 344 106 q 657 33 550 33 q 862 69 761 33 q 1018 169 963 104 l 1099 169 q 909 28 1021 78 q 656 -22 797 -22 q 372 43 499 -22 q 172 224 244 108 q 99 482 99 339 q 174 742 99 625 q 376 927 249 860 q 656 994 504 994 m 657 939 q 447 902 538 939 q 303 799 357 865 l 304 526 l 1010 526 l 1010 799 q 657 939 881 939 z \\\"},\\\"№\\\":{\\\"ha\\\":1582,\\\"x_min\\\":60,\\\"x_max\\\":1549,\\\"o\\\":\\\"m 844 0 l 486 0 l 275 706 l 279 675 q 303 490 294 574 q 313 300 313 406 l 313 0 l 60 0 l 60 967 l 411 967 l 631 258 l 626 288 q 601 466 610 383 q 592 657 592 549 l 592 967 l 844 967 l 844 0 m 1235 967 q 1465 888 1381 967 q 1549 663 1549 810 q 1465 442 1549 524 q 1236 361 1381 361 q 1006 440 1090 361 q 922 665 922 518 q 1007 885 922 804 q 1235 967 1092 967 m 1235 797 q 1184 766 1200 797 q 1168 665 1168 735 q 1183 561 1168 592 q 1236 531 1199 531 q 1287 562 1271 531 q 1303 663 1303 593 q 1288 767 1303 736 q 1235 797 1272 797 m 922 208 l 1547 208 l 1547 0 l 922 0 l 922 208 z \\\"},\\\"⭘\\\":{\\\"ha\\\":1224,\\\"x_min\\\":69,\\\"x_max\\\":1154,\\\"o\\\":\\\"m 613 1060 q 889 988 765 1060 q 1083 793 1013 917 q 1154 518 1154 669 q 1084 240 1154 364 q 890 46 1014 117 q 613 -25 765 -25 q 333 46 457 -25 q 140 240 210 117 q 69 518 69 364 q 140 793 69 669 q 333 988 210 917 q 613 1060 457 1060 m 613 940 q 405 885 494 940 q 266 735 315 831 q 217 518 217 639 q 266 300 217 396 q 405 150 315 204 q 613 96 494 96 q 817 150 728 96 q 957 300 907 204 q 1007 518 1007 396 q 957 734 1007 638 q 817 885 907 831 q 613 940 728 940 z \\\"},\\\"⇪\\\":{\\\"ha\\\":1000,\\\"x_min\\\":83,\\\"x_max\\\":917,\\\"o\\\":\\\"m 318 742 l 83 742 l 500 1156 l 917 742 l 682 742 l 682 354 l 318 354 l 318 742 m 617 804 l 765 804 l 500 1067 l 235 804 l 383 804 l 383 413 l 617 413 l 617 804 m 682 53 q 663 3 682 22 q 613 -17 644 -17 l 388 -17 q 338 3 357 -17 q 318 53 318 22 l 318 215 l 682 215 l 682 53 m 383 44 l 617 44 l 617 157 l 383 157 l 383 44 z \\\"},\\\"⌧\\\":{\\\"ha\\\":1722,\\\"x_min\\\":139,\\\"x_max\\\":1583,\\\"o\\\":\\\"m 208 -17 q 158 3 178 -17 q 139 53 139 22 l 139 921 q 158 972 139 953 q 208 990 178 990 l 1514 990 q 1565 972 1546 990 q 1583 921 1583 953 l 1583 53 q 1565 3 1583 22 q 1514 -17 1546 -17 l 208 -17 m 647 186 l 861 400 l 1075 186 l 1168 279 l 954 493 l 1168 706 l 1075 801 l 861 586 l 647 801 l 554 706 l 768 493 l 554 279 l 647 186 z \\\"},\\\"⌫\\\":{\\\"ha\\\":2028,\\\"x_min\\\":139,\\\"x_max\\\":1889,\\\"o\\\":\\\"m 139 489 l 667 990 l 1819 990 q 1870 972 1851 990 q 1889 921 1889 953 l 1889 53 q 1870 3 1889 22 q 1819 -17 1851 -17 l 667 -17 l 139 489 m 1022 186 l 1236 400 l 1450 186 l 1543 279 l 1329 493 l 1543 706 l 1450 801 l 1236 586 l 1022 801 l 929 706 l 1143 493 l 929 279 l 1022 186 z \\\"},\\\"⌦\\\":{\\\"ha\\\":1944,\\\"x_min\\\":139,\\\"x_max\\\":1889,\\\"o\\\":\\\"m 208 -17 q 158 3 178 -17 q 139 53 139 22 l 139 921 q 158 972 139 953 q 208 990 178 990 l 1361 990 l 1889 489 l 1361 -17 l 208 -17 m 578 186 l 792 400 l 1006 186 l 1099 279 l 885 493 l 1099 706 l 1006 801 l 792 586 l 578 801 l 485 706 l 699 493 l 485 279 l 578 186 z \\\"},\\\"⌨\\\":{\\\"ha\\\":2028,\\\"x_min\\\":167,\\\"x_max\\\":1861,\\\"o\\\":\\\"m 236 -17 q 186 3 206 -17 q 167 53 167 22 l 167 921 q 186 972 167 953 q 236 990 206 990 l 1792 990 q 1842 972 1824 990 q 1861 921 1861 953 l 1861 53 q 1842 3 1861 22 q 1792 -17 1824 -17 l 236 -17 m 285 914 q 265 906 274 914 q 257 886 257 897 l 257 783 q 265 764 257 772 q 285 756 274 756 l 388 756 q 407 764 399 756 q 415 783 415 772 l 415 886 q 407 906 415 897 q 388 914 399 914 l 285 914 m 535 914 q 515 906 524 914 q 507 886 507 897 l 507 783 q 515 764 507 772 q 535 756 524 756 l 638 756 q 657 764 649 756 q 665 783 665 772 l 665 886 q 657 906 665 897 q 638 914 649 914 l 535 914 m 785 914 q 765 906 774 914 q 757 886 757 897 l 757 783 q 765 764 757 772 q 785 756 774 756 l 888 756 q 907 764 899 756 q 915 783 915 772 l 915 886 q 907 906 915 897 q 888 914 899 914 l 785 914 m 1035 914 q 1015 906 1024 914 q 1007 886 1007 897 l 1007 783 q 1015 764 1007 772 q 1035 756 1024 756 l 1138 756 q 1157 764 1149 756 q 1165 783 1165 772 l 1165 886 q 1157 906 1165 897 q 1138 914 1149 914 l 1035 914 m 1285 914 q 1265 906 1274 914 q 1257 886 1257 897 l 1257 783 q 1265 764 1257 772 q 1285 756 1274 756 l 1388 756 q 1407 764 1399 756 q 1415 783 1415 772 l 1415 886 q 1407 906 1415 897 q 1388 914 1399 914 l 1285 914 m 1535 914 q 1515 906 1524 914 q 1507 886 1507 897 l 1507 783 q 1515 764 1507 772 q 1535 756 1524 756 l 1721 756 q 1740 764 1732 756 q 1749 783 1749 772 l 1749 886 q 1740 906 1749 897 q 1721 914 1732 914 l 1535 914 m 340 685 q 321 676 329 685 q 313 657 313 668 l 313 554 q 321 535 313 543 q 340 526 329 526 l 443 526 q 463 535 454 526 q 471 554 471 543 l 471 657 q 463 676 471 668 q 443 685 454 685 l 340 685 m 590 685 q 571 676 579 685 q 563 657 563 668 l 563 554 q 571 535 563 543 q 590 526 579 526 l 693 526 q 713 535 704 526 q 721 554 721 543 l 721 657 q 713 676 721 668 q 693 685 704 685 l 590 685 m 840 685 q 821 676 829 685 q 813 657 813 668 l 813 554 q 821 535 813 543 q 840 526 829 526 l 943 526 q 963 535 954 526 q 971 554 971 543 l 971 657 q 963 676 971 668 q 943 685 954 685 l 840 685 m 1090 685 q 1071 676 1079 685 q 1063 657 1063 668 l 1063 554 q 1071 535 1063 543 q 1090 526 1079 526 l 1193 526 q 1213 535 1204 526 q 1221 554 1221 543 l 1221 657 q 1213 676 1221 668 q 1193 685 1204 685 l 1090 685 m 1340 685 q 1321 676 1329 685 q 1313 657 1313 668 l 1313 554 q 1321 535 1313 543 q 1340 526 1329 526 l 1443 526 q 1463 535 1454 526 q 1471 554 1471 543 l 1471 657 q 1463 676 1471 668 q 1443 685 1454 685 l 1340 685 m 1618 318 q 1626 299 1618 307 q 1646 290 1635 290 l 1721 290 q 1740 299 1732 290 q 1749 318 1749 307 l 1749 657 q 1740 676 1749 668 q 1721 685 1732 685 l 1590 685 q 1571 676 1579 685 q 1563 657 1563 668 l 1563 554 q 1571 535 1563 543 q 1590 526 1579 526 q 1610 518 1601 526 q 1618 499 1618 510 l 1618 318 m 396 449 q 376 440 385 449 q 368 421 368 432 l 368 318 q 376 299 368 307 q 396 290 385 290 l 499 290 q 518 299 510 290 q 526 318 526 307 l 526 421 q 518 440 526 432 q 499 449 510 449 l 396 449 m 646 449 q 626 440 635 449 q 618 421 618 432 l 618 318 q 626 299 618 307 q 646 290 635 290 l 749 290 q 768 299 760 290 q 776 318 776 307 l 776 421 q 768 440 776 432 q 749 449 760 449 l 646 449 m 896 449 q 876 440 885 449 q 868 421 868 432 l 868 318 q 876 299 868 307 q 896 290 885 290 l 999 290 q 1018 299 1010 290 q 1026 318 1026 307 l 1026 421 q 1018 440 1026 432 q 999 449 1010 449 l 896 449 m 1146 449 q 1126 440 1135 449 q 1118 421 1118 432 l 1118 318 q 1126 299 1118 307 q 1146 290 1135 290 l 1249 290 q 1268 299 1260 290 q 1276 318 1276 307 l 1276 421 q 1268 440 1276 432 q 1249 449 1260 449 l 1146 449 m 1396 449 q 1376 440 1385 449 q 1368 421 1368 432 l 1368 318 q 1376 299 1368 307 q 1396 290 1385 290 l 1499 290 q 1518 299 1510 290 q 1526 318 1526 307 l 1526 421 q 1518 440 1526 432 q 1499 449 1510 449 l 1396 449 m 590 219 q 571 211 579 219 q 563 192 563 203 l 563 89 q 571 69 563 78 q 590 61 579 61 l 1443 61 q 1463 69 1454 61 q 1471 89 1471 78 l 1471 192 q 1463 211 1471 203 q 1443 219 1454 219 l 590 219 z \\\"},\\\"⏎\\\":{\\\"ha\\\":1389,\\\"x_min\\\":42,\\\"x_max\\\":1236,\\\"o\\\":\\\"m 876 972 q 896 1023 876 1004 q 946 1042 915 1042 l 1167 1042 q 1217 1023 1199 1042 q 1236 972 1236 1004 l 1236 332 q 1217 282 1236 301 q 1167 263 1199 263 l 456 263 l 456 21 l 42 435 l 456 850 l 456 608 l 876 608 l 876 972 m 939 981 l 939 546 l 393 546 l 393 700 l 131 435 l 393 169 l 393 324 l 1172 324 l 1172 981 l 939 981 z \\\"},\\\"꞉\\\":{\\\"ha\\\":306,\\\"x_min\\\":24,\\\"x_max\\\":282,\\\"o\\\":\\\"m 153 647 q 244 609 206 647 q 282 518 282 571 q 244 428 282 465 q 153 390 206 390 q 62 428 100 390 q 24 518 24 465 q 62 609 24 571 q 153 647 100 647 m 153 232 q 244 194 206 232 q 282 104 282 157 q 244 13 282 51 q 153 -25 206 -25 q 62 13 100 -25 q 24 104 24 51 q 62 194 24 157 q 153 232 100 232 z \\\"},\\\"ˮ\\\":{\\\"ha\\\":601,\\\"x_min\\\":35,\\\"x_max\\\":553,\\\"o\\\":\\\"m 157 1065 q 242 1032 208 1065 q 275 950 275 999 q 265 889 275 921 q 231 806 256 857 l 154 650 l 36 650 l 89 851 q 35 951 35 889 q 70 1033 35 1000 q 157 1065 106 1065 m 435 1065 q 519 1032 486 1065 q 553 950 553 999 q 543 889 553 921 q 508 806 533 857 l 432 650 l 314 650 l 367 851 q 313 951 313 889 q 348 1033 313 1000 q 435 1065 383 1065 z \\\"},\\\"˗\\\":{\\\"ha\\\":674,\\\"x_min\\\":56,\\\"x_max\\\":618,\\\"o\\\":\\\"m 56 508 l 618 508 l 618 321 l 56 321 l 56 508 z \\\"},\\\"˖\\\":{\\\"ha\\\":699,\\\"x_min\\\":56,\\\"x_max\\\":643,\\\"o\\\":\\\"m 449 508 l 643 508 l 643 321 l 449 321 l 449 121 l 249 121 l 249 321 l 56 321 l 56 508 l 249 508 l 249 708 l 449 708 l 449 508 z \\\"},\\\"˞\\\":{\\\"ha\\\":600,\\\"x_min\\\":42,\\\"x_max\\\":614,\\\"o\\\":\\\"m 433 421 q 277 463 335 421 q 201 581 219 506 l 200 586 l 42 492 l 42 665 l 186 742 l 406 742 l 406 668 q 422 620 406 636 q 467 604 439 604 q 518 612 496 604 q 544 621 540 619 l 614 472 q 433 421 536 421 z \\\"},\\\"꞊\\\":{\\\"ha\\\":674,\\\"x_min\\\":56,\\\"x_max\\\":618,\\\"o\\\":\\\"m 56 646 l 618 646 l 618 458 l 56 458 l 56 646 m 56 371 l 618 371 l 618 183 l 56 183 l 56 371 z \\\"},\\\"ˤ\\\":{\\\"ha\\\":454,\\\"x_min\\\":42,\\\"x_max\\\":413,\\\"o\\\":\\\"m 181 556 l 181 756 l 158 763 q 69 815 97 782 q 42 911 42 849 q 98 1035 42 989 q 244 1082 154 1082 q 332 1068 294 1082 q 413 1021 369 1054 l 357 954 q 304 981 329 972 q 250 990 279 990 q 185 970 210 990 q 161 913 161 950 q 183 847 161 868 q 253 814 206 825 l 303 803 l 303 556 l 181 556 z \\\"},\\\"˥\\\":{\\\"ha\\\":533,\\\"x_min\\\":42,\\\"x_max\\\":492,\\\"o\\\":\\\"m 306 804 l 42 804 l 42 967 l 492 967 l 492 0 l 306 0 l 306 804 z \\\"},\\\"˩\\\":{\\\"ha\\\":533,\\\"x_min\\\":42,\\\"x_max\\\":492,\\\"o\\\":\\\"m 492 967 l 492 0 l 42 0 l 42 164 l 306 164 l 306 967 l 492 967 z \\\"},\\\"˦\\\":{\\\"ha\\\":533,\\\"x_min\\\":42,\\\"x_max\\\":492,\\\"o\\\":\\\"m 492 967 l 492 0 l 306 0 l 306 613 l 42 613 l 42 775 l 306 775 l 306 967 l 492 967 z \\\"},\\\"˨\\\":{\\\"ha\\\":533,\\\"x_min\\\":42,\\\"x_max\\\":492,\\\"o\\\":\\\"m 492 967 l 492 0 l 306 0 l 306 196 l 42 196 l 42 358 l 306 358 l 306 967 l 492 967 z \\\"},\\\"˧\\\":{\\\"ha\\\":533,\\\"x_min\\\":42,\\\"x_max\\\":492,\\\"o\\\":\\\"m 492 967 l 492 0 l 306 0 l 306 404 l 42 404 l 42 567 l 306 567 l 306 967 l 492 967 z \\\"},\\\"˔\\\":{\\\"ha\\\":583,\\\"x_min\\\":56,\\\"x_max\\\":528,\\\"o\\\":\\\"m 528 238 l 56 238 l 56 382 l 206 382 l 206 576 l 376 576 l 376 382 l 528 382 l 528 238 z \\\"},\\\"϶\\\":{\\\"ha\\\":676,\\\"x_min\\\":0,\\\"x_max\\\":653,\\\"o\\\":\\\"m 293 769 q 556 669 460 769 q 653 379 653 569 q 551 82 653 192 q 263 -28 449 -28 q 122 -6 185 -28 q 0 57 58 15 l 114 210 q 184 176 153 186 q 250 167 215 167 q 378 304 365 167 l 135 304 l 135 449 l 376 449 q 343 546 371 517 q 269 575 315 575 q 199 565 232 575 q 131 531 167 554 l 17 678 q 293 769 131 769 z \\\"},\\\"ʹ\\\":{\\\"ha\\\":456,\\\"x_min\\\":56,\\\"x_max\\\":400,\\\"o\\\":\\\"m 164 967 l 400 967 l 231 564 l 56 564 l 164 967 z \\\"},\\\"͵\\\":{\\\"ha\\\":456,\\\"x_min\\\":56,\\\"x_max\\\":400,\\\"o\\\":\\\"m 292 -186 l 56 -186 l 225 217 l 400 217 l 292 -186 z \\\"},\\\"ˠ\\\":{\\\"ha\\\":507,\\\"x_min\\\":56,\\\"x_max\\\":456,\\\"o\\\":\\\"m 314 607 q 365 488 365 538 q 338 426 365 449 q 257 403 311 403 q 176 425 204 403 q 147 488 147 447 q 201 608 147 536 l 56 924 l 178 924 l 257 681 l 335 924 l 456 924 l 314 607 m 275 494 q 270 519 275 506 q 257 549 265 532 q 242 517 247 531 q 238 494 238 504 q 257 475 238 475 q 275 494 275 475 z \\\"},\\\"ˏ\\\":{\\\"ha\\\":506,\\\"x_min\\\":42,\\\"x_max\\\":464,\\\"o\\\":\\\"z \\\"},\\\"ˑ\\\":{\\\"ha\\\":306,\\\"x_min\\\":24,\\\"x_max\\\":282,\\\"o\\\":\\\"m 24 700 l 282 700 l 167 440 l 136 440 l 24 700 z \\\"},\\\"ː\\\":{\\\"ha\\\":306,\\\"x_min\\\":24,\\\"x_max\\\":282,\\\"o\\\":\\\"m 24 703 l 282 703 l 167 443 l 136 443 l 24 703 m 167 260 l 282 0 l 24 0 l 136 260 l 167 260 z \\\"},\\\"ʻ\\\":{\\\"ha\\\":350,\\\"x_min\\\":42,\\\"x_max\\\":308,\\\"o\\\":\\\"m 174 814 q 79 850 117 814 q 42 942 42 886 q 53 1010 42 975 q 92 1101 64 1046 l 176 1275 l 307 1275 l 249 1051 q 308 940 308 1010 q 269 850 308 886 q 174 814 231 814 z \\\"},\\\"ʺ\\\":{\\\"ha\\\":761,\\\"x_min\\\":56,\\\"x_max\\\":706,\\\"o\\\":\\\"m 164 967 l 400 967 l 231 564 l 56 564 l 164 967 m 469 967 l 706 967 l 536 564 l 361 564 l 469 967 z \\\"},\\\"ˋ\\\":{\\\"ha\\\":506,\\\"x_min\\\":42,\\\"x_max\\\":464,\\\"o\\\":\\\"m 464 989 l 390 851 l 42 989 l 144 1189 l 464 989 z \\\"},\\\"ˀ\\\":{\\\"ha\\\":433,\\\"x_min\\\":42,\\\"x_max\\\":392,\\\"o\\\":\\\"m 121 978 q 197 990 174 979 q 219 1026 219 1001 q 206 1055 219 1044 q 168 1065 192 1065 q 126 1061 144 1065 q 82 1047 107 1057 l 42 1150 q 206 1189 107 1189 q 343 1147 294 1189 q 392 1039 392 1106 q 361 949 392 983 q 272 903 331 914 l 272 835 l 121 835 l 121 978 z \\\"},\\\"ˎ\\\":{\\\"ha\\\":506,\\\"x_min\\\":42,\\\"x_max\\\":464,\\\"o\\\":\\\"z \\\"},\\\"ʹ\\\":{\\\"ha\\\":456,\\\"x_min\\\":56,\\\"x_max\\\":400,\\\"o\\\":\\\"m 164 967 l 400 967 l 231 564 l 56 564 l 164 967 z \\\"},\\\"ʿ\\\":{\\\"ha\\\":297,\\\"x_min\\\":42,\\\"x_max\\\":256,\\\"o\\\":\\\"m 256 964 q 215 980 231 964 q 200 1028 200 996 q 256 1092 200 1092 l 256 1231 q 142 1203 190 1231 q 67 1129 93 1175 q 42 1028 42 1083 q 67 926 42 972 q 142 851 93 879 q 256 824 190 824 l 256 964 z \\\"},\\\"ˊ\\\":{\\\"ha\\\":506,\\\"x_min\\\":42,\\\"x_max\\\":464,\\\"o\\\":\\\"m 464 989 l 115 851 l 42 989 l 361 1189 l 464 989 z \\\"},\\\"ˌ\\\":{\\\"ha\\\":319,\\\"x_min\\\":42,\\\"x_max\\\":278,\\\"o\\\":\\\"z \\\"},\\\"ˈ\\\":{\\\"ha\\\":319,\\\"x_min\\\":42,\\\"x_max\\\":278,\\\"o\\\":\\\"m 42 1244 l 278 1244 l 278 856 l 42 856 l 42 1244 z \\\"},\\\"̈\\\":{\\\"ha\\\":0,\\\"x_min\\\":-646,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -514 1136 q -420 1099 -458 1136 q -382 1008 -382 1061 q -420 917 -382 954 q -514 879 -458 879 q -607 917 -568 879 q -646 1008 -646 954 q -607 1099 -646 1061 q -514 1136 -568 1136 m -174 1136 q -80 1099 -118 1136 q -42 1008 -42 1061 q -80 917 -42 954 q -174 879 -118 879 q -267 917 -228 879 q -306 1008 -306 954 q -267 1099 -306 1061 q -174 1136 -228 1136 z \\\"},\\\"̇\\\":{\\\"ha\\\":0,\\\"x_min\\\":-350,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -196 1151 q -85 1109 -129 1151 q -42 1004 -42 1067 q -85 899 -42 942 q -196 857 -129 857 q -306 899 -262 857 q -350 1004 -350 942 q -306 1109 -350 1067 q -196 1151 -262 1151 z \\\"},\\\"̀\\\":{\\\"ha\\\":0,\\\"x_min\\\":-464,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -42 989 l -115 851 l -464 989 l -361 1189 l -42 989 z \\\"},\\\"́\\\":{\\\"ha\\\":0,\\\"x_min\\\":-464,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -42 989 l -390 851 l -464 989 l -144 1189 l -42 989 z \\\"},\\\"̋\\\":{\\\"ha\\\":0,\\\"x_min\\\":-586,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -290 1085 l -468 839 l -586 900 l -460 1174 l -290 1085 m -42 1063 l -232 826 l -346 894 l -206 1161 l -42 1063 z \\\"},\\\"̂\\\":{\\\"ha\\\":0,\\\"x_min\\\":-608,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -608 957 l -407 1167 l -243 1167 l -42 957 l -135 850 l -325 983 l -515 850 l -608 957 z \\\"},\\\"̌\\\":{\\\"ha\\\":0,\\\"x_min\\\":-608,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -42 1046 l -243 836 l -407 836 l -608 1046 l -515 1153 l -325 1019 l -135 1153 l -42 1046 z \\\"},\\\"̆\\\":{\\\"ha\\\":0,\\\"x_min\\\":-556,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -299 869 q -481 947 -417 869 q -556 1142 -546 1025 l -412 1165 q -372 1085 -400 1114 q -299 1056 -343 1056 q -226 1085 -254 1056 q -185 1165 -197 1114 l -42 1142 q -116 947 -51 1025 q -299 869 -181 869 z \\\"},\\\"̊\\\":{\\\"ha\\\":0,\\\"x_min\\\":-469,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -256 1231 q -142 1203 -190 1231 q -67 1129 -93 1175 q -42 1028 -42 1083 q -67 926 -42 972 q -142 851 -93 879 q -256 824 -190 824 q -369 851 -321 824 q -444 926 -418 879 q -469 1028 -469 972 q -444 1129 -469 1083 q -369 1203 -418 1175 q -256 1231 -321 1231 m -256 1092 q -296 1076 -281 1092 q -311 1028 -311 1060 q -296 980 -311 996 q -256 964 -281 964 q -215 980 -231 964 q -200 1028 -200 996 q -215 1076 -200 1060 q -256 1092 -231 1092 z \\\"},\\\"̃\\\":{\\\"ha\\\":0,\\\"x_min\\\":-600,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -240 864 q -290 871 -269 864 q -332 893 -310 878 q -370 917 -358 911 q -397 924 -382 924 q -437 910 -422 924 q -471 864 -453 896 l -600 926 q -520 1062 -571 1008 q -404 1115 -469 1115 q -352 1108 -374 1115 q -307 1085 -331 1101 q -270 1062 -283 1068 q -243 1056 -257 1056 q -204 1069 -219 1056 q -171 1115 -189 1083 l -42 1053 q -122 917 -71 969 q -240 864 -174 864 z \\\"},\\\"̄\\\":{\\\"ha\\\":0,\\\"x_min\\\":-493,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -493 900 l -493 1086 l -42 1086 l -42 900 l -493 900 z \\\"},\\\"̅\\\":{\\\"ha\\\":0,\\\"x_min\\\":-707,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -707 903 l -707 1033 l -42 1033 l -42 903 l -707 903 z \\\"},\\\"̉\\\":{\\\"ha\\\":0,\\\"x_min\\\":-378,\\\"x_max\\\":-28,\\\"o\\\":\\\"m -299 978 q -223 990 -246 979 q -200 1026 -200 1001 q -214 1055 -200 1044 q -251 1065 -228 1065 q -294 1061 -275 1065 q -337 1047 -312 1057 l -378 1150 q -214 1189 -312 1189 q -76 1147 -125 1189 q -28 1039 -28 1106 q -58 949 -28 983 q -147 903 -89 914 l -147 835 l -299 835 l -299 978 z \\\"},\\\"̍\\\":{\\\"ha\\\":0,\\\"x_min\\\":-278,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -278 1244 l -42 1244 l -42 856 l -278 856 l -278 1244 z \\\"},\\\"̏\\\":{\\\"ha\\\":0,\\\"x_min\\\":-610,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -294 925 l -428 861 l -610 1133 l -439 1218 l -294 925 m -42 921 l -178 867 l -349 1140 l -175 1218 l -42 921 z \\\"},\\\"̑\\\":{\\\"ha\\\":0,\\\"x_min\\\":-556,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -299 1121 q -116 1043 -181 1121 q -42 849 -51 965 l -185 825 q -226 906 -197 876 q -299 935 -254 935 q -372 906 -343 935 q -412 825 -400 876 l -556 849 q -481 1043 -546 965 q -299 1121 -417 1121 z \\\"},\\\"̒\\\":{\\\"ha\\\":0,\\\"x_min\\\":-297,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -169 796 q -261 832 -225 796 q -297 922 -297 868 q -289 976 -297 951 q -260 1044 -281 1001 l -190 1185 l -60 1185 l -94 1026 q -42 922 -42 986 q -78 833 -42 869 q -169 796 -114 796 z \\\"},\\\"̓\\\":{\\\"ha\\\":0,\\\"x_min\\\":-297,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -169 1199 q -78 1163 -114 1199 q -42 1072 -42 1126 q -50 1018 -42 1043 q -79 950 -58 993 l -149 810 l -279 810 l -244 968 q -297 1072 -297 1008 q -261 1162 -297 1125 q -169 1199 -225 1199 z \\\"},\\\"̖\\\":{\\\"ha\\\":0,\\\"x_min\\\":-464,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -42 -239 l -111 -376 l -464 -250 l -365 -50 l -42 -239 z \\\"},\\\"̗\\\":{\\\"ha\\\":0,\\\"x_min\\\":-464,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -42 -250 l -394 -376 l -464 -239 l -139 -50 l -42 -250 z \\\"},\\\"̘\\\":{\\\"ha\\\":0,\\\"x_min\\\":-353,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -42 -76 l -42 -493 l -200 -493 l -200 -357 l -353 -357 l -353 -214 l -200 -214 l -200 -76 l -42 -76 z \\\"},\\\"̙\\\":{\\\"ha\\\":0,\\\"x_min\\\":-353,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -194 -214 l -42 -214 l -42 -357 l -194 -357 l -194 -493 l -353 -493 l -353 -76 l -194 -76 l -194 -214 z \\\"},\\\"̚\\\":{\\\"ha\\\":0,\\\"x_min\\\":-357,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -42 1132 l -42 828 l -199 828 l -199 993 l -357 993 l -357 1132 l -42 1132 z \\\"},\\\"̛\\\":{\\\"ha\\\":0,\\\"x_min\\\":-283,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -283 654 q -233 676 -247 657 q -218 738 -218 696 q -235 828 -218 781 l -68 849 q -42 721 -42 793 q -102 578 -42 626 q -269 529 -162 529 l -283 654 z \\\"},\\\"̜\\\":{\\\"ha\\\":0,\\\"x_min\\\":-256,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -42 -328 q -82 -312 -67 -328 q -97 -264 -97 -296 q -42 -200 -97 -200 l -42 -61 q -156 -89 -107 -61 q -230 -162 -204 -117 q -256 -264 -256 -208 q -230 -366 -256 -319 q -156 -440 -204 -412 q -42 -468 -107 -468 l -42 -328 z \\\"},\\\"̝\\\":{\\\"ha\\\":0,\\\"x_min\\\":-514,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -42 -457 l -514 -457 l -514 -312 l -364 -312 l -364 -118 l -193 -118 l -193 -312 l -42 -312 l -42 -457 z \\\"},\\\"̞\\\":{\\\"ha\\\":0,\\\"x_min\\\":-514,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -193 -262 l -193 -457 l -364 -457 l -364 -262 l -514 -262 l -514 -118 l -42 -118 l -42 -262 l -193 -262 z \\\"},\\\"̟\\\":{\\\"ha\\\":0,\\\"x_min\\\":-464,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -169 -225 l -42 -225 l -42 -365 l -169 -365 l -169 -485 l -336 -485 l -336 -365 l -464 -365 l -464 -225 l -336 -225 l -336 -106 l -169 -106 l -169 -225 z \\\"},\\\"̠\\\":{\\\"ha\\\":0,\\\"x_min\\\":-464,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -464 -225 l -42 -225 l -42 -365 l -464 -365 l -464 -225 z \\\"},\\\"̡\\\":{\\\"ha\\\":0,\\\"x_min\\\":-572,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -353 -315 q -572 -253 -486 -315 l -483 -96 q -435 -115 -454 -110 q -389 -121 -415 -121 q -335 -102 -354 -121 q -317 -47 -317 -83 l -317 1 l -42 1 l -42 -22 q -126 -240 -42 -165 q -353 -315 -210 -315 z \\\"},\\\"̣\\\":{\\\"ha\\\":0,\\\"x_min\\\":-350,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -196 -367 q -306 -324 -262 -367 q -350 -219 -350 -282 q -306 -115 -350 -157 q -196 -72 -262 -72 q -85 -115 -129 -72 q -42 -219 -42 -157 q -85 -324 -42 -282 q -196 -367 -129 -367 z \\\"},\\\"̤\\\":{\\\"ha\\\":0,\\\"x_min\\\":-646,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -514 -89 q -420 -126 -458 -89 q -382 -217 -382 -164 q -420 -308 -382 -271 q -514 -346 -458 -346 q -607 -308 -568 -346 q -646 -217 -646 -271 q -607 -126 -646 -164 q -514 -89 -568 -89 m -174 -89 q -80 -126 -118 -89 q -42 -217 -42 -164 q -80 -308 -42 -271 q -174 -346 -118 -346 q -267 -308 -228 -346 q -306 -217 -306 -271 q -267 -126 -306 -164 q -174 -89 -228 -89 z \\\"},\\\"̥\\\":{\\\"ha\\\":0,\\\"x_min\\\":-469,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -256 -61 q -142 -89 -190 -61 q -67 -162 -93 -117 q -42 -264 -42 -208 q -67 -366 -42 -319 q -142 -440 -93 -412 q -256 -468 -190 -468 q -369 -440 -321 -468 q -444 -366 -418 -412 q -469 -264 -469 -319 q -444 -162 -469 -208 q -369 -89 -418 -117 q -256 -61 -321 -61 m -256 -200 q -296 -216 -281 -200 q -311 -264 -311 -232 q -296 -312 -311 -296 q -256 -328 -281 -328 q -215 -312 -231 -328 q -200 -264 -200 -296 q -215 -216 -200 -232 q -256 -200 -231 -200 z \\\"},\\\"̦\\\":{\\\"ha\\\":0,\\\"x_min\\\":-297,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -169 -86 q -78 -122 -114 -86 q -42 -212 -42 -158 q -50 -267 -42 -242 q -79 -335 -58 -292 l -149 -475 l -279 -475 l -244 -317 q -297 -212 -297 -276 q -261 -123 -297 -160 q -169 -86 -225 -86 z \\\"},\\\"̧\\\":{\\\"ha\\\":0,\\\"x_min\\\":-443,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -194 -60 q -42 -210 -42 -79 q -103 -333 -42 -285 q -269 -382 -164 -382 q -366 -369 -321 -382 q -443 -335 -411 -356 l -383 -215 q -294 -240 -337 -240 q -232 -207 -232 -240 q -262 -176 -232 -185 q -362 -167 -293 -167 l -339 22 l -194 22 l -194 -60 z \\\"},\\\"̨\\\":{\\\"ha\\\":0,\\\"x_min\\\":-387,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -42 0 q -166 -65 -131 -29 q -201 -132 -201 -100 q -131 -193 -201 -193 q -46 -182 -94 -193 l -62 -342 q -165 -353 -111 -353 q -325 -306 -262 -353 q -387 -178 -387 -258 q -306 -15 -387 -76 q -85 85 -225 47 l -42 0 z \\\"},\\\"̩\\\":{\\\"ha\\\":0,\\\"x_min\\\":-278,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -278 -89 l -42 -89 l -42 -478 l -278 -478 l -278 -89 z \\\"},\\\"̪\\\":{\\\"ha\\\":0,\\\"x_min\\\":-486,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -486 -118 l -42 -118 l -42 -360 l -199 -360 l -199 -249 l -329 -249 l -329 -360 l -486 -360 l -486 -118 z \\\"},\\\"̫\\\":{\\\"ha\\\":0,\\\"x_min\\\":-661,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -42 -85 q -90 -267 -47 -196 q -212 -339 -133 -339 q -351 -232 -306 -339 q -490 -339 -397 -339 q -612 -267 -569 -339 q -661 -85 -656 -196 l -553 -71 q -529 -144 -544 -122 q -483 -167 -514 -167 q -437 -144 -453 -167 q -414 -71 -422 -122 l -289 -71 q -265 -144 -281 -122 q -219 -167 -250 -167 q -174 -144 -189 -167 q -150 -71 -158 -122 l -42 -85 z \\\"},\\\"̬\\\":{\\\"ha\\\":0,\\\"x_min\\\":-608,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -42 -183 l -243 -379 l -407 -379 l -608 -183 l -515 -76 l -325 -196 l -135 -76 l -42 -183 z \\\"},\\\"̭\\\":{\\\"ha\\\":0,\\\"x_min\\\":-608,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -608 -293 l -407 -83 l -243 -83 l -42 -293 l -135 -400 l -325 -267 l -515 -400 l -608 -293 z \\\"},\\\"̯\\\":{\\\"ha\\\":0,\\\"x_min\\\":-556,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -299 -60 q -116 -137 -181 -60 q -42 -332 -51 -215 l -185 -356 q -226 -275 -197 -304 q -299 -246 -254 -246 q -372 -275 -343 -246 q -412 -356 -400 -304 l -556 -332 q -481 -137 -546 -215 q -299 -60 -417 -60 z \\\"},\\\"̰\\\":{\\\"ha\\\":0,\\\"x_min\\\":-600,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -240 -317 q -290 -310 -269 -317 q -332 -287 -310 -303 q -370 -263 -358 -269 q -397 -257 -382 -257 q -437 -271 -422 -257 q -471 -317 -453 -285 l -600 -254 q -520 -119 -571 -172 q -404 -65 -469 -65 q -352 -72 -374 -65 q -307 -96 -331 -79 q -270 -119 -283 -112 q -243 -125 -257 -125 q -204 -111 -219 -125 q -171 -65 -189 -97 l -42 -128 q -122 -264 -71 -211 q -240 -317 -174 -317 z \\\"},\\\"̱\\\":{\\\"ha\\\":0,\\\"x_min\\\":-493,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -493 -281 l -493 -94 l -42 -94 l -42 -281 l -493 -281 z \\\"},\\\"̲\\\":{\\\"ha\\\":0,\\\"x_min\\\":-719,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -719 -281 l -719 -94 l -42 -94 l -42 -281 l -719 -281 z \\\"},\\\"̴\\\":{\\\"ha\\\":0,\\\"x_min\\\":-764,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -285 307 q -370 320 -336 307 q -446 358 -404 333 q -493 383 -476 376 q -531 390 -510 390 q -578 376 -561 390 q -608 345 -594 363 q -625 321 -621 328 l -764 390 q -662 538 -719 483 q -521 592 -606 592 q -435 578 -469 592 q -360 540 -401 565 q -312 515 -329 522 q -275 508 -296 508 q -229 521 -246 508 q -199 550 -212 533 q -179 575 -186 567 l -42 508 q -143 361 -86 415 q -285 307 -200 307 z \\\"},\\\"̵\\\":{\\\"ha\\\":0,\\\"x_min\\\":-521,\\\"x_max\\\":-49,\\\"o\\\":\\\"m -521 539 l -49 539 l -49 331 l -521 331 l -521 539 z \\\"},\\\"̶\\\":{\\\"ha\\\":0,\\\"x_min\\\":-1111,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -1111 539 l -42 539 l -42 331 l -1111 331 l -1111 539 z \\\"},\\\"̹\\\":{\\\"ha\\\":0,\\\"x_min\\\":-256,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -256 -467 q -142 -439 -190 -467 q -67 -365 -93 -411 q -42 -262 -42 -318 q -67 -161 -42 -207 q -142 -87 -93 -115 q -256 -60 -190 -60 l -256 -199 q -200 -262 -200 -199 q -215 -310 -200 -294 q -256 -326 -231 -326 l -256 -467 z \\\"},\\\"̺\\\":{\\\"ha\\\":0,\\\"x_min\\\":-486,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -329 -117 l -329 -228 l -199 -228 l -199 -117 l -42 -117 l -42 -358 l -486 -358 l -486 -117 l -329 -117 z \\\"},\\\"̻\\\":{\\\"ha\\\":0,\\\"x_min\\\":-486,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -486 -81 l -42 -81 l -42 -358 l -486 -358 l -486 -81 m -160 -262 l -160 -176 l -368 -176 l -368 -262 l -160 -262 z \\\"},\\\"̼\\\":{\\\"ha\\\":0,\\\"x_min\\\":-661,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -212 -74 q -90 -145 -133 -74 q -42 -328 -47 -217 l -150 -342 q -174 -268 -158 -290 q -219 -246 -189 -246 q -265 -268 -250 -246 q -289 -342 -281 -290 l -414 -342 q -437 -268 -422 -290 q -483 -246 -453 -246 q -529 -268 -514 -246 q -553 -342 -544 -290 l -661 -328 q -612 -145 -656 -217 q -490 -74 -569 -74 q -351 -181 -397 -74 q -212 -74 -306 -74 z \\\"},\\\"̽\\\":{\\\"ha\\\":0,\\\"x_min\\\":-442,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -42 833 l -169 833 l -244 954 l -319 833 l -442 833 l -311 1008 l -428 1164 l -301 1164 l -240 1063 l -181 1164 l -61 1164 l -172 1011 l -42 833 z \\\"},\\\"͜\\\":{\\\"ha\\\":0,\\\"x_min\\\":-481,\\\"x_max\\\":478,\\\"o\\\":\\\"m 478 -151 q 262 -276 374 -231 q -1 -322 150 -322 q -265 -276 -153 -322 q -481 -151 -376 -231 l -403 -37 q -1 -124 -201 -124 q 399 -37 197 -124 l 478 -151 z \\\"},\\\"͡\\\":{\\\"ha\\\":0,\\\"x_min\\\":-481,\\\"x_max\\\":478,\\\"o\\\":\\\"m 399 860 q -1 946 197 946 q -403 860 -201 946 l -481 974 q -265 1099 -376 1053 q -1 1144 -153 1144 q 262 1099 150 1144 q 478 974 374 1053 l 399 860 z \\\"},\\\"´\\\":{\\\"ha\\\":506,\\\"x_min\\\":42,\\\"x_max\\\":464,\\\"o\\\":\\\"m 464 989 l 115 851 l 42 989 l 361 1189 l 464 989 z \\\"},\\\"᷉\\\":{\\\"ha\\\":0,\\\"x_min\\\":-682,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -465 956 l -629 879 l -682 969 l -467 1122 l -289 1010 l -126 1122 l -42 1001 l -289 865 l -465 956 z \\\"},\\\"᷇\\\":{\\\"ha\\\":0,\\\"x_min\\\":-647,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -42 1100 l -42 914 l -319 914 l -557 783 l -647 906 l -410 1100 l -42 1100 z \\\"},\\\"˘\\\":{\\\"ha\\\":597,\\\"x_min\\\":42,\\\"x_max\\\":556,\\\"o\\\":\\\"m 299 869 q 116 947 181 869 q 42 1142 51 1025 l 185 1165 q 226 1085 197 1114 q 299 1056 254 1056 q 372 1085 343 1056 q 413 1165 400 1114 l 556 1142 q 481 947 546 1025 q 299 869 417 869 z \\\"},\\\"ˇ\\\":{\\\"ha\\\":650,\\\"x_min\\\":42,\\\"x_max\\\":608,\\\"o\\\":\\\"m 608 1046 l 407 836 l 243 836 l 42 1046 l 135 1153 l 325 1019 l 515 1153 l 608 1046 z \\\"},\\\"¸\\\":{\\\"ha\\\":485,\\\"x_min\\\":42,\\\"x_max\\\":443,\\\"o\\\":\\\"m 290 -60 q 443 -210 443 -79 q 382 -333 443 -285 q 215 -382 321 -382 q 119 -369 164 -382 q 42 -335 74 -356 l 101 -215 q 190 -240 147 -240 q 253 -207 253 -240 q 222 -176 253 -185 q 122 -167 192 -167 l 146 22 l 290 22 l 290 -60 z \\\"},\\\"ˆ\\\":{\\\"ha\\\":650,\\\"x_min\\\":42,\\\"x_max\\\":608,\\\"o\\\":\\\"m 42 957 l 243 1167 l 407 1167 l 608 957 l 515 850 l 325 983 l 135 850 l 42 957 z \\\"},\\\"¨\\\":{\\\"ha\\\":688,\\\"x_min\\\":39,\\\"x_max\\\":643,\\\"o\\\":\\\"m 171 1136 q 265 1099 226 1136 q 303 1008 303 1061 q 265 917 303 954 q 171 879 226 879 q 78 917 117 879 q 39 1008 39 954 q 78 1099 39 1061 q 171 1136 117 1136 m 511 1136 q 605 1099 567 1136 q 643 1008 643 1061 q 605 917 643 954 q 511 879 567 879 q 418 917 457 879 q 379 1008 379 954 q 418 1099 379 1061 q 511 1136 457 1136 z \\\"},\\\"˙\\\":{\\\"ha\\\":392,\\\"x_min\\\":42,\\\"x_max\\\":350,\\\"o\\\":\\\"m 196 1151 q 306 1109 263 1151 q 350 1004 350 1067 q 306 899 350 942 q 196 857 263 857 q 85 899 129 857 q 42 1004 42 942 q 85 1109 42 1067 q 196 1151 129 1151 z \\\"},\\\"`\\\":{\\\"ha\\\":506,\\\"x_min\\\":42,\\\"x_max\\\":464,\\\"o\\\":\\\"m 464 989 l 390 851 l 42 989 l 144 1189 l 464 989 z \\\"},\\\"᷈\\\":{\\\"ha\\\":0,\\\"x_min\\\":-682,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -682 1001 l -597 1122 l -435 1010 l -257 1122 l -42 969 l -94 879 l -258 956 l -435 865 l -682 1001 z \\\"},\\\"᷅\\\":{\\\"ha\\\":0,\\\"x_min\\\":-647,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -42 1010 l -42 824 l -410 824 l -647 1018 l -510 1169 l -339 1010 l -42 1010 z \\\"},\\\"˝\\\":{\\\"ha\\\":651,\\\"x_min\\\":42,\\\"x_max\\\":586,\\\"o\\\":\\\"m 338 1085 l 160 839 l 42 900 l 168 1174 l 338 1085 m 586 1063 l 396 826 l 282 894 l 422 1161 l 586 1063 z \\\"},\\\"¯\\\":{\\\"ha\\\":535,\\\"x_min\\\":42,\\\"x_max\\\":493,\\\"o\\\":\\\"m 42 900 l 42 1086 l 493 1086 l 493 900 l 42 900 z \\\"},\\\"᷄\\\":{\\\"ha\\\":0,\\\"x_min\\\":-647,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -42 1018 l -279 824 l -647 824 l -647 1010 l -350 1010 l -179 1169 l -42 1018 z \\\"},\\\"᷆\\\":{\\\"ha\\\":0,\\\"x_min\\\":-647,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -42 906 l -132 783 l -369 914 l -647 914 l -647 1100 l -279 1100 l -42 906 z \\\"},\\\"˛\\\":{\\\"ha\\\":429,\\\"x_min\\\":81,\\\"x_max\\\":426,\\\"o\\\":\\\"m 426 0 q 302 -65 338 -29 q 267 -132 267 -100 q 338 -193 267 -193 q 422 -182 374 -193 l 406 -342 q 303 -353 357 -353 q 143 -306 206 -353 q 81 -178 81 -258 q 162 -15 81 -76 q 383 85 243 47 l 426 0 z \\\"},\\\"˚\\\":{\\\"ha\\\":511,\\\"x_min\\\":42,\\\"x_max\\\":469,\\\"o\\\":\\\"m 256 1231 q 369 1203 321 1231 q 444 1129 418 1175 q 469 1028 469 1083 q 444 926 469 972 q 369 851 418 879 q 256 824 321 824 q 142 851 190 824 q 67 926 93 879 q 42 1028 42 972 q 67 1129 42 1083 q 142 1203 93 1175 q 256 1231 190 1231 m 256 1092 q 215 1076 231 1092 q 200 1028 200 1060 q 215 980 200 996 q 256 964 231 964 q 296 980 281 964 q 311 1028 311 996 q 296 1076 311 1060 q 256 1092 281 1092 z \\\"},\\\"˜\\\":{\\\"ha\\\":642,\\\"x_min\\\":42,\\\"x_max\\\":600,\\\"o\\\":\\\"m 401 864 q 352 871 372 864 q 310 893 332 878 q 272 917 283 911 q 244 924 260 924 q 204 910 219 924 q 171 864 189 896 l 42 926 q 122 1062 71 1008 q 238 1115 172 1115 q 290 1108 268 1115 q 335 1085 311 1101 q 372 1062 358 1068 q 399 1056 385 1056 q 438 1069 422 1056 q 471 1115 453 1083 l 600 1053 q 519 917 571 969 q 401 864 468 864 z \\\"},\\\"͂\\\":{\\\"ha\\\":0,\\\"x_min\\\":-600,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -240 864 q -290 871 -269 864 q -332 893 -310 878 q -370 917 -358 911 q -397 924 -382 924 q -437 910 -422 924 q -471 864 -453 896 l -600 926 q -520 1062 -571 1008 q -404 1115 -469 1115 q -352 1108 -374 1115 q -307 1085 -331 1101 q -270 1062 -283 1068 q -243 1056 -257 1056 q -204 1069 -219 1056 q -171 1115 -189 1083 l -42 1053 q -122 917 -71 969 q -240 864 -174 864 z \\\"},\\\"ͅ\\\":{\\\"ha\\\":0,\\\"x_min\\\":-408,\\\"x_max\\\":-42,\\\"o\\\":\\\"m -208 -294 q -356 -240 -304 -294 q -408 -99 -408 -186 l -408 -61 l -224 -61 l -224 -93 q -171 -149 -224 -149 q -104 -129 -140 -149 l -42 -240 q -208 -294 -110 -294 z \\\"},\\\"΄\\\":{\\\"ha\\\":343,\\\"x_min\\\":42,\\\"x_max\\\":301,\\\"o\\\":\\\"m 301 1165 l 229 828 l 60 828 l 42 1185 l 301 1165 z \\\"},\\\"΅\\\":{\\\"ha\\\":757,\\\"x_min\\\":42,\\\"x_max\\\":715,\\\"o\\\":\\\"m 511 1329 l 449 1039 l 303 1039 l 288 1346 l 511 1329 m 174 1072 q 267 1035 228 1072 q 306 944 306 997 q 267 853 306 890 q 174 815 228 815 q 80 853 118 815 q 42 944 42 890 q 80 1035 42 997 q 174 1072 118 1072 m 583 1072 q 676 1035 638 1072 q 715 944 715 997 q 676 853 715 890 q 583 815 638 815 q 490 853 528 815 q 451 944 451 890 q 490 1035 451 997 q 583 1072 528 1072 z \\\"},\\\"᾿\\\":{\\\"ha\\\":322,\\\"x_min\\\":33,\\\"x_max\\\":289,\\\"o\\\":\\\"m 161 1192 q 253 1156 217 1192 q 289 1065 289 1119 q 281 1011 289 1036 q 251 943 272 986 l 182 803 l 51 803 l 86 961 q 33 1065 33 1001 q 69 1155 33 1118 q 161 1192 106 1192 z \\\"},\\\"᾽\\\":{\\\"ha\\\":339,\\\"x_min\\\":42,\\\"x_max\\\":297,\\\"o\\\":\\\"m 169 1185 q 261 1149 225 1185 q 297 1058 297 1113 q 289 1004 297 1029 q 260 936 281 979 l 190 796 l 60 796 l 94 954 q 42 1058 42 994 q 78 1148 42 1111 q 169 1185 114 1185 z \\\"},\\\"῾\\\":{\\\"ha\\\":322,\\\"x_min\\\":33,\\\"x_max\\\":289,\\\"o\\\":\\\"m 161 1192 q 253 1155 217 1192 q 289 1065 289 1118 q 236 961 289 1001 l 271 803 l 140 803 l 71 943 q 42 1011 50 986 q 33 1065 33 1036 q 69 1156 33 1119 q 161 1192 106 1192 z \\\"},\\\"῍\\\":{\\\"ha\\\":636,\\\"x_min\\\":42,\\\"x_max\\\":594,\\\"o\\\":\\\"m 169 1192 q 261 1156 225 1192 q 297 1065 297 1119 q 289 1011 297 1036 q 260 943 281 986 l 190 803 l 60 803 l 94 961 q 42 1065 42 1001 q 78 1155 42 1118 q 169 1192 114 1192 m 594 825 l 444 796 l 311 1133 l 532 1188 l 594 825 z \\\"},\\\"῝\\\":{\\\"ha\\\":636,\\\"x_min\\\":42,\\\"x_max\\\":594,\\\"o\\\":\\\"m 169 1192 q 261 1155 225 1192 q 297 1065 297 1118 q 244 961 297 1001 l 279 803 l 149 803 l 79 943 q 50 1011 58 986 q 42 1065 42 1036 q 78 1156 42 1119 q 169 1192 114 1192 m 594 825 l 444 796 l 311 1133 l 532 1188 l 594 825 z \\\"},\\\"῎\\\":{\\\"ha\\\":636,\\\"x_min\\\":42,\\\"x_max\\\":594,\\\"o\\\":\\\"m 169 1192 q 261 1156 225 1192 q 297 1065 297 1119 q 289 1011 297 1036 q 260 943 281 986 l 190 803 l 60 803 l 94 961 q 42 1065 42 1001 q 78 1155 42 1118 q 169 1192 114 1192 m 594 1133 l 461 796 l 311 825 l 374 1188 l 594 1133 z \\\"},\\\"῞\\\":{\\\"ha\\\":650,\\\"x_min\\\":42,\\\"x_max\\\":608,\\\"o\\\":\\\"m 169 1192 q 261 1155 225 1192 q 297 1065 297 1118 q 244 961 297 1001 l 279 803 l 149 803 l 79 943 q 50 1011 58 986 q 42 1065 42 1036 q 78 1156 42 1119 q 169 1192 114 1192 m 608 1133 l 475 796 l 325 825 l 388 1188 l 608 1133 z \\\"},\\\"῏\\\":{\\\"ha\\\":642,\\\"x_min\\\":42,\\\"x_max\\\":600,\\\"o\\\":\\\"m 401 1138 q 352 1144 372 1138 q 310 1167 332 1151 q 272 1191 283 1185 q 244 1197 260 1197 q 204 1183 219 1197 q 171 1138 189 1169 l 42 1200 q 122 1335 71 1282 q 238 1389 172 1389 q 290 1382 268 1389 q 335 1358 311 1375 q 372 1335 358 1342 q 399 1329 385 1329 q 438 1343 422 1329 q 471 1389 453 1357 l 600 1326 q 519 1190 571 1243 q 401 1138 468 1138 m 263 894 q 193 999 193 929 q 229 1088 193 1051 q 321 1125 265 1125 q 413 1089 376 1125 q 449 999 449 1053 q 439 942 449 968 q 407 876 429 917 l 369 810 l 249 810 l 263 894 z \\\"},\\\"῟\\\":{\\\"ha\\\":642,\\\"x_min\\\":42,\\\"x_max\\\":600,\\\"o\\\":\\\"m 401 1138 q 352 1144 372 1138 q 310 1167 332 1151 q 272 1191 283 1185 q 244 1197 260 1197 q 204 1183 219 1197 q 171 1138 189 1169 l 42 1200 q 122 1335 71 1282 q 238 1389 172 1389 q 290 1382 268 1389 q 335 1358 311 1375 q 372 1335 358 1342 q 399 1329 385 1329 q 438 1343 422 1329 q 471 1389 453 1357 l 600 1326 q 519 1190 571 1243 q 401 1138 468 1138 m 272 810 l 235 876 q 203 942 213 917 q 193 999 193 968 q 229 1089 193 1053 q 321 1125 265 1125 q 413 1088 376 1125 q 449 999 449 1051 q 382 894 449 931 l 393 810 l 272 810 z \\\"},\\\"῭\\\":{\\\"ha\\\":715,\\\"x_min\\\":42,\\\"x_max\\\":674,\\\"o\\\":\\\"m 465 1108 l 364 1018 l 126 1225 l 271 1367 l 465 1108 m 174 1072 q 267 1035 229 1072 q 306 944 306 997 q 267 853 306 890 q 174 815 229 815 q 81 853 119 815 q 42 944 42 890 q 81 1035 42 997 q 174 1072 119 1072 m 542 1072 q 635 1035 597 1072 q 674 944 674 997 q 635 853 674 890 q 542 815 597 815 q 449 853 488 815 q 410 944 410 890 q 449 1035 410 997 q 542 1072 488 1072 z \\\"},\\\"΅\\\":{\\\"ha\\\":715,\\\"x_min\\\":42,\\\"x_max\\\":674,\\\"o\\\":\\\"m 592 1225 l 354 1018 l 253 1108 l 447 1367 l 592 1225 m 174 1072 q 267 1035 228 1072 q 306 944 306 997 q 267 853 306 890 q 174 815 228 815 q 80 853 118 815 q 42 944 42 890 q 80 1035 42 997 q 174 1072 118 1072 m 542 1072 q 635 1035 596 1072 q 674 944 674 997 q 635 853 674 890 q 542 815 596 815 q 448 853 486 815 q 410 944 410 890 q 448 1035 410 997 q 542 1072 486 1072 z \\\"},\\\"῁\\\":{\\\"ha\\\":688,\\\"x_min\\\":42,\\\"x_max\\\":646,\\\"o\\\":\\\"z \\\"},\\\"`\\\":{\\\"ha\\\":399,\\\"x_min\\\":42,\\\"x_max\\\":357,\\\"o\\\":\\\"m 357 838 l 182 808 l 42 1151 l 304 1206 l 357 838 z \\\"},\\\"´\\\":{\\\"ha\\\":399,\\\"x_min\\\":42,\\\"x_max\\\":357,\\\"o\\\":\\\"m 357 1151 l 217 808 l 42 838 l 94 1206 l 357 1151 z \\\"},\\\"῀\\\":{\\\"ha\\\":642,\\\"x_min\\\":42,\\\"x_max\\\":600,\\\"o\\\":\\\"m 401 864 q 352 871 372 864 q 310 893 332 878 q 272 917 283 911 q 244 924 260 924 q 204 910 219 924 q 171 864 189 896 l 42 926 q 122 1062 71 1008 q 238 1115 172 1115 q 290 1108 268 1115 q 335 1085 311 1101 q 372 1062 358 1068 q 399 1056 385 1056 q 438 1069 422 1056 q 471 1115 453 1083 l 600 1053 q 519 917 571 969 q 401 864 468 864 z \\\"},\\\"ʼ\\\":{\\\"ha\\\":350,\\\"x_min\\\":35,\\\"x_max\\\":301,\\\"o\\\":\\\"m 169 1075 q 264 1039 226 1075 q 301 947 301 1003 q 290 878 301 914 q 251 788 279 843 l 167 614 l 36 614 l 94 838 q 35 949 35 879 q 74 1039 35 1003 q 169 1075 113 1075 z \\\"},\\\"⏻\\\":{\\\"ha\\\":1172,\\\"x_min\\\":69,\\\"x_max\\\":1103,\\\"o\\\":\\\"m 654 1033 l 654 490 l 517 490 l 517 1033 l 654 1033 m 957 857 q 1065 692 1026 786 q 1103 492 1103 599 q 1035 228 1103 346 q 850 42 968 110 q 586 -25 732 -25 q 321 42 439 -25 q 136 228 203 110 q 69 492 69 346 q 108 692 69 599 q 215 857 146 786 l 308 774 q 235 647 261 719 q 210 492 210 575 q 256 284 210 375 q 388 142 303 193 q 586 90 474 90 q 783 142 697 90 q 915 285 868 193 q 963 492 963 376 q 936 646 963 574 q 863 774 910 718 l 957 857 z \\\"},\\\"⏼\\\":{\\\"ha\\\":1224,\\\"x_min\\\":69,\\\"x_max\\\":1154,\\\"o\\\":\\\"m 613 1060 q 889 988 765 1060 q 1083 793 1013 917 q 1154 518 1154 669 q 1084 240 1154 364 q 890 46 1014 117 q 613 -25 765 -25 q 333 46 457 -25 q 140 240 210 117 q 69 518 69 364 q 140 793 69 669 q 333 988 210 917 q 613 1060 457 1060 m 613 940 q 405 885 494 940 q 266 735 315 831 q 217 518 217 639 q 266 300 217 396 q 405 150 315 204 q 613 96 494 96 q 817 150 728 96 q 957 300 907 204 q 1007 518 1007 396 q 957 734 1007 638 q 817 885 907 831 q 613 940 728 940 m 675 808 l 675 229 l 543 229 l 543 808 l 675 808 z \\\"},\\\"⏽\\\":{\\\"ha\\\":408,\\\"x_min\\\":139,\\\"x_max\\\":269,\\\"o\\\":\\\"m 269 843 l 269 125 l 139 125 l 139 843 l 269 843 z \\\"},\\\"⏾\\\":{\\\"ha\\\":947,\\\"x_min\\\":139,\\\"x_max\\\":808,\\\"o\\\":\\\"m 808 300 q 684 212 757 243 q 518 181 611 181 q 319 229 406 181 q 186 361 233 278 q 139 547 139 444 q 258 850 139 728 q 314 530 258 650 q 489 355 369 410 q 808 300 608 300 z \\\"},\\\"Ɪ\\\":{\\\"ha\\\":596,\\\"x_min\\\":28,\\\"x_max\\\":568,\\\"o\\\":\\\"m 442 764 l 442 206 l 568 206 l 568 0 l 28 0 l 28 206 l 154 206 l 154 764 l 28 764 l 28 967 l 568 967 l 568 764 l 442 764 z \\\"},\\\"Ү\\\":{\\\"ha\\\":861,\\\"x_min\\\":-21,\\\"x_max\\\":882,\\\"o\\\":\\\"m 574 357 l 574 0 l 288 0 l 288 356 l -21 967 l 292 967 l 435 572 l 579 967 l 882 967 l 574 357 z \\\"},\\\"Ұ\\\":{\\\"ha\\\":861,\\\"x_min\\\":-21,\\\"x_max\\\":882,\\\"o\\\":\\\"m 618 444 l 725 444 l 725 297 l 574 297 l 574 0 l 288 0 l 288 297 l 136 297 l 136 444 l 243 444 l -21 967 l 292 967 l 435 572 l 579 967 l 882 967 l 618 444 z \\\"},\\\"ү\\\":{\\\"ha\\\":731,\\\"x_min\\\":-21,\\\"x_max\\\":751,\\\"o\\\":\\\"m 499 0 l 499 -287 l 232 -315 l 232 0 l -21 742 l 281 742 l 371 222 l 471 742 l 751 742 l 499 0 z \\\"},\\\"ұ\\\":{\\\"ha\\\":731,\\\"x_min\\\":-21,\\\"x_max\\\":751,\\\"o\\\":\\\"m 542 125 l 626 125 l 626 -14 l 499 -14 l 499 -287 l 232 -315 l 232 -14 l 104 -14 l 104 125 l 189 125 l -21 742 l 281 742 l 371 222 l 471 742 l 751 742 l 542 125 z \\\"}},\\\"familyName\\\":\\\"Fira Sans Heavy\\\",\\\"ascender\\\":1299,\\\"descender\\\":-368,\\\"underlinePosition\\\":-104,\\\"underlineThickness\\\":69,\\\"boundingBox\\\":{\\\"yMin\\\":-493,\\\"xMin\\\":-1111,\\\"yMax\\\":1722,\\\"xMax\\\":1889},\\\"resolution\\\":1000,\\\"original_font_information\\\":{\\\"format\\\":0,\\\"copyright\\\":\\\"Digitized data copyright 2012-2018, The Mozilla Foundation and Telefonica S.A., bBox Type GmbH and Carrois Corporate GbR, with Reserved Font Name \\\\\\\"Fira\\\\\\\"\\\",\\\"fontFamily\\\":\\\"Fira Sans Heavy\\\",\\\"fontSubfamily\\\":\\\"Regular\\\",\\\"uniqueID\\\":\\\"4.301;bB  ;FiraSans-Heavy\\\",\\\"fullName\\\":\\\"Fira Sans Heavy\\\",\\\"version\\\":\\\"Version 4.301\\\",\\\"postScriptName\\\":\\\"FiraSans-Heavy\\\",\\\"trademark\\\":\\\"Fira Sans is a trademark of The Mozilla Corporation.\\\",\\\"manufacturer\\\":\\\"bBox Type GmbH & Carrois Corporate GbR & Edenspiekermann AG\\\",\\\"designer\\\":\\\"bBox Type GmbH & Carrois Corporate GbR & Edenspiekermann AG\\\",\\\"manufacturerURL\\\":\\\"https://www.bboxtype.com\\\",\\\"designerURL\\\":\\\"https://www.bboxtype.com\\\",\\\"licence\\\":\\\"Licensed under the Open Font License, version 1.1 or later\\\",\\\"licenceURL\\\":\\\"http://scripts.sil.org/OFL\\\",\\\"preferredFamily\\\":\\\"Fira Sans\\\",\\\"preferredSubfamily\\\":\\\"Heavy\\\",\\\"unknown1\\\":\\\"Stylistic variants Bulgarian, different African languages\\\",\\\"unknown2\\\":\\\"Stylistic variants Liberian\\\",\\\"unknown3\\\":\\\"Stylistic variant ampersand\\\",\\\"unknown4\\\":\\\"Stylistic variant a\\\",\\\"unknown5\\\":\\\"Stylistic variant g\\\",\\\"unknown6\\\":\\\"Stylistic variants Greek\\\"},\\\"cssFontWeight\\\":\\\"normal\\\",\\\"cssFontStyle\\\":\\\"normal\\\"}\");","import * as THREE from 'three';\r\nimport { saveAs } from 'file-saver';\r\n\r\nimport fira from './FiraSansHeavyRegular.json'\r\nimport STLExporter from './STLExporter.js'\r\n\r\nconst radius = 6;\r\n\r\nlet scene = new THREE.Scene();\r\n\r\nlet renderer = new THREE.WebGLRenderer( { antialias: true } );\r\nlet rendererWidth = window.innerWidth;\r\nlet rendererHeight = window.innerHeight;\r\nrenderer.setSize(rendererWidth, rendererHeight);\r\n\r\nlet camera = new THREE.PerspectiveCamera(70, rendererWidth / rendererHeight, 0.01, 20);\r\ncamera.position.x = radius;\r\ncamera.position.y = 0;\r\ncamera.position.z = 12;\r\ncamera.lookAt(0, 0, 0);\r\nrenderer.setAnimationLoop(time => {\r\n\tcamera.position.x = radius * Math.cos( time / 2000 );\r\n\tcamera.position.y = radius * Math.sin( time / 2000 );\r\n\tcamera.lookAt(0, 0, 0);\r\n\trenderer.render( scene, camera );\r\n});\r\ndocument.body.appendChild( renderer.domElement );\r\n\r\nlet currentMesh = loadText(\"Meow\", new THREE.Font(fira));\r\n\r\nconst maxSize = 10;\r\n\r\naddGround();\r\naddMoveHandlers();\r\n\r\nfunction addGround() {\r\n\tconst geometry = new THREE.PlaneGeometry(maxSize, maxSize, 10, 10);\r\n\t// const material = new THREE.MeshNormalMaterial();\r\n\t// const plane = new THREE.Mesh( geometry, material );\r\n\t// scene.add( plane );\r\n\r\n\tconst wireframe = new THREE.WireframeGeometry(geometry);\r\n\tconst line = new THREE.LineSegments( wireframe );\r\n\tline.material.depthTest = true;\r\n\tscene.add( line );\r\n}\r\n\r\nfunction loadText(string, font) {\r\n\tconst geometry = new THREE.TextGeometry(string, {\r\n\t\tfont: font,\r\n\t\tsize: 2,\r\n\t\theight: 1,\r\n\t\tcurveSegments: 12,\r\n\t});\r\n\tconst material = new THREE.MeshNormalMaterial();\r\n\tconst mesh = new THREE.Mesh( geometry, material );\r\n\tmesh.position.x = -4;\r\n\tmesh.position.z = 0;\r\n\tscene.add( mesh );\r\n\treturn mesh;\r\n}\r\n\r\nfunction saveStl() {\r\n\tlet exporter = new STLExporter();\r\n\tlet str = exporter.parse( scene ); // Export the scene\r\n\tvar blob = new Blob( [str], { type : 'text/plain' } ); // Generate Blob from the string\r\n\tsaveAs( blob, 'file.stl' ); //Save the Blob to file.stl\r\n}\r\n\r\n\r\nfunction addMoveHandlers() {\r\n\t\r\n\trenderer.domElement.addEventListener(\"touchstart\", handleMoveZoom);\r\n\trenderer.domElement.addEventListener(\"touchmove\", handleMoveZoom);\r\n\r\n\tlet tpCache = {};\r\n\r\n\tfunction handleMoveZoom(e) {\r\n\t\t// don't handle 3-touch\r\n\t\tif (e.targetTouches.length > 2) {\r\n\t\t\ttpCache = {};\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet movedTps = [];\r\n\t\tfor (let i = 0; i < e.targetTouches.length; i++) {\r\n\t\t\tlet tp = e.targetTouches[i];\r\n\t\t\tlet id = tp.identifier;\r\n\t\t\tif (tpCache[id] !== undefined) {\r\n\t\t\t\tmovedTps.push(tp);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// document.getElementById(\"test\").innerHTML = movedTps.map(tp => tp.identifier).join(',');\r\n\t\t\r\n\t\tif (movedTps.length === 1) {\r\n\t\t\tlet p = movedTps[0];\r\n\t\t\tcurrentMesh.position.x += (p.clientX - tpCache[p.identifier].clientX) / rendererHeight * maxSize;\r\n\t\t\tcurrentMesh.position.y -= (p.clientY - tpCache[p.identifier].clientY) / rendererHeight * maxSize;\r\n\t\t} else if (movedTps.length === 2) {\r\n\t\t\tlet p1 = movedTps[0];\r\n\t\t\tlet p2 = movedTps[1];\r\n\t\t\tlet x1 = tpCache[p1.identifier].clientX / rendererHeight * maxSize - maxSize / 2;\r\n\t\t\tlet x2 = tpCache[p2.identifier].clientX / rendererHeight * maxSize - maxSize / 2;\r\n\t\t\tlet y1 = - tpCache[p1.identifier].clientY / rendererHeight * maxSize + maxSize / 2;\r\n\t\t\tlet y2 = - tpCache[p2.identifier].clientY / rendererHeight * maxSize + maxSize / 2;\r\n\t\t\tlet x3 = p1.clientX / rendererHeight * maxSize - maxSize / 2;\r\n\t\t\tlet x4 = p2.clientX / rendererHeight * maxSize - maxSize / 2;\r\n\t\t\tlet y3 = - p1.clientY / rendererHeight * maxSize + maxSize / 2;\r\n\t\t\tlet y4 = - p2.clientY / rendererHeight * maxSize + maxSize / 2;\r\n\t\t\tlet n1x = x2 - x1;\r\n\t\t\tlet n1y = y2 - y1;\r\n\t\t\tlet n2x = x4 - x3;\r\n\t\t\tlet n2y = y4 - y3;\r\n\t\t\tlet kx = currentMesh.position.x - x1;\r\n\t\t\tlet ky = currentMesh.position.y - y1;\r\n\t\t\tlet a = Math.atan2(n2y, n2x) - Math.atan2(n1y, n1x);\r\n\t\t\tlet r = Math.sqrt(n2x*n2x + n2y*n2y) / Math.sqrt(n1x*n1x + n1y*n1y);\r\n\t\t\tcurrentMesh.position.x = (Math.cos(a) * kx - Math.sin(a) * ky) * r + x3;\r\n\t\t\tcurrentMesh.position.y = (Math.sin(a) * kx + Math.cos(a) * ky) * r + y3;\r\n\t\t\tcurrentMesh.rotation.z += a;\r\n\t\t\tcurrentMesh.scale.x *= r;\r\n\t\t\tcurrentMesh.scale.y *= r;\r\n\t\t\t// document.getElementById(\"test\").innerHTML = `${[n1x, n1y, n2x, n2y].join('+')}`;\r\n\t\t}\r\n\r\n\t\t\r\n\t\ttpCache = {};\r\n\t\tfor (let i = 0; i < e.targetTouches.length; i++) {\r\n\t\t\tlet tp = e.targetTouches[i];\r\n\t\t\tlet id = tp.identifier;\r\n\t\t\ttpCache[id] = tp;\r\n\t\t}\r\n\t}\r\n}\r\n"],"names":["$d5b3420140e48d897641d55293bef54b$export$fffd413922b3da9","$d5b3420140e48d897641d55293bef54b$export$14b9933b43601226","$d5b3420140e48d897641d55293bef54b$export$2be972fd003606e2","$d5b3420140e48d897641d55293bef54b$export$fb3ca8bcae285728","$d5b3420140e48d897641d55293bef54b$export$8be195802fe0213b","$d5b3420140e48d897641d55293bef54b$export$7e167fb3a9a9867a","$d5b3420140e48d897641d55293bef54b$export$73b90a84ed7db63c","$d5b3420140e48d897641d55293bef54b$export$2dd54949bff6f96d","$d5b3420140e48d897641d55293bef54b$export$f8b53649f0062e3e","$d5b3420140e48d897641d55293bef54b$export$3d857d6c85506f73","$d5b3420140e48d897641d55293bef54b$export$977236fa8e8d0f1d","$d5b3420140e48d897641d55293bef54b$export$d8f3ba475551f5c1","$d5b3420140e48d897641d55293bef54b$export$f4f4190ac785556","$d5b3420140e48d897641d55293bef54b$export$33b8d64de134adc1","$d5b3420140e48d897641d55293bef54b$export$4a825e20fda0d845","$d5b3420140e48d897641d55293bef54b$export$fb395af353fbcc10","$d5b3420140e48d897641d55293bef54b$export$64bd8724f3c14b98","$d5b3420140e48d897641d55293bef54b$export$c22551bc1ee2a31d","$d5b3420140e48d897641d55293bef54b$export$2773efb061bfa2af","$d5b3420140e48d897641d55293bef54b$export$cb1f224ebfa17eab","$d5b3420140e48d897641d55293bef54b$export$fdd3489947276d08","$d5b3420140e48d897641d55293bef54b$export$9e7c899e9114cafe","$d5b3420140e48d897641d55293bef54b$export$4db2359531a79852","$d5b3420140e48d897641d55293bef54b$export$3b97cb67250b5b78","$d5b3420140e48d897641d55293bef54b$export$6b1e0ecaec10d488","$d5b3420140e48d897641d55293bef54b$export$a21a2facc0e6ec62","$d5b3420140e48d897641d55293bef54b$export$d8b6fdb2f300ab40","$d5b3420140e48d897641d55293bef54b$export$6f63fb2e509705af","$d5b3420140e48d897641d55293bef54b$export$ab43ac719393f08d","$d5b3420140e48d897641d55293bef54b$export$54330578444a738c","$d5b3420140e48d897641d55293bef54b$export$b2fb0348530d6a72","$d5b3420140e48d897641d55293bef54b$export$e7c1dc234bb46352","$d5b3420140e48d897641d55293bef54b$export$bdceb2aaf414b246","$d5b3420140e48d897641d55293bef54b$export$ace080f0744d1804","$d5b3420140e48d897641d55293bef54b$export$efbda882eafb9ba9","$d5b3420140e48d897641d55293bef54b$export$ec469a709bf33b5b","$d5b3420140e48d897641d55293bef54b$export$7d5edd11bbbbcdb4","$d5b3420140e48d897641d55293bef54b$export$48c70045116d2bc9","$d5b3420140e48d897641d55293bef54b$export$4615b0b33ebec6c8","[object Object]","type","listener","undefined","_listeners","this","listeners","indexOf","push","listenerArray","index","splice","event","target","array","slice","i","l","length","call","$d5b3420140e48d897641d55293bef54b$var$_lut","toString","$d5b3420140e48d897641d55293bef54b$var$DEG2RAD","Math","PI","$d5b3420140e48d897641d55293bef54b$var$RAD2DEG","$d5b3420140e48d897641d55293bef54b$var$generateUUID","d0","random","d1","d2","d3","toUpperCase","$d5b3420140e48d897641d55293bef54b$var$clamp","value","min","max","$d5b3420140e48d897641d55293bef54b$var$euclideanModulo","n","m","$d5b3420140e48d897641d55293bef54b$var$lerp","x","y","t","$d5b3420140e48d897641d55293bef54b$var$isPowerOfTwo","$d5b3420140e48d897641d55293bef54b$var$floorPowerOfTwo","pow","floor","log","LN2","$d5b3420140e48d897641d55293bef54b$export$95d9e1e745cc7977","x1","y1","scalar","Error","constructor","v","w","console","warn","addVectors","s","a","b","subVectors","multiplyScalar","x2","y2","e","elements","minVal","maxVal","divideScalar","ceil","round","sqrt","abs","atan2","distanceToSquared","dx","dy","normalize","alpha","v1","v2","offset","attribute","getX","getY","center","angle","c","cos","sin","prototype","isVector2","$d5b3420140e48d897641d55293bef54b$export$6b1dbb040148d435","arguments","error","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","set","me","xAxis","yAxis","zAxis","setFromMatrix3Column","multiplyMatrices","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","d","f","g","h","i1","t11","t12","t13","det","detInv","tmp","matrix4","setFromMatrix4","invert","transpose","r","tx","ty","sx","sy","rotation","cx","cy","theta","matrix","fromArray","$d5b3420140e48d897641d55293bef54b$var$_canvas","isMatrix3","$d5b3420140e48d897641d55293bef54b$export$efc8126a946586b9","image","test","src","HTMLCanvasElement","canvas","document","createElementNS","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","$d5b3420140e48d897641d55293bef54b$var$textureId","$d5b3420140e48d897641d55293bef54b$export$1cad442f1a6e549f","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","type8","anisotropy","encoding","super","Object","defineProperty","uuid","name","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","setUvTransform","copy","source","meta","isRootObject","textures","output","metadata","generator","wrap","image1","images","url","Array","isArray","isDataTexture","$d5b3420140e48d897641d55293bef54b$var$serializeImage","dispatchEvent","uv","applyMatrix3","HTMLImageElement","ImageBitmap","getDataURL","data","isTexture","$d5b3420140e48d897641d55293bef54b$export$14dfcb76afe97063","z1","w1","z","x3","y3","z2","w2","q","acos","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","isVector4","$d5b3420140e48d897641d55293bef54b$export$aef5a065c75d61ea","width1","height1","options4","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","dispose","clone","isWebGLRenderTarget","width2","height2","count1","texture1","i2","il","isWebGLMultipleRenderTargets","width3","height3","options1","samples","isWebGLMultisampleRenderTarget","$d5b3420140e48d897641d55293bef54b$export$8756178d528e80f7","_x","_y","_z","_w","qa","qb","qm","slerpQuaternions","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x11","y11","z11","w11","dir","sqrSin","Number","EPSILON","len","tDir","_onChangeCallback","quaternion","euler","update","isEuler","x4","y4","z3","order","_order","c1","c2","c3","s1","s2","s3","axis","halfAngle","trace","vFrom","vTo","dot","step","angleTo","slerp","conjugate","p","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","w3","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","callback","isQuaternion","$d5b3420140e48d897641d55293bef54b$export$cbf9fa4ea4e2e3d2","multiplyVectors","applyQuaternion","$d5b3420140e48d897641d55293bef54b$var$_quaternion$4","setFromEuler","setFromAxisAngle","x5","y5","z4","qx","qy","qz","qw","ix","iy","iz","iw","camera","applyMatrix4","matrixWorldInverse","projectionMatrix","projectionMatrixInverse","matrixWorld","crossVectors","ax","ay","az","bx","by","bz","denominator","lengthSq","planeNormal","$d5b3420140e48d897641d55293bef54b$var$_vector$c","projectOnVector","sub","normal","dz","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindricalCoords","setFromMatrixColumn","sz","isVector3","$d5b3420140e48d897641d55293bef54b$export$c99edadde72ee706","min1","Infinity","max1","minX","minY","minZ","maxX","maxY","maxZ","count","points","makeEmpty","expandByPoint","size","halfSize","$d5b3420140e48d897641d55293bef54b$var$_vector$b","add","object","expandByObject","box","isEmpty","point","vector","addScalar","updateWorldMatrix","geometry","boundingBox","computeBoundingBox","$d5b3420140e48d897641d55293bef54b$var$_box$3","union","children","sphere","clampPoint","plane","min2","max2","constant","triangle","getCenter","$d5b3420140e48d897641d55293bef54b$var$_center","$d5b3420140e48d897641d55293bef54b$var$_extents","$d5b3420140e48d897641d55293bef54b$var$_v0$2","$d5b3420140e48d897641d55293bef54b$var$_v1$7","$d5b3420140e48d897641d55293bef54b$var$_v2$3","$d5b3420140e48d897641d55293bef54b$var$_f0","$d5b3420140e48d897641d55293bef54b$var$_f1","$d5b3420140e48d897641d55293bef54b$var$_f2","axes","$d5b3420140e48d897641d55293bef54b$var$satForAxes","$d5b3420140e48d897641d55293bef54b$var$_triangleNormal","clamp","getSize","$d5b3420140e48d897641d55293bef54b$var$_points","setFromPoints","equals","isBox3","$d5b3420140e48d897641d55293bef54b$var$_testAxis","v0","extents","j","p0","p1","p2","$d5b3420140e48d897641d55293bef54b$var$_box$2","$d5b3420140e48d897641d55293bef54b$var$_v1$6","$d5b3420140e48d897641d55293bef54b$var$_toFarthestPoint","$d5b3420140e48d897641d55293bef54b$var$_toPoint","$d5b3420140e48d897641d55293bef54b$export$48b052fa5734fd42","center1","radius1","optionalCenter","center2","maxRadiusSq","distanceTo","radiusSum","intersectsSphere","distanceToPoint","deltaLengthSq","expandByScalar","getMaxScaleOnAxis","missingRadiusHalf","$d5b3420140e48d897641d55293bef54b$var$_vector$a","$d5b3420140e48d897641d55293bef54b$var$_segCenter","$d5b3420140e48d897641d55293bef54b$var$_segDir","$d5b3420140e48d897641d55293bef54b$var$_diff","$d5b3420140e48d897641d55293bef54b$var$_edge1","$d5b3420140e48d897641d55293bef54b$var$_edge2","$d5b3420140e48d897641d55293bef54b$var$_normal$1","$d5b3420140e48d897641d55293bef54b$export$c0bfd01633e732a2","origin1","direction1","origin","direction","ray","at","directionDistance","distanceSqToPoint","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","b1","s0","sqrDist","extDet","invDet","tca","radius2","thc","t0","t1","distanceToPlane","distToPoint","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","origin2","intersectBox","backfaceCulling","sign","DdN","DdQxE2","DdE1xQ","cross","QdN","transformDirection","$d5b3420140e48d897641d55293bef54b$export$960b1460cb9cd6c9","n14","n24","n34","n41","n42","n43","n44","scaleX","$d5b3420140e48d897641d55293bef54b$var$_v1$5","scaleY","scaleZ","af","bf","ce","cf","de","df","ac","ad","bc","bd","compose","$d5b3420140e48d897641d55293bef54b$var$_zero","$d5b3420140e48d897641d55293bef54b$var$_one","eye","up","$d5b3420140e48d897641d55293bef54b$var$_z","$d5b3420140e48d897641d55293bef54b$var$_x","$d5b3420140e48d897641d55293bef54b$var$_y","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","t14","scaleXSq","scaleYSq","scaleZSq","yx","zx","zy","position","scale","x21","y21","z21","wx","wy","wz","determinant","$d5b3420140e48d897641d55293bef54b$var$_m1$2","invSX","invSY","invSZ","setFromRotationMatrix","left","right","top","bottom","near","far","isMatrix4","$d5b3420140e48d897641d55293bef54b$var$_matrix$1","$d5b3420140e48d897641d55293bef54b$var$_quaternion$3","$d5b3420140e48d897641d55293bef54b$export$1c7119953d158aca","order1","DefaultOrder","asin","makeRotationFromQuaternion","newOrder","setFromQuaternion","optionalResult","RotationOrders","$d5b3420140e48d897641d55293bef54b$export$89313398f0a7ef36","mask","channel","layers","$d5b3420140e48d897641d55293bef54b$var$_object3DId","$d5b3420140e48d897641d55293bef54b$var$_v1$4","$d5b3420140e48d897641d55293bef54b$var$_q1","$d5b3420140e48d897641d55293bef54b$var$_m1$1","$d5b3420140e48d897641d55293bef54b$var$_target","$d5b3420140e48d897641d55293bef54b$var$_position$3","$d5b3420140e48d897641d55293bef54b$var$_scale$2","$d5b3420140e48d897641d55293bef54b$var$_quaternion$2","$d5b3420140e48d897641d55293bef54b$var$_xAxis","$d5b3420140e48d897641d55293bef54b$var$_yAxis","$d5b3420140e48d897641d55293bef54b$var$_zAxis","$d5b3420140e48d897641d55293bef54b$var$_addedEvent","$d5b3420140e48d897641d55293bef54b$var$_removedEvent","$d5b3420140e48d897641d55293bef54b$export$c8ea94beaa33360","parent","DefaultUp","_onChange","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","userData","updateMatrix","premultiply","decompose","multiply","rotateOnAxis","distance","translateOnAxis","setFromMatrixPosition","isCamera","isLight","lookAt","extractRotation","isObject3D","remove","id","getObjectByProperty","traverse","traverseVisible","traverseAncestors","force","updateMatrixWorld","updateParents","updateChildren","geometries","materials","shapes","skeletons","serialize","library","element","toJSON","JSON","stringify","toArray","isInstancedMesh","instanceMatrix","instanceColor","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","recursive","parse","child","$d5b3420140e48d897641d55293bef54b$var$_vector1","$d5b3420140e48d897641d55293bef54b$var$_vector2$1","$d5b3420140e48d897641d55293bef54b$var$_normalMatrix","$d5b3420140e48d897641d55293bef54b$export$eff7a5260ebddee8","normal1","constant1","normal2","setFromNormalAndCoplanarPoint","inverseNormalLength","negate","line","direction2","delta","start","startSign","endSign","end","intersectsPlane","optionalNormalMatrix","getNormalMatrix","referencePoint","coplanarPoint","isPlane","$d5b3420140e48d897641d55293bef54b$var$_v0$1","$d5b3420140e48d897641d55293bef54b$var$_v1$3","$d5b3420140e48d897641d55293bef54b$var$_v2$2","$d5b3420140e48d897641d55293bef54b$var$_v3$1","$d5b3420140e48d897641d55293bef54b$var$_vab","$d5b3420140e48d897641d55293bef54b$var$_vac","$d5b3420140e48d897641d55293bef54b$var$_vbc","$d5b3420140e48d897641d55293bef54b$var$_vap","$d5b3420140e48d897641d55293bef54b$var$_vbp","$d5b3420140e48d897641d55293bef54b$var$_vcp","$d5b3420140e48d897641d55293bef54b$export$cc2ce4c411239af4","a1","targetLengthSq","dot00","dot01","dot02","dot11","dot12","denom","invDenom","u","getBarycoord","p3","uv1","uv2","uv3","addScaledVector","i0","getNormal","setFromCoplanarPoints","getUV","containsPoint","isFrontFacing","intersectsTriangle","a2","b2","d4","vc","d5","d6","vb","va","$d5b3420140e48d897641d55293bef54b$var$materialId","$d5b3420140e48d897641d55293bef54b$export$1631e5d26e6ca932","fog","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","alphaToCoverage","premultipliedAlpha","toneMapped","onBeforeCompile","newValue","flatShading","currentValue","isColor","isRoot","data1","color","getHex","roughness","metalness","sheen","emissive","emissiveIntensity","specular","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","morphTargets","morphNormals","srcPlanes","dstPlanes","isMaterial","$d5b3420140e48d897641d55293bef54b$var$_colorKeywords","$d5b3420140e48d897641d55293bef54b$var$_hslA","$d5b3420140e48d897641d55293bef54b$var$_hslB","$d5b3420140e48d897641d55293bef54b$var$hue2rgb","$d5b3420140e48d897641d55293bef54b$var$SRGBToLinear","$d5b3420140e48d897641d55293bef54b$var$LinearToSRGB","$d5b3420140e48d897641d55293bef54b$export$e4830c8e55b4f80d","r1","g1","setRGB","setHex","setStyle","hex","style","handleAlpha","string","parseFloat","exec","components","parseInt","setHSL","charAt","setColorName","toLowerCase","gammaFactor","safeInverse","copyGammaToLinear","copyLinearToGamma","copySRGBToLinear","copyLinearToSRGB","r2","g2","b3","hue","saturation","lightness","getHSL","color1","color2","normalized","NAMES","$d5b3420140e48d897641d55293bef54b$export$f191b8c5dbd3d9f9","setValues","isMeshBasicMaterial","$d5b3420140e48d897641d55293bef54b$var$_vector$9","$d5b3420140e48d897641d55293bef54b$var$_vector2","$d5b3420140e48d897641d55293bef54b$export$3d45483f125de856","array1","itemSize14","TypeError","itemSize","usage","updateRange","index1","index2","colors","array2","vectors","fromBufferAttribute","setXY","i3","l1","setXYZ","applyNormalMatrix","onUploadCallback","isBufferAttribute","$d5b3420140e48d897641d55293bef54b$export$1673be55325c3b52","array6","itemSize5","normalized5","Uint16Array","$d5b3420140e48d897641d55293bef54b$export$f86c6826769eb286","array8","itemSize7","normalized7","Uint32Array","array9","itemSize8","normalized8","isFloat16BufferAttribute","$d5b3420140e48d897641d55293bef54b$export$8af155dd3ccd7773","array10","itemSize9","normalized9","Float32Array","$d5b3420140e48d897641d55293bef54b$var$arrayMax","array12","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Int32Array","Float64Array","$d5b3420140e48d897641d55293bef54b$var$_id","$d5b3420140e48d897641d55293bef54b$var$_m1","$d5b3420140e48d897641d55293bef54b$var$_obj","$d5b3420140e48d897641d55293bef54b$var$_offset","$d5b3420140e48d897641d55293bef54b$var$_box$1","$d5b3420140e48d897641d55293bef54b$var$_boxMorphTargets","$d5b3420140e48d897641d55293bef54b$var$_vector$8","$d5b3420140e48d897641d55293bef54b$export$84a34b4c8ecb6751","attributes","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","materialIndex","position1","needsUpdate","tangent","computeBoundingSphere","makeRotationX","makeRotationY","makeRotationZ","makeTranslation","makeScale","translate","setAttribute","morphAttributesPosition","isGLBufferAttribute","setFromBufferAttribute","morphAttribute","isNaN","il1","i4","il2","jl","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","positionAttribute","getAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","isBufferGeometry","attributeArray1","attribute2","attributeArray2","attributeOffset","convertBufferAttribute","itemSize11","normalized11","array21","geometry2","newAttribute","name1","morphArray","addGroup","keys","parameters1","hasMorphAttributes","key1","attributeArray","setIndex","$d5b3420140e48d897641d55293bef54b$var$_inverseMatrix$2","$d5b3420140e48d897641d55293bef54b$var$_ray$2","$d5b3420140e48d897641d55293bef54b$var$_sphere$3","$d5b3420140e48d897641d55293bef54b$var$_vA$1","$d5b3420140e48d897641d55293bef54b$var$_vB$1","$d5b3420140e48d897641d55293bef54b$var$_vC$1","$d5b3420140e48d897641d55293bef54b$var$_tempA","$d5b3420140e48d897641d55293bef54b$var$_tempB","$d5b3420140e48d897641d55293bef54b$var$_tempC","$d5b3420140e48d897641d55293bef54b$var$_morphA","$d5b3420140e48d897641d55293bef54b$var$_morphB","$d5b3420140e48d897641d55293bef54b$var$_morphC","$d5b3420140e48d897641d55293bef54b$var$_uvA$1","$d5b3420140e48d897641d55293bef54b$var$_uvB$1","$d5b3420140e48d897641d55293bef54b$var$_uvC$1","$d5b3420140e48d897641d55293bef54b$var$_intersectionPoint","$d5b3420140e48d897641d55293bef54b$var$_intersectionPointWorld","$d5b3420140e48d897641d55293bef54b$export$4cdb671a7054bbf9","material17","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","assign","geometry1","ml","String","raycaster","intersects","material1","intersectsBox","intersection","morphPosition","groupMaterial","$d5b3420140e48d897641d55293bef54b$var$checkBufferGeometryIntersection","faceIndex","face","isGeometry","morphInfluences","influence","boneTransform","intersect","intersectTriangle","$d5b3420140e48d897641d55293bef54b$var$checkIntersection","$d5b3420140e48d897641d55293bef54b$export$7adcd09f49b1ca3c","width4","height4","depth1","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","width5","height5","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","y6","x6","iy1","$d5b3420140e48d897641d55293bef54b$var$cloneUniforms","property","$d5b3420140e48d897641d55293bef54b$var$mergeUniforms","uniforms","merged","$d5b3420140e48d897641d55293bef54b$export$7c3162ea2c0a01b6","merge","$d5b3420140e48d897641d55293bef54b$export$2a77b7c526ae5937","defines","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","isShaderMaterial","$d5b3420140e48d897641d55293bef54b$export$d193d689dcf22ce8","$d5b3420140e48d897641d55293bef54b$export$95bab1c599905cc4","fov","aspect","near5","far5","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","focalLength","vExtentSlope","getFilmHeight","atan","tan","fullWidth","fullHeight","enabled","offsetX","offsetY","near1","skew","getFilmWidth","makePerspective","isPerspectiveCamera","$d5b3420140e48d897641d55293bef54b$var$fov","$d5b3420140e48d897641d55293bef54b$export$62bcc2046b614bc8","far1","renderTarget","isWebGLCubeRenderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderer","scene","renderTarget1","cameraPX1","cameraNX1","cameraPY1","cameraNY1","cameraPZ1","cameraNZ1","currentXrEnabled","xr","currentRenderTarget","getRenderTarget","setRenderTarget","render","$d5b3420140e48d897641d55293bef54b$export$2093b765bab902d5","images1","mapping1","wrapS1","wrapT1","magFilter1","minFilter1","format1","type1","anisotropy1","encoding1","_needsFlipEnvMap","isCubeTexture","$d5b3420140e48d897641d55293bef54b$export$48f3d94ab2a784eb","size1","options2","dummy","isInteger","shader","tEquirect","mesh","currentMinFilter","stencil","clear","$d5b3420140e48d897641d55293bef54b$var$_sphere$2","$d5b3420140e48d897641d55293bef54b$var$_vector$7","$d5b3420140e48d897641d55293bef54b$export$6ef72105b8c3e2c6","p01","p11","p21","p31","p41","p51","planes","p4","p5","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","sprite","negRadius","$d5b3420140e48d897641d55293bef54b$var$WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","stop","cancelAnimationFrame","setAnimationLoop","setContext","$d5b3420140e48d897641d55293bef54b$var$WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","get","isInterleavedBufferAttribute","deleteBuffer","buffer","delete","bufferType","cached","bytesPerElement","elementSize","createBuffer","bindBuffer","bufferData","type2","BYTES_PER_ELEMENT","bufferSubData","subarray","updateBuffer","$d5b3420140e48d897641d55293bef54b$export$f5196b7984dc72bd","widthSegments1","heightSegments1","width_half","height_half","segment_width","segment_height","indices1","vertices1","normals1","uvs1","$d5b3420140e48d897641d55293bef54b$export$dfbc21f88d2cbdc4","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshtoon_frag","meshtoon_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","$d5b3420140e48d897641d55293bef54b$export$167843c98993dbe3","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","maxMipLevel","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","$d5b3420140e48d897641d55293bef54b$export$c8b76cbbe298b27f","basic","lambert","phong","standard","toon","dashed","totalSize","background","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","$d5b3420140e48d897641d55293bef54b$var$WebGLBackground","cubemaps","state","objects","clearColor","planeMesh","boxMesh","clearAlpha","currentBackground","currentBackgroundVersion","currentTonemapping","setClear","getClearColor","setClearColor","getClearAlpha","setClearAlpha","renderList","forceClear","isScene","session","getSession","environmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","deleteAttribute","onBeforeRender","renderer1","scene1","copyPosition","toneMapping","unshift","$d5b3420140e48d897641d55293bef54b$var$WebGLBindingStates","maxVertexAttributes","getParameter","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","bindVertexArrayObject","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","newAttributes","enabledAttributes","attributeDivisors","program","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","stride","vertexAttribIPointer","reset","resetDefaultState","setup","updateBuffers","programMap","stateMap","createVertexArray","createVertexArrayOES","getBindingState","cachedAttributes","geometryAttributes","attributesNum","cachedAttribute","geometryAttribute","attributes1","saveCache","isInstancedBufferGeometry","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","isInstancedInterleavedBuffer","_maxInstanceCount","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","$d5b3420140e48d897641d55293bef54b$var$WebGLBufferRenderer","info","mode","setMode","count2","drawArrays","renderInstances","primcount","methodName","$d5b3420140e48d897641d55293bef54b$var$WebGLCapabilities","parameters2","maxAnisotropy","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","has","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","floatVertexTextures","maxSamples","$d5b3420140e48d897641d55293bef54b$var$WebGLClipping","scope1","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","init","enableLocalClipping","beginShadows","endShadows","setState","useCache","materialProperties","nGlobal","lGlobal","clippingState","$d5b3420140e48d897641d55293bef54b$var$WebGLCubeMaps","mapTextureMapping","texture2","mapping2","onTextureDispose","removeEventListener","cubemap","fromEquirectangularTexture","addEventListener","$d5b3420140e48d897641d55293bef54b$var$WebGLExtensions","getExtension","$d5b3420140e48d897641d55293bef54b$var$WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","indices2","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","$d5b3420140e48d897641d55293bef54b$var$WebGLIndexedBufferRenderer","drawElements","$d5b3420140e48d897641d55293bef54b$var$WebGLInfo","calls","triangles","lines","programs","autoReset","instanceCount","$d5b3420140e48d897641d55293bef54b$var$numericalSort","$d5b3420140e48d897641d55293bef54b$var$absNumericalSort","$d5b3420140e48d897641d55293bef54b$var$WebGLMorphtargets","influencesList","workInfluences","objectInfluences","influences","sort","MAX_SAFE_INTEGER","morphInfluencesSum","i5","hasAttribute","morphBaseInfluence","getUniforms","setValue","$d5b3420140e48d897641d55293bef54b$var$WebGLObjects","updateMap","onInstancedMeshDispose","instancedMesh","buffergeometry","hasEventListener","physical","transmissionSamplerSize","transmissionSamplerMap","$d5b3420140e48d897641d55293bef54b$export$9cd8a94f64312883","data2","width6","height6","depth2","wrapR","isDataTexture2DArray","$d5b3420140e48d897641d55293bef54b$export$55b418672f00e447","width7","height7","depth3","isDataTexture3D","$d5b3420140e48d897641d55293bef54b$var$emptyTexture","$d5b3420140e48d897641d55293bef54b$var$emptyTexture2dArray","$d5b3420140e48d897641d55293bef54b$var$emptyTexture3d","$d5b3420140e48d897641d55293bef54b$var$emptyCubeTexture","$d5b3420140e48d897641d55293bef54b$var$arrayCacheF32","$d5b3420140e48d897641d55293bef54b$var$arrayCacheI32","$d5b3420140e48d897641d55293bef54b$var$mat4array","$d5b3420140e48d897641d55293bef54b$var$mat3array","$d5b3420140e48d897641d55293bef54b$var$mat2array","$d5b3420140e48d897641d55293bef54b$var$flatten","nBlocks","blockSize","firstElem","$d5b3420140e48d897641d55293bef54b$var$arraysEqual","$d5b3420140e48d897641d55293bef54b$var$copyArray","$d5b3420140e48d897641d55293bef54b$var$allocTexUnits","allocateTextureUnit","$d5b3420140e48d897641d55293bef54b$var$setValueV1f","uniform1f","addr","$d5b3420140e48d897641d55293bef54b$var$setValueV2f","uniform2f","uniform2fv","$d5b3420140e48d897641d55293bef54b$var$setValueV3f","uniform3f","uniform3fv","$d5b3420140e48d897641d55293bef54b$var$setValueV4f","uniform4f","uniform4fv","$d5b3420140e48d897641d55293bef54b$var$setValueM2","uniformMatrix2fv","$d5b3420140e48d897641d55293bef54b$var$setValueM3","uniformMatrix3fv","$d5b3420140e48d897641d55293bef54b$var$setValueM4","uniformMatrix4fv","$d5b3420140e48d897641d55293bef54b$var$setValueV1i","uniform1i","$d5b3420140e48d897641d55293bef54b$var$setValueV2i","uniform2iv","$d5b3420140e48d897641d55293bef54b$var$setValueV3i","uniform3iv","$d5b3420140e48d897641d55293bef54b$var$setValueV4i","uniform4iv","$d5b3420140e48d897641d55293bef54b$var$setValueV1ui","uniform1ui","$d5b3420140e48d897641d55293bef54b$var$setValueV2ui","uniform2uiv","$d5b3420140e48d897641d55293bef54b$var$setValueV3ui","uniform3uiv","$d5b3420140e48d897641d55293bef54b$var$setValueV4ui","uniform4uiv","$d5b3420140e48d897641d55293bef54b$var$setValueT1","unit","safeSetTexture2D","$d5b3420140e48d897641d55293bef54b$var$setValueT3D1","setTexture3D","$d5b3420140e48d897641d55293bef54b$var$setValueT6","safeSetTextureCube","$d5b3420140e48d897641d55293bef54b$var$setValueT2DArray1","setTexture2DArray","$d5b3420140e48d897641d55293bef54b$var$setValueV1fArray","uniform1fv","$d5b3420140e48d897641d55293bef54b$var$setValueV2fArray","$d5b3420140e48d897641d55293bef54b$var$setValueV3fArray","$d5b3420140e48d897641d55293bef54b$var$setValueV4fArray","$d5b3420140e48d897641d55293bef54b$var$setValueM2Array","$d5b3420140e48d897641d55293bef54b$var$setValueM3Array","$d5b3420140e48d897641d55293bef54b$var$setValueM4Array","$d5b3420140e48d897641d55293bef54b$var$setValueV1iArray","uniform1iv","$d5b3420140e48d897641d55293bef54b$var$setValueV2iArray","$d5b3420140e48d897641d55293bef54b$var$setValueV3iArray","$d5b3420140e48d897641d55293bef54b$var$setValueV4iArray","$d5b3420140e48d897641d55293bef54b$var$setValueV1uiArray","uniform1uiv","$d5b3420140e48d897641d55293bef54b$var$setValueV2uiArray","$d5b3420140e48d897641d55293bef54b$var$setValueV3uiArray","$d5b3420140e48d897641d55293bef54b$var$setValueV4uiArray","$d5b3420140e48d897641d55293bef54b$var$setValueT1Array","units","$d5b3420140e48d897641d55293bef54b$var$setValueT6Array","$d5b3420140e48d897641d55293bef54b$var$SingleUniform","activeInfo","$d5b3420140e48d897641d55293bef54b$var$getSingularSetter","$d5b3420140e48d897641d55293bef54b$var$PureArrayUniform","$d5b3420140e48d897641d55293bef54b$var$getPureArraySetter","$d5b3420140e48d897641d55293bef54b$var$StructuredUniform","seq","updateCache","$d5b3420140e48d897641d55293bef54b$var$RePathPart","$d5b3420140e48d897641d55293bef54b$var$addUniform","container","uniformObject","$d5b3420140e48d897641d55293bef54b$var$parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","next","$d5b3420140e48d897641d55293bef54b$var$WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","$d5b3420140e48d897641d55293bef54b$var$WebGLShader","createShader","shaderSource","compileShader","setOptional","upload","seqWithValue","$d5b3420140e48d897641d55293bef54b$var$programIdCount","$d5b3420140e48d897641d55293bef54b$var$getEncodingComponents","encoding2","$d5b3420140e48d897641d55293bef54b$var$getShaderErrors","status","getShaderParameter","getShaderInfoLog","trim","split","join","$d5b3420140e48d897641d55293bef54b$var$addLineNumbers","getShaderSource","$d5b3420140e48d897641d55293bef54b$var$getTexelDecodingFunction","functionName","$d5b3420140e48d897641d55293bef54b$var$getTexelEncodingFunction","$d5b3420140e48d897641d55293bef54b$var$getToneMappingFunction","toneMappingName","$d5b3420140e48d897641d55293bef54b$var$filterEmptyLine","$d5b3420140e48d897641d55293bef54b$var$replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","$d5b3420140e48d897641d55293bef54b$var$replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","$d5b3420140e48d897641d55293bef54b$var$includePattern","$d5b3420140e48d897641d55293bef54b$var$resolveIncludes","$d5b3420140e48d897641d55293bef54b$var$includeReplacer","include","$d5b3420140e48d897641d55293bef54b$var$deprecatedUnrollLoopPattern","$d5b3420140e48d897641d55293bef54b$var$unrollLoopPattern","$d5b3420140e48d897641d55293bef54b$var$unrollLoops","$d5b3420140e48d897641d55293bef54b$var$loopReplacer","$d5b3420140e48d897641d55293bef54b$var$deprecatedLoopReplacer","snippet","$d5b3420140e48d897641d55293bef54b$var$generatePrecision","precisionstring","$d5b3420140e48d897641d55293bef54b$var$WebGLProgram","cacheKey","shadowMapTypeDefine","shadowMapType","$d5b3420140e48d897641d55293bef54b$var$generateShadowMapTypeDefine","envMapTypeDefine","envMapMode","$d5b3420140e48d897641d55293bef54b$var$generateEnvMapTypeDefine","envMapModeDefine","$d5b3420140e48d897641d55293bef54b$var$generateEnvMapModeDefine","envMapBlendingDefine","$d5b3420140e48d897641d55293bef54b$var$generateEnvMapBlendingDefine","gammaFactorDefine","customExtensions","extensionDerivatives","envMapCubeUV","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","$d5b3420140e48d897641d55293bef54b$var$generateExtensions","customDefines","chunks","$d5b3420140e48d897641d55293bef54b$var$generateDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexAlphas","vertexUvs","uvsVertexOnly","skinning","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","lightMapEncoding","outputEncoding","depthPacking","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","prefix","cachedUniforms","deleteShader","getActiveAttrib","getAttribLocation","$d5b3420140e48d897641d55293bef54b$var$fetchAttributeLocations","destroy","deleteProgram","usedTimes","$d5b3420140e48d897641d55293bef54b$var$WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshBasicMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getTextureEncodingFromMap","getParameters","shadows","environment","isMeshStandardMaterial","bones","nVertexUniforms","nVertexMatrices","getMaxBones","isFogExp2","directional","spot","rectArea","hemi","shadowMap","customProgramCacheKey","getProgramCacheKey","acquireProgram","pl","preexistingProgram","releaseProgram","pop","$d5b3420140e48d897641d55293bef54b$var$WebGLProperties","$d5b3420140e48d897641d55293bef54b$var$painterSortStable","groupOrder","$d5b3420140e48d897641d55293bef54b$var$reversePainterSortStable","$d5b3420140e48d897641d55293bef54b$var$WebGLRenderList","renderItems","renderItemsIndex","opaque","transmissive","defaultProgram","getNextRenderItem","z5","renderItem","finish","customOpaqueSort","customTransparentSort","$d5b3420140e48d897641d55293bef54b$var$WebGLRenderLists","lists","renderCallDepth","list","$d5b3420140e48d897641d55293bef54b$var$UniformsCache","light","halfWidth","halfHeight","$d5b3420140e48d897641d55293bef54b$var$nextVersion","$d5b3420140e48d897641d55293bef54b$var$shadowCastingLightsFirst","lightA","lightB","$d5b3420140e48d897641d55293bef54b$var$WebGLLights","shadowCache","$d5b3420140e48d897641d55293bef54b$var$ShadowUniformsCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","identity","$d5b3420140e48d897641d55293bef54b$var$WebGLRenderState","lightsArray","shadowsArray","setupLights","setupLightsView","pushLight","pushShadow","shadowLight","$d5b3420140e48d897641d55293bef54b$var$WebGLRenderStates","renderStates","renderState","$d5b3420140e48d897641d55293bef54b$export$4153a5007efa303f","isMeshDepthMaterial","$d5b3420140e48d897641d55293bef54b$export$1b7bb4a7b69d3a38","parameters3","isMeshDistanceMaterial","$d5b3420140e48d897641d55293bef54b$var$WebGLShadowMap","_renderer","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterials","_distanceMaterials","_materialCache","_maxTextureSize","0","1","2","shadowMaterialVertical","SAMPLE_RATE","HALF_SAMPLE_RATE","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","VSMPass","mapPass","renderBufferDirect","getDepthMaterialVariant","useMorphing","getDistanceMaterialVariant","getDepthMaterial","result","getMaterialVariant","customMaterial","customDepthMaterial","customDistanceMaterial","keyA","keyB","materialsForVariant","cachedMaterial","renderObject","shadowCamera","intersectsObject","k","kl","depthMaterial","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","isPointLightShadow","pars","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","$d5b3420140e48d897641d55293bef54b$var$WebGLState","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","currentDepthMask","currentDepthFunc","currentDepthClear","enable","disable","depthMask","setFunc","depth4","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","enabledCapabilities","xrFramebuffer","currentBoundFramebuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","scissorParam","viewportParam","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","equationToGL","MIN_EXT","MAX_EXT","factorToGL","blendEquationSeparate","blendFuncSeparate","blendFunc","frontFace","cullFace","setPolygonOffset","factor","activeTexture","webglSlot","bindFramebuffer","framebuffer","bindXRFramebuffer","useProgram","setMaterial","frontFaceCW","setLineWidth","width8","lineWidth","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","texImage3D","scissor1","viewport1","$d5b3420140e48d897641d55293bef54b$var$WebGLTextures","_gl","utils","_videoTextures","_canvas","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","height8","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","scale1","isPowerOfTwo$1","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","__maxMipLevel","log2","getInternalFormat","internalFormatName","glFormat","glType","filterFallback","textureProperties","__webglInit","deleteTexture","__webglTexture","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","deallocateRenderTarget","textureUnits","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","setTextureCube","initTexture","pixelStorei","isCompressed","isCompressedTexture","cubeImage","convert","glInternalFormat","setTextureParameters","mipmap","mipmapImage","uploadCubeTexture","wrappingToGL","filterToGL","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","textureNeedsPowerOfTwo","isDepthTexture","setupFrameBufferTexture","attachment","textureTarget","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","warnedTexture2D","warnedTextureCube","textureUnit","resetTextureUnits","setupRenderTarget","isMultipleRenderTargets","isRenderTarget3D","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","blitFramebuffer","$d5b3420140e48d897641d55293bef54b$export$f04c3186dcb1ccf2","HALF_FLOAT_OES","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","UNSIGNED_INT_24_8_WEBGL","$d5b3420140e48d897641d55293bef54b$export$d779f9097869a610","cameras","isArrayCamera","$d5b3420140e48d897641d55293bef54b$export$a145e63780346cea","isGroup","$d5b3420140e48d897641d55293bef54b$var$_moveEvent","$d5b3420140e48d897641d55293bef54b$var$WebXRController","_targetRay","_grip","_hand","joints","inputState","pinching","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","inputSource","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","getPose","targetRaySpace","transform","inputjoint","jointPose","getJointPose","jointName","joint","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","$d5b3420140e48d897641d55293bef54b$var$WebXRManager","framebufferScaleFactor","referenceSpaceType","pose","controllers","inputSourcesMap","Map","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","onSessionEvent","controller","onSessionEnd","forEach","disconnect","animation1","isPresenting","onInputSourcesChange","inputSources","removed","added","cameraAutoUpdate","getController","getTargetRaySpace","getControllerGrip","getGripSpace","getHand","getHandSpace","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setSession","async","getContextAttributes","xrCompatible","makeXRCompatible","layerInit","antialias","baseLayer","XRWebGLLayer","updateRenderState","requestReferenceSpace","cameraLPos","cameraRPos","updateCamera","depthNear","depthFar","cameras1","cameraL1","cameraR1","ipd","projL","projR","near2","far2","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","translateX","translateZ","near21","far21","left2","right2","top2","bottom2","setProjectionFromUnion","getCamera","onAnimationFrameCallback","getViewerPose","views","cameraVRNeedsUpdate","$d5b3420140e48d897641d55293bef54b$var$WebGLMaterials","refreshUniformsCommon","uvScaleMap","uv2ScaleMap","refreshUniformsStandard","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","isMeshLambertMaterial","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","$d5b3420140e48d897641d55293bef54b$export$55c403e650ad28d0","parameters4","display","$d5b3420140e48d897641d55293bef54b$var$createCanvasElement","_context","_alpha","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_currentDrawBuffers","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","state1","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","shift","message","initGLContext","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","onMaterialDispose","releaseMaterialProgramReferences","deallocateMaterial","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","setSize","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","animation2","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","positionArray","normalArray","uvArray","colorArray","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","groupStart1","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","getProgram","onAnimationFrameCallback1","projectObject","isLOD","intersectsSprite","isImmediateRenderObject","renderObjects","camera2","object1","renderObjectImmediate","onAfterRender","lightsStateVersion","parameters5","programCacheKey","updateCommonMaterialProperties","onBuild","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isOrthographicCamera","boneTexture","computeBoneTexture","boneTextureSize","window","setFromProjectionMatrix","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissiveObjects","textures1","drawBuffersWEBGL","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","halfFloatSupportedByExt","checkFramebufferStatus","readPixels","framebuffer1","copyFramebufferToTexture","level","levelScale","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","compressedTexSubImage2D","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","unpackImageHeight","unpackSkipPixels","unpackSkipRows","unpackSkipImages","texSubImage3D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","$d5b3420140e48d897641d55293bef54b$export$1a5869459dddfad8","$d5b3420140e48d897641d55293bef54b$export$2b17e0dd8f1837fc","$d5b3420140e48d897641d55293bef54b$export$df6b198c079ba70b","$d5b3420140e48d897641d55293bef54b$export$a310785f1020d6c0","array13","stride1","arrayBuffers","_uuid","array14","ib","setUsage","isInterleavedBuffer","$d5b3420140e48d897641d55293bef54b$var$_vector$6","$d5b3420140e48d897641d55293bef54b$export$4f3b28b17d7a2b98","interleavedBuffer","offset1","interleavedBuffers","$d5b3420140e48d897641d55293bef54b$export$84b903c68a869d64","$d5b3420140e48d897641d55293bef54b$var$_geometry","$d5b3420140e48d897641d55293bef54b$var$_intersectPoint","$d5b3420140e48d897641d55293bef54b$var$_worldScale","$d5b3420140e48d897641d55293bef54b$var$_mvPosition","$d5b3420140e48d897641d55293bef54b$var$_alignedPosition","$d5b3420140e48d897641d55293bef54b$var$_rotatedPosition","$d5b3420140e48d897641d55293bef54b$var$_viewWorldMatrix","$d5b3420140e48d897641d55293bef54b$var$_vA","$d5b3420140e48d897641d55293bef54b$var$_vB","$d5b3420140e48d897641d55293bef54b$var$_vC","$d5b3420140e48d897641d55293bef54b$var$_uvA","$d5b3420140e48d897641d55293bef54b$var$_uvB","$d5b3420140e48d897641d55293bef54b$var$_uvC","$d5b3420140e48d897641d55293bef54b$export$c01017fc2f0e32a2","float32Array","interleavedBuffer1","setFromMatrixScale","rotation1","$d5b3420140e48d897641d55293bef54b$var$transformVertex","vertexPosition","mvPosition","$d5b3420140e48d897641d55293bef54b$var$_basePosition","$d5b3420140e48d897641d55293bef54b$var$_skinIndex","$d5b3420140e48d897641d55293bef54b$var$_skinWeight","$d5b3420140e48d897641d55293bef54b$var$_vector$5","$d5b3420140e48d897641d55293bef54b$var$_matrix","$d5b3420140e48d897641d55293bef54b$export$5d42c2f029f93672","material2","bindMatrixInverse","calculateInverses","skinWeight","manhattanLength","setXYZW","skinIndex","weight","getComponent","boneIndex","boneInverses","$d5b3420140e48d897641d55293bef54b$export$bb2c3ec0717e2c8c","isBone","$d5b3420140e48d897641d55293bef54b$export$2c21e84929b149b4","data3","format2","wrapS2","wrapT2","magFilter2","minFilter2","anisotropy2","$d5b3420140e48d897641d55293bef54b$var$_instanceLocalMatrix","$d5b3420140e48d897641d55293bef54b$var$_instanceWorldMatrix","$d5b3420140e48d897641d55293bef54b$var$_instanceIntersects","$d5b3420140e48d897641d55293bef54b$var$_mesh","$d5b3420140e48d897641d55293bef54b$export$7e23ced5e91bc59e","material3","raycastTimes","instanceId","getMatrixAt","raycast","$d5b3420140e48d897641d55293bef54b$export$9dd1d6697fbc79f6","linecap","linejoin","$d5b3420140e48d897641d55293bef54b$var$_start$1","$d5b3420140e48d897641d55293bef54b$var$_end$1","$d5b3420140e48d897641d55293bef54b$var$_inverseMatrix$1","$d5b3420140e48d897641d55293bef54b$var$_ray$1","$d5b3420140e48d897641d55293bef54b$var$_sphere$1","$d5b3420140e48d897641d55293bef54b$export$2034040bfbe12f9","geometry3","material4","geometry4","lineDistances","params","Line","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distanceSqToSegment","$d5b3420140e48d897641d55293bef54b$var$_start","$d5b3420140e48d897641d55293bef54b$var$_end","$d5b3420140e48d897641d55293bef54b$export$705b5dac58c594af","material5","geometry5","$d5b3420140e48d897641d55293bef54b$export$46bbc9ce4fba3102","material6","$d5b3420140e48d897641d55293bef54b$export$5e855264a077e9f","parameters6","$d5b3420140e48d897641d55293bef54b$var$_inverseMatrix","$d5b3420140e48d897641d55293bef54b$var$_ray","$d5b3420140e48d897641d55293bef54b$var$_sphere","$d5b3420140e48d897641d55293bef54b$var$_position$2","$d5b3420140e48d897641d55293bef54b$export$fd24d21d3cd7fd59","geometry6","material7","geometry7","Points","$d5b3420140e48d897641d55293bef54b$var$testPoint","rayPointDistanceSq","intersectPoint","closestPointToPoint","distanceToRay","video","mapping3","wrapS3","wrapT3","magFilter3","minFilter3","format3","type3","anisotropy3","scope2","requestVideoFrameCallback","updateVideo","video1","readyState","HAVE_CURRENT_DATA","$d5b3420140e48d897641d55293bef54b$export$be0b28729ca1f6c0","width9","height9","format4","type4","mapping4","wrapS4","wrapT4","magFilter4","minFilter4","anisotropy4","encoding3","mapping5","wrapS5","wrapT5","magFilter5","minFilter5","format5","type5","anisotropy5","isCanvasTexture","width10","height10","type6","mapping6","wrapS6","wrapT6","magFilter6","minFilter6","anisotropy6","format6","$d5b3420140e48d897641d55293bef54b$var$Earcut","data4","holeIndices","dim","hasHoles","outerLen","outerNode","$d5b3420140e48d897641d55293bef54b$var$linkedList","prev","invSize","queue","steiner","$d5b3420140e48d897641d55293bef54b$var$getLeftmost","$d5b3420140e48d897641d55293bef54b$var$compareX","$d5b3420140e48d897641d55293bef54b$var$eliminateHole","$d5b3420140e48d897641d55293bef54b$var$filterPoints","$d5b3420140e48d897641d55293bef54b$var$eliminateHoles","$d5b3420140e48d897641d55293bef54b$var$earcutLinked","clockwise","last","sum","$d5b3420140e48d897641d55293bef54b$var$signedArea","$d5b3420140e48d897641d55293bef54b$var$insertNode","$d5b3420140e48d897641d55293bef54b$var$equals","$d5b3420140e48d897641d55293bef54b$var$removeNode","again","$d5b3420140e48d897641d55293bef54b$var$area","ear","pass","$d5b3420140e48d897641d55293bef54b$var$zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","$d5b3420140e48d897641d55293bef54b$var$sortLinked","$d5b3420140e48d897641d55293bef54b$var$indexCurve","$d5b3420140e48d897641d55293bef54b$var$isEarHashed","$d5b3420140e48d897641d55293bef54b$var$isEar","$d5b3420140e48d897641d55293bef54b$var$cureLocalIntersections","$d5b3420140e48d897641d55293bef54b$var$splitEarcut","$d5b3420140e48d897641d55293bef54b$var$pointInTriangle","minTX","minTY","maxTX","maxTY","$d5b3420140e48d897641d55293bef54b$var$intersects","$d5b3420140e48d897641d55293bef54b$var$locallyInside","$d5b3420140e48d897641d55293bef54b$var$isValidDiagonal","$d5b3420140e48d897641d55293bef54b$var$splitPolygon","hole","hx","hy","mx","my","tanMin","$d5b3420140e48d897641d55293bef54b$var$sectorContainsSector","$d5b3420140e48d897641d55293bef54b$var$findHoleBridge","leftmost","px","py","$d5b3420140e48d897641d55293bef54b$var$intersectsPolygon","inside","$d5b3420140e48d897641d55293bef54b$var$middleInside","r3","p12","p22","q1","q2","o1","$d5b3420140e48d897641d55293bef54b$var$sign","o2","o3","o4","$d5b3420140e48d897641d55293bef54b$var$onSegment","num","$d5b3420140e48d897641d55293bef54b$var$Node","an","bp","$d5b3420140e48d897641d55293bef54b$export$50a45ec5a8fa659f","contour","pts","area","holes","vertices7","faces","$d5b3420140e48d897641d55293bef54b$var$removeDupEndPts","$d5b3420140e48d897641d55293bef54b$var$addContour","holeIndex","i6","$d5b3420140e48d897641d55293bef54b$export$7dac0f8fbb3b30ab","shapes3","options3","options","scope4","verticesArray","addShape1","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","$d5b3420140e48d897641d55293bef54b$var$WorldUVGenerator","amount","extrudePts","splineTube","binormal","position2","extrudeByPath","getSpacedPoints","computeFrenetFrames","shapePoints","extractPoints","isClockWise","reverse","hl","ahole","triangulateShape","concat","scalePt2","pt","vec","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","h1","hl1","i7","j1","k1","bs","vert","h2","hl2","i8","binormals","b4","bs1","i9","i10","sidewalls","contour1","layeroffset","sl","slen1","slen2","f4","f3","b5","addVertex","nextIndex","uvs4","generateTopUV","addUV","generateSideWallUV","vector2","buildLidFaces","buildSideFaces","computeVertexNormals","shapes1","$d5b3420140e48d897641d55293bef54b$var$toJSON$1","geometry8","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","$d5b3420140e48d897641d55293bef54b$export$aacf45bade30a4eb","indices11","vertices12","normals6","uvs7","groupStart2","addShape2","indexOffset","points1","shapeVertices","shapeHoles","i12","shapeHole","i13","l2","i14","l3","vertex3","i15","l4","shapes2","$d5b3420140e48d897641d55293bef54b$var$toJSON","$d5b3420140e48d897641d55293bef54b$export$98d8723ea09f75ef","text1","parameters7","font","isFont","generateShapes","$d5b3420140e48d897641d55293bef54b$export$f05a2fa5988a1b9d","vertices18","edge","edges","vertex7","indices17","o","ol","i16","j7","edge1","edge2","index11","$d5b3420140e48d897641d55293bef54b$export$d60ae7ffee1204","parameters8","$d5b3420140e48d897641d55293bef54b$export$44c67e5b3e2f1fcc","parameters9","$d5b3420140e48d897641d55293bef54b$export$9e3d9f854a8d8dca","parameters10","$d5b3420140e48d897641d55293bef54b$export$8e48fda91416ebbe","parameters11","ior","$d5b3420140e48d897641d55293bef54b$export$a329e7eb7e1af1af","parameters12","$d5b3420140e48d897641d55293bef54b$export$d171fef9914bcc52","parameters13","$d5b3420140e48d897641d55293bef54b$export$b34bdbeb7c871cc8","parameters14","$d5b3420140e48d897641d55293bef54b$export$ec3f1559d9bda861","parameters15","$d5b3420140e48d897641d55293bef54b$export$efdd6d5ebb1b0c25","parameters16","$d5b3420140e48d897641d55293bef54b$export$37080b7b378e1ae","parameters17","$d5b3420140e48d897641d55293bef54b$export$f672e35d7b72544f","arraySlice","from","to","isTypedArray","convertArray","type7","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","sortedArray","order2","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","i17","i18","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","numTimes","valueStart","multiplyQuaternionsFlat","valueEnd","blendMode","$d5b3420140e48d897641d55293bef54b$export$4a454595f745ddee","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","copySampleValue_","$d5b3420140e48d897641d55293bef54b$export$d8ced7562bc9282b","parameterPositions1","sampleValues1","sampleSize1","resultBuffer1","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","getSettings_","halfDt","o0","oP","oN","wP","wN","p6","ppp","sP","sN","$d5b3420140e48d897641d55293bef54b$export$53b17592d36ed11c","parameterPositions2","sampleValues2","sampleSize2","resultBuffer2","offset0","weight1","weight0","$d5b3420140e48d897641d55293bef54b$export$436def06d70496b6","parameterPositions3","sampleValues3","sampleSize3","resultBuffer3","$d5b3420140e48d897641d55293bef54b$export$7681eae64aeddad0","name2","interpolation1","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","trackType","json","getInterpolation","interpolation","factoryMethod","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","timeOffset","times1","timeScale","startTime","endTime","nKeys","valid","values1","prevTime","currTime","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","$d5b3420140e48d897641d55293bef54b$export$4c7089b4796793cd","$d5b3420140e48d897641d55293bef54b$export$b3a2fd27733fdc7","$d5b3420140e48d897641d55293bef54b$export$4e12a1a1b04ccebf","$d5b3420140e48d897641d55293bef54b$export$e7c89c6a3cc89ff5","parameterPositions4","sampleValues4","sampleSize4","resultBuffer4","slerpFlat","$d5b3420140e48d897641d55293bef54b$export$d6e1386f3fab9d4d","$d5b3420140e48d897641d55293bef54b$export$b952493fa13fc3d3","$d5b3420140e48d897641d55293bef54b$export$647eb676c3f24c16","$d5b3420140e48d897641d55293bef54b$export$79ad2141f3423764","duration1","blendMode2","duration","tracks1","jsonTracks","frameTime","$d5b3420140e48d897641d55293bef54b$var$parseKeyframeTrack","clipTracks","morphTargetSequence","noLoop","numMorphTargets","objectOrClipArray","clipArray","animationToMorphTargets","pattern","morphTarget","parts","name3","animationMorphTargets","clips","CreateFromMorphTargetSequence","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","blendMode1","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","validate","optimize","typeName","$d5b3420140e48d897641d55293bef54b$var$getTrackTypeForValueTypeName","$d5b3420140e48d897641d55293bef54b$export$7c17e0f15419affd","files","file","$d5b3420140e48d897641d55293bef54b$export$53aaaf7fed9d16ee","onLoad1","onProgress1","onError1","scope5","urlModifier","isLoading","itemsLoaded","itemsTotal","handlers","onStart","onLoad","onProgress","onError","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","index3","getHandler","global","$d5b3420140e48d897641d55293bef54b$export$e4a62db56fe87452","$d5b3420140e48d897641d55293bef54b$export$11b02ccb21615fa4","manager","crossOrigin","withCredentials","resourcePath","requestHeader","scope6","Promise","resolve","reject","load","$d5b3420140e48d897641d55293bef54b$var$loading","$d5b3420140e48d897641d55293bef54b$export$de6ef55ef3be029c","manager1","setTimeout","dataUriRegexResult","request","mimeType","isBase64","decodeURIComponent","atob","response","responseType","charCodeAt","Blob","parser","DOMParser","parseFromString","XMLHttpRequest","open","callbacks","overrideMimeType","header","setRequestHeader","send","$d5b3420140e48d897641d55293bef54b$export$39150bb19f4dc1ac","manager4","onImageLoad","onImageError","substr","$d5b3420140e48d897641d55293bef54b$export$ef8b534c169b03e2","manager5","urls","setCrossOrigin","setPath","loaded","loadTexture","$d5b3420140e48d897641d55293bef54b$export$b1cf4a115f3af368","manager7","isJPEG","search","$d5b3420140e48d897641d55293bef54b$export$c94d58bf7a3bdecc","arcLengthDivisions","optionalTarget","t3","getUtoTmapping","getPoint","divisions","getPointAt","lengths","getLengths","cacheArcLengths","current","arcLengths","targetArcLength","comparison","low","high","lengthBefore","t21","pt1","pt2","getTangent","segments","closed","normal7","normals11","mat","getTangentAt","MAX_VALUE","tz","makeRotationAxis","$d5b3420140e48d897641d55293bef54b$export$fd6fa092b321e4ba","aX2","aY2","xRadius1","yRadius1","aStartAngle2","aEndAngle2","aClockwise2","aRotation1","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","twoPi","deltaAngle","samePoints","fromJSON","isEllipseCurve","$d5b3420140e48d897641d55293bef54b$export$cabffd493f1aeac4","aX1","aY1","aRadius1","aStartAngle1","aEndAngle1","aClockwise1","$d5b3420140e48d897641d55293bef54b$var$CubicPoly","c0","c11","initCatmullRom","x31","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","isArcCurve","$d5b3420140e48d897641d55293bef54b$var$tmp","$d5b3420140e48d897641d55293bef54b$var$px","$d5b3420140e48d897641d55293bef54b$var$py","$d5b3420140e48d897641d55293bef54b$var$pz","$d5b3420140e48d897641d55293bef54b$export$b61f20e3a81bf432","closed2","curveType","points2","p03","p32","intPoint","p13","$d5b3420140e48d897641d55293bef54b$var$CatmullRom","$d5b3420140e48d897641d55293bef54b$var$QuadraticBezier","$d5b3420140e48d897641d55293bef54b$var$QuadraticBezierP0","$d5b3420140e48d897641d55293bef54b$var$QuadraticBezierP1","$d5b3420140e48d897641d55293bef54b$var$QuadraticBezierP2","$d5b3420140e48d897641d55293bef54b$var$CubicBezier","$d5b3420140e48d897641d55293bef54b$var$CubicBezierP0","$d5b3420140e48d897641d55293bef54b$var$CubicBezierP1","$d5b3420140e48d897641d55293bef54b$var$CubicBezierP2","$d5b3420140e48d897641d55293bef54b$var$CubicBezierP3","isCatmullRomCurve3","$d5b3420140e48d897641d55293bef54b$export$95a2cec5c7146264","v3","v01","v11","v21","v31","isCubicBezierCurve","$d5b3420140e48d897641d55293bef54b$export$2565f522f4f1df70","v02","v12","v22","v32","isCubicBezierCurve3","$d5b3420140e48d897641d55293bef54b$export$b37bb8298f497da0","isLineCurve","$d5b3420140e48d897641d55293bef54b$export$27134e4b5096519e","v14","v24","v03","v15","v25","isQuadraticBezierCurve","$d5b3420140e48d897641d55293bef54b$export$a91922fbd5df0bd5","v04","v16","v26","isQuadraticBezierCurve3","$d5b3420140e48d897641d55293bef54b$export$d384af114ea096f","points3","isSplineCurve","$d5b3420140e48d897641d55293bef54b$var$Curves","freeze","__proto__","ArcCurve","CatmullRomCurve3","CubicBezierCurve","CubicBezierCurve3","EllipseCurve","LineCurve","LineCurve3","v13","v23","isLineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","$d5b3420140e48d897641d55293bef54b$export$111ffa88cdd487ec","curves","autoClose","curve","startPoint","endPoint","getLength","curveLengths","getCurveLengths","diff","segmentLength","lens","cacheLengths","sums","getPoints","$d5b3420140e48d897641d55293bef54b$export$49a62d21c8b8d137","currentPoint","moveTo","lineTo","aCPx","aCPy","aCP1x","aCP1y","aCP2x","aCP2y","npts","aRadius","absarc","absellipse","firstPoint","lastPoint","$d5b3420140e48d897641d55293bef54b$export$5d9987e6723d242f","points5","holesPts","getPointsHoles","$d5b3420140e48d897641d55293bef54b$export$d5415290bbbd757d","color3","$d5b3420140e48d897641d55293bef54b$export$4b2cb6740e099c0f","intensity1","$d5b3420140e48d897641d55293bef54b$var$_projScreenMatrix$1","$d5b3420140e48d897641d55293bef54b$var$_lightPositionWorld$1","$d5b3420140e48d897641d55293bef54b$var$_lookTarget$1","$d5b3420140e48d897641d55293bef54b$var$LightShadow","camera1","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","$d5b3420140e48d897641d55293bef54b$var$SpotLightShadow","fov1","aspect1","far3","isSpotLightShadow","$d5b3420140e48d897641d55293bef54b$export$41ae9a00ee4021c9","color4","intensity2","power","$d5b3420140e48d897641d55293bef54b$var$_projScreenMatrix","$d5b3420140e48d897641d55293bef54b$var$_lightPositionWorld","$d5b3420140e48d897641d55293bef54b$var$_lookTarget","$d5b3420140e48d897641d55293bef54b$var$PointLightShadow","_cubeDirections","_cubeUps","$d5b3420140e48d897641d55293bef54b$export$7a2f9f523705113e","color5","intensity3","distance1","decay1","$d5b3420140e48d897641d55293bef54b$export$a38f6f1a088d3096","near3","left1","right1","top1","bottom1","scaleW","scaleH","makeOrthographic","$d5b3420140e48d897641d55293bef54b$var$DirectionalLightShadow","isDirectionalLightShadow","$d5b3420140e48d897641d55293bef54b$export$2d57c52c960d9d44","color6","intensity4","$d5b3420140e48d897641d55293bef54b$export$c1424cb85ae54a6d","color7","intensity5","$d5b3420140e48d897641d55293bef54b$export$9cd9c4d58100b370","color8","intensity6","width11","height13","$d5b3420140e48d897641d55293bef54b$export$e6e1a499301960ff","coeff","lerp","shBasis","isSphericalHarmonics3","$d5b3420140e48d897641d55293bef54b$export$1b810fb0fc316ea2","intensity7","$d5b3420140e48d897641d55293bef54b$export$ca1479a24257f322","TextDecoder","decode","fromCharCode","escape","lastIndexOf","$d5b3420140e48d897641d55293bef54b$export$16af4cb53a07e609","$d5b3420140e48d897641d55293bef54b$export$43b0106809e92336","itemSize12","normalized12","manager11","createImageBitmap","fetch","fetchOptions","credentials","headers","then","res","blob","colorSpaceConversion","imageBitmap","catch","isImageBitmapLoader","$d5b3420140e48d897641d55293bef54b$export$154a94c1b1390f5f","subPaths","currentPath","quadraticCurveTo","bezierCurveTo","splineThru","isCCW","noHoles","toShapesNoHoles","inSubpaths","shapes4","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","tmpPoints","tmpHoles","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sIdx1","sLen1","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","$d5b3420140e48d897641d55293bef54b$export$2bbce6c06f98c1c9","text","paths","text2","size2","data5","chars","line_height","yMax","yMin","underlineThickness","char","ret","$d5b3420140e48d897641d55293bef54b$var$createPath","$d5b3420140e48d897641d55293bef54b$var$createPaths","toShapes","glyph","glyphs","familyName","path2","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","ha","$d5b3420140e48d897641d55293bef54b$var$_context","$d5b3420140e48d897641d55293bef54b$export$7934d79fdd1a409f","AudioContext","webkitAudioContext","$d5b3420140e48d897641d55293bef54b$export$ad9e97c8f8cbaf8d","manager13","setResponseType","setWithCredentials","bufferCopy","decodeAudioData","audioBuffer","skyColor1","groundColor1","intensity8","color11","color21","sky","ground","isHemisphereLightProbe","color9","intensity9","color12","isAmbientLightProbe","$d5b3420140e48d897641d55293bef54b$export$aea72bdf6b67b9","gain","createGain","connect","getInput","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","audioNode","mediaElement","createMediaElementSource","mediaStream","createMediaStreamSource","play","delay","currentTime","createBufferSource","onended","onEnded","bind","setDetune","setPlaybackRate","getOutput","setTargetAtTime","getFilters","setFilters","$d5b3420140e48d897641d55293bef54b$export$3dad248fccc371a8","binding1","mixFunction","mixFunctionAdditive","setIdentity","binding","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accuIndex","offset2","currentWeight","mix","weightAdditive","originalValueOffset","getValue","targetIndex","workOffset","$d5b3420140e48d897641d55293bef54b$var$_RESERVED_CHARS_RE","$d5b3420140e48d897641d55293bef54b$var$_reservedRe","RegExp","$d5b3420140e48d897641d55293bef54b$var$_wordChar","$d5b3420140e48d897641d55293bef54b$var$_wordCharOrDot","$d5b3420140e48d897641d55293bef54b$var$_directoryRe","$d5b3420140e48d897641d55293bef54b$var$_nodeRe","$d5b3420140e48d897641d55293bef54b$var$_objectRe","$d5b3420140e48d897641d55293bef54b$var$_propertyRe","$d5b3420140e48d897641d55293bef54b$var$_trackRe","$d5b3420140e48d897641d55293bef54b$var$_supportedObjectNames","$d5b3420140e48d897641d55293bef54b$export$824ece731fa712ce","rootNode","path3","parsedPath1","parsedPath","parseTrackName","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","root","isAnimationObjectGroup","Composite","matches","results","objectName","objectIndex","propertyIndex","lastDot","substring","bone","getBoneByName","searchNodeSubtree","childNode","subTreeNode","resolvedProperty","targetObject","dest","targetArray","sourceArray","parsedPath3","_getValue_unavailable","_setValue_unavailable","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","targetGroup","optionalParsedPath","parsedPath2","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","_getValue_direct","_getValue_array","_getValue_arrayElement","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","$d5b3420140e48d897641d55293bef54b$var$AnimationAction","mixer","clip1","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","_isActiveAction","_scheduleFading","fadeOutAction","warp","fadeOut","fadeIn","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","fadeInAction","crossFadeFrom","weightInterpolant","_takeBackControlInterpolant","action","startTimeScale","endTimeScale","mixer1","now","_lendControlInterpolant","timeScaleInterpolant","_root","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","interpolants1","propertyMixers","accumulateAdditive","j8","m1","accumulate","interpolantValue","duration2","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","root1","_initMemoryManager","_accuIndex","prototypeAction","tracks2","nTracks1","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","i19","_addInactiveBinding","path4","create","clipUuid","actionsForClip","_actionsByClip","_bindAction","knownActions","_addInactiveAction","n1","_lendBinding","saveOriginalState","_lendAction","restoreOriginalState","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","scope7","stats","actions","controlInterpolants","actionsByClip","actionByRoot","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","optionalRoot","clipObject","findByName","existingAction","newAction","nActions","_update","nBindings","i20","timeInSeconds","actionsToRemove","_removeInactiveAction","binding2","$d5b3420140e48d897641d55293bef54b$export$d267c48b1accdfaf","value1","array15","stride2","meshPerAttribute1","$d5b3420140e48d897641d55293bef54b$var$_vector$4","$d5b3420140e48d897641d55293bef54b$export$1f2e587aaea1c9d2","isBox2","material8","$d5b3420140e48d897641d55293bef54b$var$_vector$2","$d5b3420140e48d897641d55293bef54b$var$_boneMatrix","$d5b3420140e48d897641d55293bef54b$var$_matrixWorldInv","$d5b3420140e48d897641d55293bef54b$var$getBoneList","boneList","i21","$d5b3420140e48d897641d55293bef54b$var$_floatView","$d5b3420140e48d897641d55293bef54b$var$EXTRA_LOD_SIGMA","$d5b3420140e48d897641d55293bef54b$var$TOTAL_LODS","$d5b3420140e48d897641d55293bef54b$var$LOD_MAX","$d5b3420140e48d897641d55293bef54b$var$backgroundMaterial","$d5b3420140e48d897641d55293bef54b$var$_lodPlanes","_sizeLods","$d5b3420140e48d897641d55293bef54b$var$_sizeLods","_sigmas","$d5b3420140e48d897641d55293bef54b$var$_sigmas","$d5b3420140e48d897641d55293bef54b$var$_createPlanes","_lodPlanes","lod","i24","sizeLod","sigma","texelSize","min3","max3","uv11","cubeFaces","vertices24","positionSize","uvSize","faceIndexSize","uv4","y7","coordinates","fill","construct","fromPoints","points6","size3","color16","color23","center3","vertices20","colors2","color17","geometry13","setColors","object2","bones2","geometry10","vertices19","color13","color22","isSkeletonHelper","bones3","geometry11","extractUrlBase","Handlers","empty","isIntersectionBox","box1","isIntersectionSphere","setFromMatrix","flattenToArrayOffset","array16","multiplyVector3","multiplyVector3Array","applyToBufferAttribute","applyToVector3Array","getInverse","extractPosition","getPosition","setRotationFromQuaternion","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateX","rotateY","rotateZ","rotateByAxis","makeFrustum","near6","far6","isIntersectionLine","intersectsLine","inverse","isIntersectionPlane","plane1","getArea","barycoordFromPoint","midpoint","getMidpoint","prototypenormal","getPlane","extractAllPoints","divisions2","extrude","options5","makeGeometry","fromAttribute","distanceToManhattan","manhattanDistanceTo","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","getChildByName","getObjectByName","renderDepth","distance2","getWorldRotation","applyMatrix","eulerOrder","value2","useQuaternion","setDrawMode","drawMode","initBones","setLens","setFocalLength","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","dynamic","setDynamic","copyIndicesArray","setArray","addIndex","addAttribute","addDrawCall","start2","count4","clearDrawCalls","clearGroups","computeOffsets","removeAttribute","drawcalls","offsets","getArrays","addShapeList","addShape","wrapAround","overdraw","wrapRGB","shading","clearTarget","color27","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","initMaterial","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","getActiveMipMapLevel","shadowMapCullFace","vr","gammaInput","gammaOutput","toneMappingWhitePoint","renderReverseSided","renderSingleSided","buffer2","setBuffer","updateCubeMap","renderer2","mapping7","onLoad2","onError2","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","revision","__THREE__","onload","onerror","MouseEvent","createEvent","initMouseEvent","self","$parcel$global","navigator","userAgent","saveAs","HTMLAnchorElement","URL","webkitURL","createElement","download","rel","href","location","createObjectURL","revokeObjectURL","f1","msSaveOrOpenBlob","autoBom","e1","title","body","innerText","HTMLElement","safari","FileReader","onloadend","readAsDataURL","$a5a9e22ae682968be9aa9fc640e72ac9$exports","$84b779ccefe24f81644b7cd4c9846f9a$exports","$d3dfc027196df876626c47bef188877c$var$scene","$d3dfc027196df876626c47bef188877c$var$renderer","$d3dfc027196df876626c47bef188877c$var$rendererWidth","innerWidth","$d3dfc027196df876626c47bef188877c$var$rendererHeight","innerHeight","$d3dfc027196df876626c47bef188877c$var$camera","appendChild","$d3dfc027196df876626c47bef188877c$var$currentMesh","$d3dfc027196df876626c47bef188877c$var$loadText","$parcel$interopDefault","$d3dfc027196df876626c47bef188877c$var$maxSize","$d3dfc027196df876626c47bef188877c$var$addGround","handleMoveZoom","tpCache","targetTouches","movedTps","tp","identifier","clientX","clientY","n1x","n1y","n2x","n2y","kx","ky","$d3dfc027196df876626c47bef188877c$var$addMoveHandlers"],"version":3,"file":"index.1506ffe8.js.map"}